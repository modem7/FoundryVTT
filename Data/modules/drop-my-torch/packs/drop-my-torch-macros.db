{"name":"Light Torch","type":"script","author":"QxyHoPS9BNhhXthV","img":"icons/svg/fire.svg","scope":"global","command":"function tokenUpdate(data) {\n  let targets = canvas.tokens.controlled;\n  for( let i = 0; i < targets.length; i++) {\n    targets[i].document.update(data);\n  }\n}\n\nlet torchAnimation = {\"type\": \"torch\", \"speed\": 1, \"intensity\": 1, \"reverse\": false};\n\nlet noAnimation = {\"type\": \"none\", \"speed\": 5, \"intensity\": 5, \"reverse\": false};\n\nlet dialogEditor = new Dialog({\n  title: `Token Light Picker`,\n  content: `Pick the light source the selected token is holding.`,\n  buttons: {\n    none: {\n      label: `None`,\n      callback: () => {\n        tokenUpdate({\"light.dim\": 0, \"light.bright\": 0, \"light.angle\": 360,});\n        dialogEditor.render(true);\n      }\n    },\n    torch: {\n      label: `Torch`,\n      callback: () => {\n        tokenUpdate({\"light.dim\": 40, \"light.bright\": 20, \"light.angle\": 0, \"light.luminosity\": 0.5, \"light.animation\": torchAnimation});\n        dialogEditor.render(true);\n      }\n    },\n    light: {\n      label: `Light cantrip`,\n      callback: () => {\n        tokenUpdate({\"light.dim\": 40, \"light.bright\": 20, \"light.angle\": 360, \"light.luminosity\": 0.5, \"light.animation\": noAnimation});\n        dialogEditor.render(true);\n      }\n    },\n    lamp: {\n      label: `Lamp`,\n      callback: () => {\n        tokenUpdate({\"light.dim\": 45, \"light.bright\": 15, \"light.angle\": 360, \"light.luminosity\": 0.5, \"light.animation\": torchAnimation});\n        dialogEditor.render(true);\n      }\n    },\n    bullseye: {\n      label: `Bullseye Lantern`,\n      callback: () => {\n        tokenUpdate({\"light.dim\": 120, \"light.bright\": 60, \"light.angle\": 45, \"light.luminosity\": 0.5, \"light.animation\": torchAnimation});\n        dialogEditor.render(true);\n      }\n    },\n    hoodedOpen: {\n      label: `Hooded Lantern (Open)`,\n      callback: () => {\n        tokenUpdate({\"light.dim\": 60, \"light.bright\": 30, \"light.angle\": 360, \"light.luminosity\": 0.5, \"light.animation\": torchAnimation});\n        dialogEditor.render(true);\n      }\n    },\n    hoodedClosed: {\n      label: `Hooded Lantern (Closed)`,\n      callback: () => {\n        tokenUpdate({\"light.dim\": 5, \"light.bright\": 0, \"light.angle\": 360, \"light.luminosity\": 0.5, \"light.animation\": torchAnimation});\n        dialogEditor.render(true);\n      }\n    },\n    darkness: {\n      label: `Darkness spell`,\n      callback: () => {\n        tokenUpdate({\"light.dim\": 0, \"light.bright\": 15, \"light.angle\": 360, \"light.luminosity\": -0.15, \"light.animation\": noAnimation});\n        dialogEditor.render(true);\n      }\n    },\n    candle: {\n      label: `Candle`,\n      callback: () => {\n        tokenUpdate({\"light.dim\": 10, \"light.bright\": 5, \"light.angle\": 0, \"light.luminosity\": 0.5, \"light.animation\": torchAnimation});\n        dialogEditor.render(true);\n      }\n    },\n    close: {\n      icon: \"<i class='fas fa-tick'></i>\",\n      label: `Close`\n    },\n  },\n  default: \"close\",\n  close: () => {}\n});\n\ndialogEditor.render(true)","folder":null,"sort":0,"permission":{"default":2,"QxyHoPS9BNhhXthV":3},"flags":{"core":{"sourceId":"Macro.mn5Tv7u1EOOnsHIy"},"scene-packer":{"sourceId":"Macro.mn5Tv7u1EOOnsHIy","defaultPermission":2}},"_id":"cru1gyH7vIuG0N8G"}
{"_id":"pYyuKjQksQlogttK","name":"Drop Torch","type":"script","author":"XZ3zo1osrSuwKClq","img":"icons/svg/fire.svg","scope":"global","command":"let targets = canvas.tokens.controlled;\nlet actorName = 'Dropped Torch';\nfor( let i = 0; i < targets.length; i++) {\n  let target = targets[i];\n  let center = target.center;\n  switch (target.data.light.dim) {\n    case 60:\n      actorName = 'Dropped Hooded Lantern (open)';\n      break;\n    case 10:\n      actorName = 'Dropped Candle';\n      break;\n    case 5:\n      actorName = 'Dropped Hooded Lantern (closed)';\n      break;\n    case 120:\n      actorName = 'Dropped Bullseye Lantern';\n      break;\n    case 45:\n      actorName = 'Dropped Lamp';\n      break;\n  }\n  try {\n    let protoToken = duplicate(game.actors.getName(actorName).data.token);\n    protoToken.x = center.x;\n    protoToken.y = center.y;\n    canvas.scene.createEmbeddedDocuments(\"Token\", [protoToken])\n  }\n  catch(err) {\n    ui.notifications.error('Actor not found. Please import all from \"Drop My Torch tokens\" compendium pack');\n  }\n\n  target.document.update({\"light.dim\": 0, \"light.bright\": 0});\n}","folder":null,"sort":0,"permission":{"default":0,"XZ3zo1osrSuwKClq":3},"flags":{"core":{"sourceId":"Macro.50PjwvRxSW29mUki"}}}

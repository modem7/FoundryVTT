{
  "version": 3,
  "sources": ["../node_modules/dayjs/dayjs.min.js", "../scripts/Settings.ts", "../scripts/integrations/SimpleCalendarIntegration.ts", "../scripts/Helpers/Logger.ts", "../scripts/Helpers/Dates.ts", "../scripts/EncounterJournal.ts", "../scripts/CombatFlag.ts", "../scripts/enums.ts", "../scripts/stats/Stat.ts", "../scripts/Helpers/Trans.ts", "../scripts/EncounterRenderer.ts", "../scripts/StatManager.ts", "../scripts/stats/MidiQolStat.ts", "../scripts/stats/DND5eStat.ts", "../scripts/CampaignRenderer.ts", "../scripts/Chat.ts", "../scripts/Helpers/Gamemaster.ts", "../scripts/CampaignStat.ts", "../scripts/stats/PF2eStat.ts", "../scripts/stats/ReadySetRollStat.ts", "../scripts/Handlers.ts", "../scripts/parsers/DND5e.ts", "../scripts/parsers/MidiQol.ts", "../scripts/parsers/ReadySetRoll.ts", "../scripts/SetupHooksDND5e.ts", "../scripts/parsers/PF2e.ts", "../scripts/SetupHooksPF2e.ts", "../scripts/SetupHooks.ts", "../scripts/panels/CampaignStatsPanel.ts", "../scripts/panels/Helpers.ts", "../scripts/panels/CampaignTrackingPanel.ts", "../scripts/ModuleSettings.ts", "../scripts/module.ts"],
  "sourcesContent": ["!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=function(t){return t instanceof _},S=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=v;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),l=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?l(1,0):l(31,11);case f:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,l=this;r=Number(r);var $=O.p(h),y=function(t){var e=w(l);return O.w(e.date(e.date()+Math.round(t*r)),l)};if($===f)return this.set(f,this.$M+r);if($===c)return this.set(c,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=n.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},$={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:i};return r.replace(y,(function(t,e){return e||$[t]||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,v=this-M,g=O.m(this,M);return g=($={},$[c]=g/12,$[f]=g,$[h]=g/3,$[o]=(v-m)/6048e5,$[a]=(v-m)/864e5,$[u]=v/n,$[s]=v/e,$[i]=v/t,$)[y]||v,l?g:O.a(g)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),T=_.prototype;return w.prototype=T,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){T[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[g],w.Ls=D,w.p={},w}));", "export const MODULE_NAME = \"FVTT Encounter Statistics\";\nexport const MODULE_ID = \"encounter-stats\";\nexport const OPTIONS_ID = \"EncounterStats\";\n\nexport const STORAGE_NAME = \"encounter-stats-data\";\nexport const STORAGE_NAME_CAMPAIGN_DATA =\n  \"do-not-delete-encounter-stats-data-campaign\";\nexport const STORAGE_NAME_CAMPAIGN_ID = \"Campaign Statistics\";\n\nexport const OPT_ENABLE = \"enable\";\nexport const OPT_ENABLE_EXPORT_JSON = \"enableExportJson\";\n\nexport const OPT_SETTINGS_DICE_STREAK_ENABLE = \"enableDiceStreak\";\nexport const OPT_SETTINGS_DICE_STREAK_TO_CHAT_ENABLE = \"enableDiceStreakToChat\";\n", "export default class SimpleCalendarIntegration {\n  static IsEnabled() {\n    return typeof SimpleCalendar !== \"undefined\";\n  }\n\n  static GetCurrentDateToString() {\n    return `${SimpleCalendar.api.getCurrentDay()?.name} ${\n      SimpleCalendar.api?.getCurrentMonth()?.name\n    } ${SimpleCalendar.api?.getCurrentYear()?.numericRepresentation} ${\n      SimpleCalendar.api?.getCurrentYear()?.postfix\n    }`;\n  }\n}\n", "class Logger {\n  public static log(\n    description: string,\n    module = \"global\",\n    data: unknown = {}\n  ): void {\n    console.log(\"Encounter Stats\", module, description, data);\n  }\n\n  public static debug(\n    description: string,\n    module = \"global\",\n    data: unknown = {}\n  ): void {\n    console.debug(\"Encounter Stats\", module, description, data);\n  }\n\n  public static warn(\n    description: string,\n    module = \"global\",\n    data: unknown = {}\n  ): void {\n    console.warn(\"Encounter Stats\", module, description, data);\n  }\n\n  public static error(\n    description: string,\n    module = \"global\",\n    data: unknown = {}\n  ): void {\n    console.error(\"Encounter Stats\", module, description, data);\n  }\n}\n\nexport default Logger;\n", "import dayjs from \"dayjs\";\n\nclass Dates {\n  static get now(): DateOptions {\n    const currentDate = dayjs();\n    return {\n      id: currentDate.toISOString().replace(/[-]/g, \"\").substring(0, 8),\n      dateTimeDisplay: currentDate.format(\"DD MMMM YYYY HH:mm\"),\n      dateDisplay: currentDate.format(\"DD MMMM YYYY\"),\n    };\n  }\n}\n\nexport default Dates;\n", "import SimpleCalendarIntegration from \"./integrations/SimpleCalendarIntegration\";\nimport Logger from \"./Helpers/Logger\";\nimport Dates from \"./Helpers/Dates\";\n\nclass EncounterJournal {\n  static readonly JOURNAL_TITLE = \"Encounter Statistics\";\n\n  static get IsJournalSetup(): boolean {\n    return (\n      game.journal?.find((e: JournalEntry) => e.name === this.JOURNAL_TITLE) !==\n      undefined\n    );\n  }\n\n  static async CreateJournal() {\n    await JournalEntry.create(\n      {\n        name: this.JOURNAL_TITLE,\n      },\n      { renderSheet: false, activate: false }\n    );\n\n    await EncounterJournal.CreateCampaignJournalEntryPage();\n  }\n\n  static async CreateJournalEntryPage(encounterId: string) {\n    let title = `${Dates.now.dateTimeDisplay}`;\n\n    if (SimpleCalendarIntegration.IsEnabled()) {\n      title = `${SimpleCalendarIntegration.GetCurrentDateToString()} (${encounterId})`;\n    }\n\n    const journalEntry = game.journal?.find(\n      (e: JournalEntry) => e.name === this.JOURNAL_TITLE\n    );\n\n    if (!journalEntry) {\n      Logger.error(\n        `No Journal found with name ${this.JOURNAL_TITLE}`,\n        \"encounterjournal.CreateJournalEntryPage\"\n      );\n      return;\n    }\n    await journalEntry.createEmbeddedDocuments(\"JournalEntryPage\", [\n      {\n        name: title,\n        type: \"text\",\n        text: {\n          content: \"\",\n          format: CONST.JOURNAL_ENTRY_PAGE_FORMATS.HTML,\n        },\n        \"flags.encounter-stats.encounterId\": encounterId,\n      },\n    ]);\n\n    await this.SortJournalData();\n  }\n\n  // Temporary for migration from Journal\n  static async DeleteCampaignJournalEntryPageData() {\n    const journalEntryPage = game.journal\n      ?.find((e: JournalEntry) => e.name === this.JOURNAL_TITLE)\n      ?.pages.find(\n        (e: JournalEntryPage) =>\n          e.getFlag(\"encounter-stats\", \"campaignstats\") === \"data\"\n      );\n\n    journalEntryPage.delete();\n  }\n\n  static async CreateCampaignJournalEntryPage() {\n    const journalEntry = game.journal?.find(\n      (e: JournalEntry) => e.name === this.JOURNAL_TITLE\n    );\n\n    if (!journalEntry) {\n      Logger.error(\n        `No Journal found with name ${this.JOURNAL_TITLE}`,\n        \"encounterjournal.CreateCampaignJournalEntryPage\"\n      );\n      return;\n    }\n    await journalEntry.createEmbeddedDocuments(\"JournalEntryPage\", [\n      {\n        name: \"Campaign Statistics\",\n        type: \"text\",\n        text: {\n          content: \"\",\n          format: CONST.JOURNAL_ENTRY_PAGE_FORMATS.HTML,\n        },\n        \"flags.encounter-stats.campaignstats\": \"view\",\n      },\n    ]);\n  }\n\n  static async UpdateJournalData(\n    data: string,\n    flagName: string,\n    flagValue: string\n  ) {\n    const journalEntryPage = game.journal\n      ?.find((e: JournalEntry) => e.name === this.JOURNAL_TITLE)\n      ?.pages.find(\n        (e: JournalEntryPage) =>\n          e.getFlag(\"encounter-stats\", flagName) === flagValue\n      );\n\n    if (!journalEntryPage) {\n      Logger.error(\n        `No Journal found with name ${this.JOURNAL_TITLE} and ${flagName} ${flagValue}`,\n        \"encounterjournal.UpdateJournalData\"\n      );\n      return;\n    }\n\n    await EncounterJournal._updateJournalPage({\n      _id: journalEntryPage._id,\n      flags: journalEntryPage.flags,\n      text: {\n        content: data,\n      },\n    });\n  }\n\n  private static async SortJournalData() {\n    const journalEntry = game.journal?.getName(this.JOURNAL_TITLE);\n\n    let sortValue = 2000;\n\n    const sortedJournalsByName = new Map(\n      [...journalEntry.pages.entries()].sort((a, b) =>\n        a.name > b.name ? 1 : -1\n      )\n    );\n\n    for (const [, journalEntryPage] of sortedJournalsByName.entries()) {\n      if (\n        journalEntryPage.getFlag(\"encounter-stats\", \"campaignstats\") === \"view\"\n      ) {\n        await EncounterJournal._updateJournalPage({\n          _id: journalEntryPage._id,\n          flags: {},\n          sort: 1000,\n        });\n      } else {\n        await EncounterJournal._updateJournalPage({\n          _id: journalEntryPage._id,\n          flags: {},\n          sort: sortValue,\n        });\n        sortValue = sortValue + 1000;\n      }\n    }\n  }\n\n  private static async _updateJournalPage(update: unknown) {\n    await game.journal\n      ?.getName(this.JOURNAL_TITLE)\n      .updateEmbeddedDocuments(\"JournalEntryPage\", [update], {\n        diff: false,\n        render: false,\n      });\n  }\n\n  // Temporary for migration from Journal\n  static async GetCampaignJournal(): Promise<CampaignStats | undefined> {\n    const journalEntryPage = game.journal\n      ?.find((e: JournalEntry) => e.name === this.JOURNAL_TITLE)\n      ?.pages.find(\n        (e: JournalEntryPage) =>\n          e.getFlag(\"encounter-stats\", \"campaignstats\") === \"data\"\n      );\n\n    if (!journalEntryPage) {\n      return;\n    }\n\n    return <CampaignStats>(\n      JSON.parse(\n        journalEntryPage.text.content.replace(\"<p>\", \"\").replace(\"</p>\", \"\")\n      )\n    );\n  }\n}\n\nexport default EncounterJournal;\n", "export default class CombatFlag {\n  static IsCurrentSceneCombatSet(item: string): boolean {\n    if (!game.combat?.active) return false;\n\n    return game.combat?.getFlag(\"encounter-stats\", item) !== undefined;\n  }\n\n  static async Get(\n    item: string,\n    actorId?: string\n  ): Promise<Encounter | undefined> {\n    if (!CombatFlag.IsCurrentSceneCombatSet(item)) return;\n\n    let flagValue = game.combat?.getFlag(\"encounter-stats\", item);\n\n    // if actorId is passed\n    if (actorId) {\n      // Check current encounter has them\n      if (!flagValue.combatants.find((h) => h.id === actorId)) {\n        // If not, search the first encounter that has them\n        const flagValueSearchAcrossCombats = await game.combats.find((f) =>\n          f\n            .getFlag(\"encounter-stats\", item)\n            .combatants.find((h) => h.id === actorId)\n        );\n        if (!flagValueSearchAcrossCombats) return;\n\n        flagValue = flagValueSearchAcrossCombats.getFlag(\n          \"encounter-stats\",\n          item\n        );\n        // If not undefined, return that combat\n      }\n    }\n\n    return flagValue;\n  }\n\n  static async Save(flagName: string, data: Encounter) {\n    await game.combats\n      .find((f) => f.id === data.encounterId)\n      .setFlag(\"encounter-stats\", flagName, data);\n  }\n}\n", "export enum CombatDetailType {\n  Damage = \"damage\",\n  Attack = \"attack\",\n  ItemCard = \"itemCard\",\n  MidiQol = \"midiqol\",\n  ReadySetRoll = \"readysetroll\",\n  None = \"none\",\n}\n\nexport enum RoleType {\n  Fumble = \"fumble\",\n  Critial = \"critical\",\n}\n\nexport enum CombatantType {\n  Character = \"character\",\n  NPC = \"npc\",\n}\n\nexport enum ValidHeals {\n  heal = 1,\n}\n\nexport enum ValidAttacks {\n  mwak = 1,\n  rwak = 2,\n  msak = 3,\n  rsak = 4,\n  save = 5,\n}\n\nexport enum ValidRollEvent {\n  mwak = 1,\n  rwak = 2,\n  msak = 3,\n  rsak = 4,\n  save = 5,\n  heal = 6,\n}\n\nexport enum ChatType {\n  DND5e = 1,\n  MidiQol = 2,\n  PF2e = 3,\n  RSR = 4,\n}\n", "import StatManager from \"../StatManager\";\nimport {\n  CombatantType,\n  ValidAttacks,\n  ValidHeals,\n  ValidRollEvent,\n} from \"../enums\";\nimport Logger from \"../Helpers/Logger\";\nimport Dates from \"../Helpers/Dates\";\n\nexport default class Stat {\n  _encounter: Encounter;\n\n  constructor(encounterId?: string) {\n    if (encounterId) {\n      const date = Dates.now.dateTimeDisplay;\n      this._encounter = {\n        encounterId: encounterId,\n        round: 1,\n        overview: {\n          start: date,\n          end: \"\",\n          realDate: date,\n          scene: {\n            id: \"\",\n            name: \"\",\n            thumb: \"\",\n          },\n        },\n        enemies: [],\n        combatants: [],\n        top: {\n          maxDamage: \"\",\n          mostDamageInOneTurn: \"\",\n          highestAvgDamage: \"\",\n          highestMaxDamage: \"\",\n          mostKills: \"\",\n          mostHealing: \"\",\n          mostSupportActions: \"\",\n          mostBattlefieldActions: \",\",\n        },\n        templateHealthCheck: [],\n        partySummary: {\n          averageDamagePerRound: 0,\n          lowestDamagePerRound: 0,\n          highestDamagePerRound: 0,\n          totalDamage: 0,\n          totalDamagePerRound: [],\n        },\n      };\n    }\n  }\n\n  set encounter(encounter) {\n    this._encounter = encounter;\n  }\n\n  get encounter(): Encounter {\n    return this._encounter;\n  }\n\n  get hasEncounter(): boolean {\n    return this._encounter !== undefined;\n  }\n\n  get currentRound(): number {\n    return this._encounter.round;\n  }\n\n  UpdateEnd() {\n    if (!this._encounter?.overview) return;\n    this._encounter.overview.end = Dates.now.dateTimeDisplay;\n  }\n\n  AddKill(targetName: string, tokenId: string) {\n    const killData = <CombatantKills>{};\n\n    const combatantStat = this.GetCombatantStatsByTokenId(tokenId);\n    if (!combatantStat) {\n      Logger.warn(\n        `No combatant statistics for TokenID ${tokenId}`,\n        \"stat.AddKill\",\n        tokenId\n      );\n      return;\n    }\n\n    killData.round = this.currentRound;\n    killData.tokenName = targetName;\n\n    combatantStat.kills.push(killData);\n  }\n\n  UpdateHealth(actor: Actor) {\n    const healthData = <CombatantHealthData>{};\n    if (!actor.id) {\n      Logger.warn(`No Actor ID passed`, \"stat.UpdateHealth\", actor);\n      return;\n    }\n\n    const combatantStat = this.GetCombatantStats(actor.id);\n    if (!combatantStat) {\n      Logger.warn(\n        `No combatant statistics for TokenID ${actor.id}`,\n        \"stat.UpdateHealth\",\n        actor\n      );\n      return;\n    }\n    healthData.round = this.currentRound;\n    healthData.actorId = actor?.id;\n    healthData.max = actor.system.attributes.hp.max;\n    healthData.current = actor.system.attributes.hp.value;\n\n    if (combatantStat.health.length > 0) {\n      healthData.previous =\n        combatantStat.health[combatantStat.health.length - 1].current;\n    } else {\n      healthData.previous = combatantStat.hp;\n    }\n\n    if (healthData.current > healthData.previous) {\n      healthData.diff = healthData.current - healthData.previous;\n      healthData.isheal = true;\n    } else if (healthData.current < healthData.previous) {\n      healthData.diff = healthData.previous - healthData.current;\n      healthData.isdamage = true;\n    }\n    combatantStat.health.push(healthData);\n  }\n\n  AddEnemy(enemy: Enemies) {\n    this._encounter.enemies.push(enemy);\n  }\n\n  async AddCombatant(actor: Actor, tokenId: string, initiative: number | null) {\n    if (!actor || !actor.id || !actor.name) {\n      Logger.warn(`No valid actor passed ${actor}`, \"stat.AddCombatant\", actor);\n      return;\n    }\n    const tokenImage = await actor.getTokenImages();\n\n    if (!Stat.IsValidCombatant(actor?.type)) return;\n\n    const newCombatant: EncounterCombatant = {\n      name: actor.name,\n      id: actor.id,\n      tokenId: tokenId,\n      img: tokenImage.length > 0 ? tokenImage[0] : actor.img,\n      type: actor.type,\n      hp: actor.system.attributes.hp.value,\n      max: actor.system.attributes.hp.max,\n      ac: actor.system.attributes.ac.value,\n      initiative: initiative,\n      abilities: {\n        cha: actor.system.abilities.cha.value,\n        con: actor.system.abilities.con.value,\n        dex: actor.system.abilities.dex.value,\n        int: actor.system.abilities.int.value,\n        str: actor.system.abilities.str.value,\n        wis: actor.system.abilities.wis.value,\n      },\n      events: [],\n      health: [],\n      kills: [],\n      summaryList: {\n        min: 0,\n        max: 0,\n        avg: 0,\n        total: 0,\n      },\n      roundSummary: {\n        totals: [\n          {\n            round: this.currentRound,\n            damageTotal: 0,\n          },\n        ],\n      },\n    };\n\n    let currentCombatant = this._encounter.combatants.find(\n      (f) => f.id === newCombatant.id\n    );\n\n    if (!currentCombatant) {\n      this._encounter.combatants.push(newCombatant);\n      currentCombatant = this._encounter.combatants.find(\n        (f) => f.id === newCombatant.id\n      );\n      if (currentCombatant?.initiative) {\n        this._encounter.combatants.sort((a, b) =>\n          (a.initiative ?? 0) > (b.initiative ?? 0) ? 1 : -1\n        );\n      }\n    }\n\n    if (!currentCombatant?.initiative && newCombatant.initiative) {\n      currentCombatant.initiative = newCombatant.initiative;\n      this._encounter.combatants.sort((a, b) =>\n        (a.initiative ?? 0) < (b.initiative ?? 0) ? 1 : -1\n      );\n    }\n  }\n\n  IsValidAttack(attackType: string) {\n    return Object.values(ValidAttacks).includes(attackType);\n  }\n\n  IsHealingSpell(attackType: string) {\n    return Object.values(ValidHeals).includes(attackType);\n  }\n\n  static IsValidCombatant(type: string): boolean {\n    return type === CombatantType.Character;\n  }\n\n  protected IsValidRollEvent(attackType: string) {\n    return Object.values(ValidRollEvent).includes(attackType);\n  }\n\n  public UpdateScene(id: string, name: string, thumb: string) {\n    if (!this._encounter?.overview?.scene) return;\n    this._encounter.overview.scene.name = name;\n    this._encounter.overview.scene.thumb = thumb;\n    this._encounter.overview.scene.id = id;\n  }\n\n  public UpdateRound(currentRound: number) {\n    if (this._encounter.round !== currentRound) {\n      this._encounter.round = currentRound;\n    }\n  }\n\n  GetCombatantStats(actorId: string): EncounterCombatant | undefined {\n    return this._encounter?.combatants?.find((f) => f.id === actorId);\n  }\n\n  GetCombatantStatsByTokenId(tokenId: string): EncounterCombatant | undefined {\n    return this._encounter.combatants.find((f) => f.tokenId === tokenId);\n  }\n\n  async Save(): Promise<void> {\n    if (!this._encounter?.combatants) return;\n    this.GenerateCombatantStats();\n    this.GetTopStats();\n    this._partySummary(this._encounter);\n    await StatManager.SaveStat(this._encounter);\n  }\n\n  private SetTopEncounter(top: EncounterTop) {\n    this._encounter.top = top;\n  }\n\n  private _setPartySummary(partyStats: PartyEncounterStats) {\n    this._encounter.partySummary = partyStats;\n  }\n\n  private GenerateCombatantStats(): void {\n    this._encounter.combatants.forEach((combatantStat) => {\n      const combatantAttacks = combatantStat.events.filter((f) => {\n        return this.IsValidAttack(f.actionType);\n      });\n\n      const combatantTotalDamage: Array<number> = combatantAttacks.map((m) => {\n        return m.damageTotal ?? 0;\n      });\n\n      combatantStat.summaryList =\n        this.GetSummaryStatsFromArray(combatantTotalDamage);\n\n      const combatantTotalDamagePerRound = combatantAttacks.map((m) => {\n        return <EncounterRoundTotal>{\n          round: m.round,\n          damageTotal: m.damageTotal ?? 0,\n        };\n      });\n\n      combatantStat.roundSummary = this.GetRoundSummaryStats(\n        combatantTotalDamagePerRound\n      );\n    });\n  }\n\n  private GetRoundSummaryStats(\n    encounterRoundTotals: Array<EncounterRoundTotal>\n  ) {\n    const individual = this.GroupBy(encounterRoundTotals, \"round\");\n    const rounds = <EncounterRoundSummary>{\n      totals: [],\n    };\n    for (const round in individual) {\n      rounds.totals.push(<EncounterRoundTotal>{\n        round: parseInt(round),\n        damageTotal: individual[round]\n          .map((m) => {\n            return m.damageTotal ?? 0;\n          })\n          .reduce(this.AddAccumulator, 0),\n      });\n    }\n\n    return rounds;\n  }\n\n  private GetSummaryStatsFromArray(\n    combatantTotalDamage: Array<number>\n  ): CombatantEventSummaryList {\n    if (combatantTotalDamage.length === 0) {\n      return {\n        min: 0,\n        max: 0,\n        avg: 0,\n        total: 0,\n      };\n    }\n\n    return <CombatantEventSummaryList>{\n      min: Math.min(...combatantTotalDamage),\n      max: Math.max(...combatantTotalDamage),\n      avg: Math.round(\n        combatantTotalDamage.reduce(this.AddAccumulator, 0) /\n          combatantTotalDamage.length\n      ),\n      total: combatantTotalDamage.reduce(this.AddAccumulator, 0),\n    };\n  }\n\n  private GetTopStats(): void {\n    if (this._encounter.combatants.length === 0) {\n      this.SetTopEncounter({\n        maxDamage: \"\",\n        mostDamageInOneTurn: \"\",\n        highestAvgDamage: \"\",\n        highestMaxDamage: \"\",\n        mostKills: \"\",\n        mostHealing: \"\",\n        mostSupportActions: \"\",\n        mostBattlefieldActions: \"\",\n      });\n      return;\n    }\n\n    const mostKills = this._encounter.combatants\n      .map((m) => {\n        if (m.kills.length === 0) {\n          return {\n            name: \"None\",\n            total: 0,\n          };\n        }\n        return {\n          name: m.name,\n          total: m.kills.length,\n        };\n      })\n      .reduce(function (max, obj) {\n        return obj.total > max.total ? obj : max;\n      });\n\n    const mostHealing = this._encounter.combatants\n      .map((m) => {\n        if (m.events.length === 0) {\n          return {\n            name: \"None\",\n            total: 0,\n          };\n        }\n        return {\n          name: m.name,\n          total: m.events.filter((f) => {\n            return f.actionType === \"heal\";\n          }).length,\n        };\n      })\n      .reduce(function (max, obj) {\n        return obj.total > max.total ? obj : max;\n      });\n\n    const mostSupportActions = this._encounter.combatants\n      .map((m) => {\n        if (m.events.length === 0) {\n          return {\n            name: \"None\",\n            total: 0,\n          };\n        }\n        return {\n          name: m.name,\n          total: m.events.filter((f) => {\n            return f.actionType === \"save\" || f.actionType === \"heal\";\n          }).length,\n        };\n      })\n      .reduce(function (max, obj) {\n        return obj.total > max.total ? obj : max;\n      });\n\n    const mostBattlefieldActions = this._encounter.combatants\n      .map((m) => {\n        if (m.events.length === 0) {\n          return {\n            name: \"None\",\n            total: 0,\n          };\n        }\n        return {\n          name: m.name,\n          total: m.events.filter((f) => {\n            return f.actionType === \"other\";\n          }).length,\n        };\n      })\n      .reduce(function (max, obj) {\n        return obj.total > max.total ? obj : max;\n      });\n\n    const mostDamageInOneTurn = this._encounter.combatants\n      .map((m) => {\n        if (m.roundSummary.totals.length === 0) {\n          return {\n            name: \"None\",\n            total: 0,\n          };\n        }\n        return {\n          name: m.name,\n          total: m.roundSummary.totals.reduce(function (max, obj) {\n            return obj.damageTotal > max.damageTotal ? obj : max;\n          }).damageTotal,\n        };\n      })\n      .reduce((a, b) => (a.total > b.total ? a : b));\n\n    const result = this._encounter.combatants.map((m) => {\n      if (m.summaryList.total === 0) {\n        return {\n          name: \"None\",\n          min: 0,\n          max: 0,\n          avg: 0,\n          total: 0,\n        };\n      }\n      return {\n        name: m.name,\n        min: m.summaryList.min,\n        max: m.summaryList.max,\n        avg: m.summaryList.avg,\n        total: m.summaryList.total,\n      };\n    });\n\n    const maxDamage = result.reduce(function (max, obj) {\n      return obj.total > max.total ? obj : max;\n    });\n    const highestAvgDamage = result.reduce(function (max, obj) {\n      return obj.avg > max.avg ? obj : max;\n    });\n    const highestMaxDamage = result.reduce(function (max, obj) {\n      return obj.max > max.max ? obj : max;\n    });\n\n    this.SetTopEncounter({\n      maxDamage: `${maxDamage.name}<br />${maxDamage.total}`,\n      mostDamageInOneTurn: `${mostDamageInOneTurn.name}<br />${mostDamageInOneTurn.total}`,\n      highestAvgDamage: `${highestAvgDamage.name}<br />${highestAvgDamage.avg}`,\n      highestMaxDamage: `${highestMaxDamage.name}<br />${highestMaxDamage.max}`,\n      mostKills: `${mostKills.name}<br />${mostKills.total}`,\n      mostHealing: `${mostHealing.name}<br />${mostHealing.total}`,\n      mostSupportActions: `${mostSupportActions.name}<br />${mostSupportActions.total}`,\n      mostBattlefieldActions: `${mostBattlefieldActions.name}<br />${mostBattlefieldActions.total}`,\n    });\n  }\n\n  private _partySummary(encounter: Encounter): PartyEncounterStats | void {\n    if (encounter.combatants.length === 0) {\n      return;\n    }\n    const result = encounter.combatants\n      .filter((f) => f.type === \"character\")\n      .map((m) => {\n        return {\n          totals: m.roundSummary.totals,\n        };\n      })\n      .reduce((a, b) => {\n        return {\n          totals: a.totals?.concat(b.totals) ?? {},\n        };\n      });\n\n    let totalDamage = 0;\n    const totalDamagePerRound: Array<EncounterRoundTotal> = [];\n    if (result?.totals.length > 0) {\n      totalDamage =\n        result.totals.reduce((accu, item) => accu + item.damageTotal, 0) ?? 0;\n\n      result.totals.reduce(function (res, value) {\n        if (!res[value.round]) {\n          res[value.round] = { round: value.round, damageTotal: 0 };\n          totalDamagePerRound.push(res[value.round]);\n        }\n        res[value.round].damageTotal += value.damageTotal;\n        return res;\n      }, {});\n    }\n\n    let averageDamagePerRound = 0;\n    let lowestDamagePerRound = 0;\n    let highestDamagePerRound = 0;\n    if (totalDamagePerRound.length > 0) {\n      averageDamagePerRound = totalDamage / totalDamagePerRound.length;\n      lowestDamagePerRound =\n        totalDamagePerRound?.reduce(function (previousValue, currentValue) {\n          return currentValue.damageTotal < previousValue.damageTotal\n            ? currentValue\n            : previousValue;\n        }).damageTotal ?? 0;\n      highestDamagePerRound =\n        totalDamagePerRound?.reduce(function (previousValue, currentValue) {\n          return currentValue.damageTotal > previousValue.damageTotal\n            ? currentValue\n            : previousValue;\n        }).damageTotal ?? 0;\n    }\n\n    this._setPartySummary({\n      averageDamagePerRound: Math.round(averageDamagePerRound),\n      lowestDamagePerRound: Math.round(lowestDamagePerRound),\n      highestDamagePerRound: Math.round(highestDamagePerRound),\n      totalDamage: Math.round(totalDamage),\n      totalDamagePerRound: totalDamagePerRound,\n    });\n\n    return {\n      averageDamagePerRound: Math.round(averageDamagePerRound),\n      lowestDamagePerRound: Math.round(lowestDamagePerRound),\n      highestDamagePerRound: Math.round(highestDamagePerRound),\n      totalDamage: Math.round(totalDamage),\n      totalDamagePerRound: totalDamagePerRound,\n    };\n  }\n\n  private GroupBy(xs, key) {\n    return xs.reduce(function (rv, x) {\n      (rv[x[key]] = rv[x[key]] || []).push(x);\n      return rv;\n    }, {});\n  }\n\n  private AddAccumulator(accumulator: number, a: number) {\n    return accumulator + a;\n  }\n}\n", "class Trans {\n  static Get(translationKey: string): string {\n    return game.i18n.format(`EncounterStats.${translationKey}`);\n  }\n}\n\nexport default Trans;\n", "import Stat from \"./stats/Stat\";\nimport Trans from \"./Helpers/Trans\";\n\nclass EncounterRenderer {\n  static async Render(encounter: Encounter) {\n    const renderData = encounter;\n\n    renderData.enemyNumber = renderData.enemies?.length ?? 0;\n    for (const combatant of renderData.combatants) {\n      if (combatant.type !== \"character\") {\n        renderData.combatants.pop(combatant);\n      }\n    }\n\n    for (const combatant of renderData.combatants) {\n      // Attacks\n      combatant.rounds = [];\n      for (const event of combatant.events) {\n        event.damageOrHeal = await this.getHealOrDamageClass(event.actionType);\n        event.rollAdvDis = event.advantage\n          ? \"advantage\"\n          : event.disadvantage\n          ? \"disadvantage\"\n          : \"normal\";\n\n        event.damageMultipleEnemiesTotal =\n          event.damageMultipleEnemiesTotal ?? event.damageTotal;\n\n        event.actionTypeIcon = this.getAttackTypeFAIcon(event.actionType);\n\n        event.attackTotal = event.isCritical\n          ? `${event.attackTotal} (c)`\n          : `${event.attackTotal}`;\n\n        if (!combatant.rounds[event.round - 1]) {\n          combatant.rounds[event.round - 1] = {\n            round: event.round,\n          };\n        }\n        if (!combatant.rounds[event.round - 1].attacks) {\n          combatant.rounds[event.round - 1].attacks = [];\n        }\n        const round = combatant.rounds[event.round - 1];\n        round.attacks.push(event);\n      }\n\n      // Kills\n      for (const kill of combatant.kills) {\n        if (!combatant.rounds[kill.round - 1]) {\n          combatant.rounds[kill.round - 1] = {\n            round: kill.round,\n          };\n        }\n        if (!combatant.rounds[kill.round - 1].kills) {\n          combatant.rounds[kill.round - 1].kills = [];\n        }\n        const round = combatant.rounds[kill.round - 1];\n        round.kills.push({ tokenName: kill.tokenName });\n      }\n\n      // Health\n      let downedCount = 0;\n      for (const health of combatant.health) {\n        if (health.isdamage && health.current < 1) {\n          downedCount++;\n        }\n\n        if (!combatant.rounds[health.round - 1]) {\n          combatant.rounds[health.round - 1] = {\n            round: health.round,\n          };\n        }\n        if (!combatant.rounds[health.round - 1].health) {\n          combatant.rounds[health.round - 1].health = [];\n        }\n        const round = combatant.rounds[health.round - 1];\n        if (health.diff) {\n          round.health.push({\n            current: health.current,\n            diff: `${health.isheal ? \"+\" : \"-\"} ${health.diff}`,\n          });\n        }\n      }\n      combatant.downed = downedCount;\n\n      // Damage\n      for (const total of combatant.roundSummary.totals) {\n        const roundData = combatant.rounds.find(\n          (f) => f?.round === total.round\n        );\n        if (!roundData) {\n          combatant.rounds[total.round - 1] = total.round ?? 0;\n        } else {\n          roundData.damageTotal = total.damageTotal;\n        }\n      }\n    }\n\n    const template_file = \"./modules/encounter-stats/templates/encounter_1.hbs\";\n    const rendered_html = await renderTemplate(template_file, renderData);\n\n    return { html: rendered_html, data: renderData };\n  }\n\n  private static async getHealOrDamageClass(attackType: string) {\n    const stat = new Stat();\n    if (stat.IsHealingSpell(attackType)) return \"blue\";\n    if (stat.IsValidAttack(attackType)) return \"red\";\n  }\n\n  private static getAttackTypeFAIcon(attackType: string) {\n    let iconName = \"dice-d20\";\n    let iconDescription = Trans.Get(\"actiontypes.other\");\n    switch (attackType) {\n      case \"heal\":\n        iconName = \"heart\";\n        iconDescription = Trans.Get(\"actiontypes.heal\");\n        break;\n      case \"msak\":\n        iconName = \"scroll\";\n        iconDescription = Trans.Get(\"actiontypes.msak\");\n        break;\n      case \"rsak\":\n        iconName = \"scroll\";\n        iconDescription = Trans.Get(\"actiontypes.rsak\");\n        break;\n      case \"mwak\":\n        iconName = \"fist-raised\";\n        iconDescription = Trans.Get(\"actiontypes.mwak\");\n        break;\n      case \"rwak\":\n        iconName = \"fist-raised\";\n        iconDescription = Trans.Get(\"actiontypes.rwak\");\n        break;\n      case \"save\":\n        iconName = \"shield-alt\";\n        iconDescription = Trans.Get(\"actiontypes.save\");\n        break;\n    }\n\n    return `<i title=\"${iconDescription}\" class=\"fas fa-${iconName}\"></i>`;\n  }\n}\n\nexport default EncounterRenderer;\n", "import EncounterJournal from \"./EncounterJournal\";\nimport CombatFlag from \"./CombatFlag\";\nimport Logger from \"./Helpers/Logger\";\nimport { STORAGE_NAME } from \"./Settings\";\nimport EncounterRenderer from \"./EncounterRenderer\";\n\nclass StatManager {\n  static IsInCombat() {\n    return CombatFlag.IsCurrentSceneCombatSet(STORAGE_NAME);\n  }\n\n  static async GetStat(actorId?: string): Promise<Encounter | undefined> {\n    const encounterStat = await CombatFlag.Get(STORAGE_NAME, actorId);\n    return deepClone(encounterStat);\n  }\n\n  static async SaveStat(encounter: Encounter) {\n    const currentEncounter = await StatManager.GetStat();\n    if (currentEncounter) {\n      const diff = diffObject(currentEncounter, encounter);\n      if (Object.keys(diff)?.length < 1) return;\n    }\n    if (!encounter?.encounterId) {\n      Logger.error(`No encounterId to save stat`, \"statmanager.SaveStat\");\n      return;\n    }\n    await CombatFlag.Save(STORAGE_NAME, encounter);\n\n    const markup = await EncounterRenderer.Render(encounter);\n\n    await EncounterJournal.UpdateJournalData(\n      markup.html,\n      \"encounterId\",\n      encounter.encounterId\n    );\n  }\n}\n\nexport default StatManager;\n", "import Logger from \"../Helpers/Logger\";\nimport Stat from \"./Stat\";\n\nexport default class MidiQolStat extends Stat {\n  AddAttack(workflow: EncounterWorkflow) {\n    if (!workflow?.actor?.id) {\n      Logger.error(\n        `No Actor ID in encounter`,\n        \"midiqolstat.AddAttack\",\n        workflow\n      );\n      return;\n    }\n\n    const combatantStat: EncounterCombatant | undefined =\n      this.GetCombatantStats(workflow.actor.id);\n\n    if (!combatantStat) {\n      Logger.log(\n        `No combatant found for Actor ID ${workflow.actor.id}`,\n        \"midiqolstat.AddAttack\",\n        workflow\n      );\n      return;\n    }\n\n    const newCombatantEvent = <CombatantEvent>{\n      id: workflow.id,\n      actorId: workflow.actor.id,\n      item: workflow.item,\n      advantage: workflow.advantage,\n      disadvantage: workflow.disadvantage,\n      actionType: workflow.actionType,\n      round: this.currentRound,\n      enemyHit: workflow.enemyHit,\n      attackTotal: 0,\n      damageTotal: 0,\n      damageMultipleEnemiesTotal: 0,\n      isCritical: false,\n    };\n\n    if (this.IsValidAttack(newCombatantEvent.actionType)) {\n      if (workflow.attackTotal) {\n        newCombatantEvent.attackTotal = workflow.attackTotal;\n      }\n    }\n    if (this.IsValidRollEvent(newCombatantEvent.actionType)) {\n      if (workflow.damageTotal) {\n        newCombatantEvent.damageMultipleEnemiesTotal =\n          workflow.damageMultipleEnemiesTotal;\n        newCombatantEvent.damageTotal = workflow.damageTotal;\n        newCombatantEvent.isCritical = workflow.isCritical;\n      }\n    }\n    combatantStat.events.push(newCombatantEvent);\n  }\n}\n", "import { CombatDetailType } from \"../enums\";\nimport Logger from \"../Helpers/Logger\";\nimport Stat from \"./Stat\";\n\nexport default class DND5eStat extends Stat {\n  AddAttack(workflow: EncounterWorkflow) {\n    if (!workflow?.actor?.id) {\n      Logger.error(`No Actor ID in encounter`, \"dnd5estat.AddAttack\", workflow);\n      return;\n    }\n    const combatantStat: EncounterCombatant | undefined =\n      this.GetCombatantStats(workflow.actor.id);\n    if (!combatantStat) return;\n\n    // Get any existing event, if so merge object and update\n    const isExistingEvent: boolean =\n      combatantStat.events.find(\n        (f) => f.id === workflow.id && f.round === this.currentRound\n      ) !== undefined;\n\n    if (isExistingEvent && workflow.type !== CombatDetailType.ItemCard) {\n      const newCombatantEvent = combatantStat.events\n        .filter((f) => f.id === workflow.id)\n        .reverse()[0];\n\n      if (workflow.type === CombatDetailType.Damage) {\n        newCombatantEvent.damageTotal = workflow.damageTotal;\n        newCombatantEvent.damageMultipleEnemiesTotal =\n          workflow.damageMultipleEnemiesTotal;\n        newCombatantEvent.isCritical = workflow.isCritical;\n      } else if (workflow.type === CombatDetailType.Attack) {\n        newCombatantEvent.attackTotal = workflow.attackTotal;\n        newCombatantEvent.isFumble = workflow.isFumble;\n        newCombatantEvent.advantage = workflow.advantage;\n        newCombatantEvent.disadvantage = workflow.disadvantage;\n      }\n    } else {\n      if (workflow.type === CombatDetailType.ItemCard) {\n        const newCombatantEvent = <CombatantEvent>{\n          id: workflow.id,\n          actorId: workflow.actor.id,\n          item: workflow.item,\n          round: this.currentRound,\n          attackTotal: 0,\n          damageTotal: 0,\n          actionType: workflow.actionType,\n        };\n        combatantStat.events.push(newCombatantEvent);\n      }\n    }\n  }\n}\n", "import { MODULE_ID, OPT_SETTINGS_DICE_STREAK_ENABLE } from \"./Settings\";\n\nclass CampaignRenderer {\n  static async Render(campaignStats: CampaignStats) {\n    const renderData: CampaignRender = {\n      nat1: await this.GenerateSummaryRow(campaignStats, \"nat1\"),\n      nat20: await this.GenerateSummaryRow(campaignStats, \"nat20\"),\n      heals: await this.GenerateSummaryRow(campaignStats, \"heals\"),\n      kills: await this.GenerateSummaryRow(campaignStats, \"kills\"),\n      criticalHistory: await this.GenerateRollRow(campaignStats.nat20),\n      fumbleHistory: await this.GenerateRollRow(campaignStats.nat1),\n      healsHistory: await this.GenerateHealRow(campaignStats.heals),\n      killsHistory: await this.GenerateKillsRow(campaignStats.kills),\n      rollstreak: await this.GenerateKillStreakRow(campaignStats.rollstreak),\n      customEventHistory: await this.GenerateCustomEventRows(campaignStats),\n      partySummary: [...campaignStats.partySummary].reverse(),\n    };\n\n    const template_file = \"./modules/encounter-stats/templates/campaign_1.hbs\";\n    const rendered_html = await renderTemplate(template_file, renderData);\n\n    return { html: rendered_html, data: renderData };\n  }\n\n  private static async GenerateCustomEventRows(campaignStats: CampaignStats) {\n    const data: Array<CampaignCustomData> = [];\n    const statList = campaignStats.custom;\n\n    if (statList.length === 0) return;\n\n    // Get unique EventIds\n    const eventIds = []\n      .concat(\n        // eslint-disable-next-line no-unsafe-optional-chaining\n        ...statList?.map((m) =>\n          m.data.map((im) => {\n            return im.EventName;\n          })\n        )\n      )\n      .reduce(\n        (unique, item) => (unique.includes(item) ? unique : [...unique, item]),\n        []\n      );\n\n    // Foreach eventid\n    eventIds.forEach((eventName) => {\n      const event = {\n        name: eventName,\n        events: [],\n      };\n      statList.forEach((statItem) => {\n        // filter statList\n        const dateStatList = statItem.data.filter(\n          (f) => f.EventName === eventName\n        );\n        if (dateStatList?.length === 0) return;\n\n        const entry: CampaignRollRowData = {\n          date: statItem.dateDisplay,\n          entries: [],\n        };\n        dateStatList.forEach((statEntry) => {\n          // Generate row\n          entry.entries.push({\n            actorName: statEntry.actorName,\n            flavor: statEntry.FlavorText,\n            date: statEntry.date,\n          });\n        });\n        event.events.push(entry);\n      });\n\n      data.push(event);\n    });\n\n    return data;\n  }\n\n  private static async GenerateHealRow(campaignStatEntry) {\n    const data: Array<CampaignRollRowData> = [];\n\n    campaignStatEntry.reverse().forEach((metric) => {\n      const entry: CampaignRollRowData = {\n        date: metric.dateDisplay,\n        entries: [],\n      };\n\n      metric.data.forEach((healTrack: HealTrack) => {\n        entry.entries.push({\n          actorName: healTrack.actorName,\n          flavor: healTrack.itemLink ? healTrack.itemLink : healTrack.spellName,\n          date: healTrack.date,\n          total: healTrack.total,\n        });\n      });\n      data.push(entry);\n    });\n\n    return data;\n  }\n\n  private static async GenerateKillStreakRow(campaignStatEntry) {\n    const data: Array<CampaignRollRowData> = [];\n    if (\n      !game.settings.get(`${MODULE_ID}`, `${OPT_SETTINGS_DICE_STREAK_ENABLE}`)\n    ) {\n      return data;\n    }\n\n    if (!campaignStatEntry) {\n      return;\n    }\n\n    campaignStatEntry.reverse().forEach((rollStreak: RollStreakTrack) => {\n      const entry: CampaignRollRowData = {\n        date: rollStreak.dateDisplay,\n        entries: [],\n      };\n\n      entry.entries.push({\n        actorName: rollStreak.actorName,\n        flavor: `<strong>${rollStreak.roll}</strong> - <i>${rollStreak.total}</i>`,\n        date: rollStreak.dateDisplay,\n      });\n\n      data.push(entry);\n    });\n\n    return data;\n  }\n\n  private static async GenerateKillsRow(campaignStatEntry) {\n    const data: Array<CampaignRollRowData> = [];\n\n    campaignStatEntry.reverse().forEach((metric) => {\n      const entry: CampaignRollRowData = {\n        date: metric.dateDisplay,\n        entries: [],\n      };\n\n      metric.data.forEach((kill: KillTrack) => {\n        entry.entries.push({\n          actorName: kill.actorName,\n          flavor: kill.tokenName,\n          date: kill.date,\n        });\n      });\n      data.push(entry);\n    });\n\n    return data;\n  }\n\n  private static async GenerateRollRow(campaignStatEntry) {\n    const data: Array<CampaignRollRowData> = [];\n\n    campaignStatEntry.reverse().forEach((metric) => {\n      const entry: CampaignRollRowData = {\n        date: metric.dateDisplay,\n        entries: [],\n      };\n\n      metric.data.forEach((diceTrack: DiceTrack) => {\n        entry.entries.push({\n          actorName: diceTrack.actorName,\n          flavor: diceTrack.flavor,\n          date: diceTrack.date,\n        });\n      });\n      data.push(entry);\n    });\n\n    return data;\n  }\n\n  private static async GenerateSummaryRow(\n    campaignStats: CampaignStats,\n    type: string\n  ) {\n    const data: Array<CampaignRollData> = [];\n\n    let statList;\n\n    switch (type) {\n      case \"nat20\":\n        statList = campaignStats.nat20;\n        break;\n      case \"nat1\":\n        statList = campaignStats.nat1;\n        break;\n      case \"heals\":\n        statList = campaignStats.heals;\n        break;\n      case \"kills\":\n        statList = campaignStats.kills;\n        break;\n    }\n\n    const flattenedResults = []\n      .concat(\n        // eslint-disable-next-line no-unsafe-optional-chaining\n        ...statList?.map((m) =>\n          m.data?.map((im) => {\n            return im?.actorName;\n          })\n        )\n      )\n      .reduce(function (prev, cur) {\n        prev[cur] = (prev[cur] || 0) + 1;\n        return prev;\n      }, {});\n\n    const result: Array<CampaignRollData> = [];\n    Object.entries(flattenedResults).forEach(([key, value]) => {\n      result.push({\n        name: key,\n        value: value,\n      });\n    });\n\n    result.forEach((entry) => {\n      data.push({ name: entry.name, value: entry.value });\n    });\n\n    return data;\n  }\n}\n\nexport default CampaignRenderer;\n", "/**\n * Chat class for handling common chat methods\n * @class Chat\n */\nexport default class Chat {\n  /**\n   * Sends the correct ChatMessage to the Chat window\n   * @public\n   * @return {Promise<void>}\n   * @param message - The chat message to send.\n   */\n  static async Send(message: string): Promise<void> {\n    const gmsToWhisper = ChatMessage.getWhisperRecipients(\"GM\").map(\n      (u: User) => u.id\n    );\n\n    const chatData = {\n      content: `<div>${message}</div>`,\n      speaker: gmsToWhisper,\n    };\n\n    ChatMessage.create(chatData);\n  }\n}\n", "import CampaignStat from \"../CampaignStat\";\n\nclass Gamemaster {\n  static readonly FLAG_SCOPE = \"encounter-stats\";\n  static readonly FLAG_NAME = \"campaign-stats\";\n  static readonly DEFAULT_DATA: CampaignStats = {\n    kills: [],\n    nat1: [],\n    nat20: [],\n    heals: [],\n    custom: [],\n    rollstreak: [],\n    rollstreaklog: [],\n    partySummary: [],\n    partySummaryTotal: {\n      averageDamagePerRound: 0,\n      lowestDamagePerRound: 0,\n      highestDamagePerRound: 0,\n      totalDamage: 0,\n      totalDamagePerRound: [],\n    },\n  };\n\n  static get GetActor(): Actor {\n    return game.users.find((f) => f.isGM);\n  }\n\n  static get GetStats(): CampaignStats {\n    let currentFlagValue: CampaignStats = <CampaignStats>(\n      Gamemaster.GetActor.getFlag(this.FLAG_SCOPE, this.FLAG_NAME)\n    );\n    if (!currentFlagValue) {\n      currentFlagValue = Gamemaster.DEFAULT_DATA;\n      Gamemaster.SetStats(currentFlagValue);\n    }\n    return currentFlagValue;\n  }\n\n  static SetStats(campaignStats: CampaignStats) {\n    Gamemaster.GetActor.setFlag(this.FLAG_SCOPE, this.FLAG_NAME, campaignStats);\n  }\n\n  static DeleteStats() {\n    Gamemaster.GetActor.setFlag(\n      this.FLAG_SCOPE,\n      this.FLAG_NAME,\n      Gamemaster.DEFAULT_DATA\n    );\n    CampaignStat.Save(Gamemaster.DEFAULT_DATA);\n  }\n}\n\nexport default Gamemaster;\n", "import CampaignRenderer from \"./CampaignRenderer\";\nimport Chat from \"./Chat\";\nimport EncounterJournal from \"./EncounterJournal\";\nimport { RoleType } from \"./enums\";\nimport Dates from \"./Helpers/Dates\";\nimport Gamemaster from \"./Helpers/Gamemaster\";\nimport Trans from \"./Helpers/Trans\";\nimport {\n  MODULE_ID,\n  OPT_SETTINGS_DICE_STREAK_ENABLE,\n  OPT_SETTINGS_DICE_STREAK_TO_CHAT_ENABLE,\n} from \"./Settings\";\n\nexport default class CampaignStat {\n  static async AddKill(actorName: string, tokenName: string) {\n    const campaignStats = await this.Get();\n    const date = Dates.now;\n\n    const kill = <KillTrack>{\n      actorName: actorName,\n      tokenName: tokenName,\n      date: date.dateTimeDisplay,\n    };\n\n    const dateEntry = campaignStats.kills.find((f) => f.id === date.id);\n    if (dateEntry) {\n      dateEntry.data.push(kill);\n    } else {\n      campaignStats.kills.push({\n        id: date.id,\n        dateDisplay: date.dateDisplay,\n        data: [kill],\n      });\n    }\n\n    await this.Save(campaignStats);\n  }\n\n  static async AddHeal(\n    actorName: string,\n    itemLink: string,\n    spellName: string,\n    total: number\n  ) {\n    const campaignStats = await this.Get();\n    const date = Dates.now;\n\n    const heal = <HealTrack>{\n      actorName: actorName,\n      itemLink: itemLink,\n      spellName: spellName,\n      total: total,\n      date: date.dateTimeDisplay,\n    };\n\n    const dateEntry = campaignStats.heals.find((f) => f.id === date.id);\n    if (dateEntry) {\n      dateEntry.data.push(heal);\n    } else {\n      campaignStats.heals.push({\n        id: date.id,\n        dateDisplay: date.dateDisplay,\n        data: [heal],\n      });\n    }\n\n    await this.Save(campaignStats);\n  }\n\n  static async AddRole(type: RoleType, actorName: string, flavor: string) {\n    const campaignStats = await this.Get();\n    const date = Dates.now;\n\n    const dice = <DiceTrack>{\n      actorName: actorName,\n      flavor: flavor,\n      date: date.dateTimeDisplay,\n    };\n\n    if (type === RoleType.Fumble) {\n      const dateEntry = campaignStats.nat1.find((f) => f.id === date.id);\n      if (dateEntry) {\n        dateEntry.data.push(dice);\n      } else {\n        campaignStats.nat1.push({\n          id: date.id,\n          dateDisplay: date.dateDisplay,\n          data: [dice],\n        });\n      }\n    } else if (type === RoleType.Critial) {\n      const dateEntry = campaignStats.nat20.find((f) => f.id === date.id);\n      if (dateEntry) {\n        dateEntry.data.push(dice);\n      } else {\n        campaignStats.nat20.push({\n          id: date.id,\n          dateDisplay: date.dateDisplay,\n          data: [dice],\n        });\n      }\n    }\n\n    await this.Save(campaignStats);\n  }\n\n  static async AddRollStreak(\n    result: number,\n    actorName: string,\n    actorId: string\n  ) {\n    if (\n      !game.settings.get(`${MODULE_ID}`, `${OPT_SETTINGS_DICE_STREAK_ENABLE}`)\n    ) {\n      return;\n    }\n\n    const campaignStats = await this.Get();\n    const date = Dates.now;\n\n    if (!campaignStats.rollstreaklog) {\n      campaignStats.rollstreaklog = [];\n    }\n    if (!campaignStats.rollstreak) {\n      campaignStats.rollstreak = [];\n    }\n\n    const streakLogEntry = campaignStats.rollstreaklog.find(\n      (f) => f.actorId === actorId\n    );\n    if (!streakLogEntry) {\n      campaignStats.rollstreaklog.push(<RollStreakLog>{\n        actorId,\n        results: [result],\n      });\n    } else {\n      const logIndex = campaignStats.rollstreaklog.findIndex(\n        (fi) => fi.actorId === actorId\n      );\n      const actorStreakLog = campaignStats.rollstreaklog[logIndex].results;\n      if (actorStreakLog.indexOf(result) > -1) {\n        actorStreakLog.push(result);\n        if (\n          game.settings.get(\n            `${MODULE_ID}`,\n            `${OPT_SETTINGS_DICE_STREAK_TO_CHAT_ENABLE}`\n          )\n        ) {\n          this._sendRollStreakChatMessage(actorName, actorStreakLog);\n        }\n      } else {\n        if (actorStreakLog.length > 1) {\n          // Save to streak length and result\n          campaignStats.rollstreak.push(<RollStreakTrack>{\n            actorId: actorId,\n            actorName: actorName,\n            dateDisplay: date.dateDisplay,\n            roll: actorStreakLog[0],\n            total: actorStreakLog.length,\n          });\n        }\n        campaignStats.rollstreaklog[logIndex].results = [result]; // Reset to new number\n      }\n    }\n\n    await this.Save(campaignStats);\n  }\n\n  static async _sendRollStreakChatMessage(\n    actorName: string,\n    actorStreakLog: number[]\n  ): Promise<void> {\n    await Chat.Send(\n      `<h2>${Trans.Get(\n        \"template.roll_streak\"\n      )}!</h2><p>@Actor[${actorName}] ${Trans.Get(\"template.rolled_a\")} [[${\n        actorStreakLog[0]\n      }]] <strong>${actorStreakLog.length}</strong> ${Trans.Get(\n        \"template.times_in_a_row\"\n      )}!</p>`\n    );\n  }\n\n  static async AddCustomEvent(customEvent: HookCustomEvent) {\n    const campaignStats = await this.Get();\n    if (!campaignStats.custom) {\n      campaignStats.custom = [];\n    }\n    const date = Dates.now;\n    let actorName = \"\";\n\n    if (customEvent.actorId) {\n      actorName = game.actors?.get(customEvent.actorId)?.name ?? \"\";\n    }\n\n    const customDataEvent = <CustomDataEvent>{\n      EventName: customEvent.EventName,\n      actorName: actorName,\n      FlavorText: customEvent.FlavorText,\n      date: date.dateTimeDisplay,\n    };\n\n    const dateEntry = campaignStats.custom.find((f) => f.id === date.id);\n    if (dateEntry) {\n      dateEntry.data.push(customDataEvent);\n    } else {\n      campaignStats.custom.push({\n        id: date.id,\n        dateDisplay: date.dateDisplay,\n        data: [customDataEvent],\n      });\n    }\n\n    await this.Save(campaignStats);\n  }\n\n  static async AddPartyEncounterStat(\n    partyStat: PartyEncounterStats,\n    encounterId: string\n  ) {\n    const campaignPartyEncounterStat: CampaignPartyEncounterStats = {\n      ...partyStat,\n      date: Dates.now.dateTimeDisplay,\n      encounterId,\n    };\n    const campaignStats = await this.Get();\n    if (!campaignStats.partySummary) {\n      campaignStats.partySummary = [];\n    }\n\n    campaignStats.partySummary.push(campaignPartyEncounterStat);\n\n    await this.Save(campaignStats);\n  }\n\n  static async Get(): Promise<CampaignStats> {\n    return Gamemaster.GetStats;\n  }\n\n  static async Save(campaignStats: CampaignStats) {\n    Gamemaster.SetStats(campaignStats);\n    const markup = await CampaignRenderer.Render(campaignStats);\n    EncounterJournal.UpdateJournalData(markup.html, \"campaignstats\", \"view\");\n  }\n}\n", "import { CombatDetailType } from \"../enums\";\nimport Logger from \"../Helpers/Logger\";\nimport Stat from \"./Stat\";\n\nexport default class PF2eStat extends Stat {\n  AddAttack(workflow: EncounterWorkflow) {\n    if (!workflow?.actor?.id) {\n      Logger.error(`No Actor ID in encounter`, \"dnd5estat.AddAttack\", workflow);\n      return;\n    }\n    const combatantStat: EncounterCombatant | undefined =\n      this.GetCombatantStats(workflow.actor.id);\n    if (!combatantStat) return;\n\n    // Get any existing event, if so merge object and update\n    const isExistingEvent: boolean =\n      combatantStat.events.find(\n        (f) => f.id === workflow.id && f.round === this.currentRound\n      ) !== undefined;\n\n    if (isExistingEvent && workflow.type === CombatDetailType.Damage) {\n      const newCombatantEvent = combatantStat.events\n        .filter((f) => f.id === workflow.id)\n        .reverse()[0];\n\n      newCombatantEvent.damageTotal = workflow.damageTotal;\n      newCombatantEvent.damageMultipleEnemiesTotal =\n        workflow.damageMultipleEnemiesTotal;\n      newCombatantEvent.isCritical = workflow.isCritical;\n    } else {\n      if (workflow.type === CombatDetailType.Attack) {\n        const newCombatantEvent = <CombatantEvent>{\n          id: workflow.id,\n          actorId: workflow.actor.id,\n          item: workflow.item,\n          round: this.currentRound,\n          attackTotal: 0,\n          damageTotal: 0,\n          actionType: workflow.actionType,\n        };\n        newCombatantEvent.attackTotal = workflow.attackTotal;\n        newCombatantEvent.isFumble = workflow.isFumble;\n        newCombatantEvent.advantage = workflow.advantage;\n        newCombatantEvent.disadvantage = workflow.disadvantage;\n        combatantStat.events.push(newCombatantEvent);\n      }\n    }\n  }\n}\n", "import Logger from \"../Helpers/Logger\";\nimport Stat from \"./Stat\";\n\nexport default class ReadySetRollStat extends Stat {\n  AddAttack(workflow: EncounterWorkflow) {\n    if (!workflow?.actor?.id) {\n      Logger.error(`No Actor ID in encounter`, \"rsr5e.rollProcessed\", workflow);\n      return;\n    }\n\n    const combatantStat: EncounterCombatant | undefined =\n      this.GetCombatantStats(workflow.actor.id);\n\n    if (!combatantStat) {\n      Logger.log(\n        `No combatant found for Actor ID ${workflow.actor.id}`,\n        \"rsr5e.rollProcessed\",\n        workflow\n      );\n      return;\n    }\n    const lastCombatantEvent =\n      combatantStat.events[combatantStat.events.length - 1];\n\n    const isExistingEvent: boolean =\n      lastCombatantEvent !== undefined &&\n      lastCombatantEvent.damageTotal !== undefined &&\n      lastCombatantEvent.damageTotal === 0 &&\n      workflow.damageTotal > 0 &&\n      lastCombatantEvent.actorId === workflow.actor.id &&\n      lastCombatantEvent.round === this.currentRound &&\n      lastCombatantEvent.item?.id === workflow.item.id;\n\n    if (isExistingEvent) {\n      const newCombatantEvent =\n        combatantStat.events[combatantStat.events.length - 1];\n\n      newCombatantEvent.damageTotal = workflow.damageTotal;\n    } else {\n      const newCombatantEvent = <CombatantEvent>{\n        id: workflow.id,\n        actorId: workflow.actor.id,\n        item: workflow.item,\n        advantage: workflow.advantage,\n        disadvantage: workflow.disadvantage,\n        actionType: workflow.actionType,\n        round: this.currentRound,\n        enemyHit: workflow.enemyHit,\n        attackTotal: 0,\n        damageTotal: 0,\n        damageMultipleEnemiesTotal: 0,\n        isCritical: false,\n      };\n\n      if (this.IsValidAttack(newCombatantEvent.actionType)) {\n        if (workflow.attackTotal) {\n          newCombatantEvent.attackTotal = workflow.attackTotal;\n        }\n      }\n      if (this.IsValidRollEvent(newCombatantEvent.actionType)) {\n        if (workflow.damageTotal) {\n          newCombatantEvent.damageMultipleEnemiesTotal =\n            workflow.damageMultipleEnemiesTotal;\n          newCombatantEvent.damageTotal = workflow.damageTotal;\n          newCombatantEvent.isCritical = workflow.isCritical;\n        }\n      }\n      combatantStat.events.push(newCombatantEvent);\n    }\n  }\n}\n", "import EncounterJournal from \"./EncounterJournal\";\nimport StatManager from \"./StatManager\";\nimport Stat from \"./stats/Stat\";\nimport MidiQolStat from \"./stats/MidiQolStat\";\nimport DND5eStat from \"./stats/DND5eStat\";\nimport CampaignStat from \"./CampaignStat\";\nimport { ChatType, RoleType } from \"./enums\";\nimport Logger from \"./Helpers/Logger\";\nimport { EncounterWorkflow } from \"EncounterWorkflow\";\nimport PF2eStat from \"./stats/PF2eStat\";\nimport ReadySetRollStat from \"./stats/ReadySetRollStat\";\n\nexport function OnCustomEvent(customEvent: HookCustomEvent): void {\n  CampaignStat.AddCustomEvent(customEvent);\n}\n\nexport async function OnTrackRollStreak(\n  result: number,\n  actorName: string,\n  actorId: string\n): Promise<void> {\n  if (!result) return;\n\n  CampaignStat.AddRollStreak(result, actorName, actorId);\n}\n\nexport async function OnTrackDiceRoll(\n  result: number,\n  alias: string,\n  flavor: string\n): Promise<void> {\n  if (!result) return;\n\n  if (result === 1) {\n    CampaignStat.AddRole(RoleType.Fumble, alias, flavor);\n  }\n\n  if (result === 20) {\n    CampaignStat.AddRole(RoleType.Critial, alias, flavor);\n  }\n}\n\nexport async function OnDeleteCombat(combat: Combat): Promise<void> {\n  if (!combat) {\n    Logger.log(`No combat`, \"handlers.OnDeleteCombat\", combat);\n    return;\n  }\n  if (!StatManager.IsInCombat()) return;\n  const stat = new Stat();\n  stat.encounter = await StatManager.GetStat();\n\n  CampaignStat.AddPartyEncounterStat(\n    stat.encounter.partySummary,\n    stat.encounter.encounterId ?? \"\"\n  );\n}\n\nexport async function OnUpdateCombat(currentRound: number): Promise<void> {\n  if (!currentRound) {\n    Logger.log(`No new round`, \"handlers.OnUpdateCombat\", currentRound);\n    return;\n  }\n  if (!StatManager.IsInCombat()) return;\n  const stat = new Stat();\n  stat.encounter = await StatManager.GetStat();\n\n  stat.UpdateRound(currentRound);\n  stat.UpdateEnd();\n\n  await stat.Save();\n  Logger.debug(`Start of round ${currentRound}`, \"handlers.OnUpdateCombat\");\n}\n\nexport async function OnRenderCombatTracker(\n  combatData: HookRenderCombatTrackerData\n): Promise<void> {\n  if (!combatData.hasCombat) {\n    Logger.log(\n      `Combat Tracker Event has no combat active`,\n      \"handlers.OnRenderCombatTracker\",\n      combatData\n    );\n    return;\n  }\n  if (!StatManager.IsInCombat()) return;\n  const stat = new Stat();\n  stat.encounter = await StatManager.GetStat();\n\n  stat.UpdateScene(\n    combatData.combat.scene?.id ?? \"\",\n    combatData.combat.scene?.name ?? \"\",\n    combatData.combat.scene?.thumb ?? \"\"\n  );\n\n  let addEnemies = false;\n  if (stat.encounter?.enemies?.length === 0) {\n    addEnemies = true;\n  }\n\n  const combatantsList = combatData.combat.combatants;\n  for (const combatant of combatantsList) {\n    const actorId = combatant.actorId;\n    const tokenId = combatant.tokenId;\n    const initiative = combatant.initiative;\n    const actor = game.actors?.get(actorId);\n    if (actor) {\n      if (addEnemies && combatant.actor?.type === \"npc\") {\n        stat.AddEnemy(<Enemies>{\n          tokenId: combatant.tokenId,\n          name: combatant.name,\n          img: combatant.actor.img,\n          ac: combatant.actor.system.attributes.ac.value,\n          hp: combatant.actor.system.attributes.hp.value,\n        });\n      } else {\n        await stat.AddCombatant(actor, tokenId, initiative);\n      }\n    }\n  }\n  await stat.Save();\n  Logger.debug(`Combatants Added`, \"handlers.OnRenderCombatTracker\");\n}\n\nexport async function OnCreateCombat(combat: Combat): Promise<void> {\n  const encounterId = combat.id;\n  if (!encounterId) {\n    Logger.error(`Missing encounterId`, \"handlers.OnCreateCombat\", combat);\n    return;\n  }\n  const stat = new Stat(encounterId);\n\n  await EncounterJournal.CreateJournalEntryPage(encounterId);\n  await stat.Save();\n  Logger.debug(`Combat Started`, \"handlers.OnCreateCombat\");\n}\n\nexport async function OnTrackDice(diceTrackParsed: DiceTrackParse | undefined) {\n  if (\n    diceTrackParsed &&\n    (diceTrackParsed.isCritical || diceTrackParsed.isFumble)\n  ) {\n    CampaignStat.AddRole(\n      diceTrackParsed.isCritical ? RoleType.Critial : RoleType.Fumble,\n      diceTrackParsed.name,\n      diceTrackParsed.flavor\n    );\n  }\n}\n\nexport async function OnEncounterWorkflowComplete(\n  workflow: EncounterWorkflow | undefined,\n  chatType: ChatType\n): Promise<void> {\n  if (!StatManager.IsInCombat()) return;\n  if (!workflow) return;\n  let stat: DND5eStat | MidiQolStat;\n  if (chatType === ChatType.DND5e) {\n    stat = new DND5eStat();\n  } else if (chatType === ChatType.PF2e) {\n    stat = new PF2eStat();\n  } else if (chatType === ChatType.MidiQol) {\n    stat = new MidiQolStat();\n  } else if (chatType === ChatType.RSR) {\n    stat = new ReadySetRollStat();\n  } else {\n    return;\n  }\n\n  stat.encounter = await StatManager.GetStat(workflow.actor.id);\n  stat.AddAttack(workflow);\n  stat.Save();\n\n  if (\n    workflow.actionType &&\n    workflow.item &&\n    stat.IsHealingSpell(workflow.actionType)\n  ) {\n    const combatantStat = stat.GetCombatantStats(workflow.actor.id);\n    if (combatantStat) {\n      CampaignStat.AddHeal(\n        combatantStat.name,\n        workflow.item.link,\n        workflow.item.name,\n        workflow.damageTotal ?? 0\n      );\n    } else {\n      Logger.warn(\n        `Missing Combatant for Heal`,\n        \"handlers.OnEncounterWorkflowComplete\",\n        workflow\n      );\n    }\n  }\n}\n\nexport async function OnUpdateHealth(actor: Actor): Promise<void> {\n  if (!StatManager.IsInCombat()) return;\n  const stat = new Stat();\n  stat.encounter = await StatManager.GetStat(actor.id);\n  stat.UpdateHealth(actor);\n  stat.Save();\n}\n\nexport async function OnTrackKill(\n  targetName: string,\n  tokenId: string\n): Promise<void> {\n  if (!StatManager.IsInCombat()) return;\n  const stat = new Stat();\n  stat.encounter = await StatManager.GetStat();\n  stat.AddKill(targetName, tokenId);\n  stat.Save();\n  const combatantStat = stat.GetCombatantStatsByTokenId(tokenId);\n  if (combatantStat) {\n    CampaignStat.AddKill(combatantStat?.name, targetName);\n  }\n}\n", "import { EncounterWorkflow } from \"EncounterWorkflow\";\nimport { CombatDetailType } from \"../enums\";\n\nexport default class DND5e {\n  static async ParseHook(\n    item: Item,\n    actor: Actor,\n    type: CombatDetailType,\n    roll: Roll | undefined\n  ): Promise<EncounterWorkflow | undefined> {\n    const enemiesHit: Array<EnemyHit> = game.user?.targets.map(\n      (m) =>\n        <EnemyHit>{\n          tokenId: m.id,\n          name: m.name,\n        }\n    );\n\n    const numberOfEnemiesHit =\n      Array.from(enemiesHit).length > 0 ? Array.from(enemiesHit).length : 1;\n\n    if (type === CombatDetailType.Damage) {\n      return <EncounterWorkflow>{\n        id: item.id + actor.id,\n        actor: {\n          id: actor.id,\n          actorName: actor.name,\n        },\n        damageTotal: roll?.total ?? 0,\n        damageMultipleEnemiesTotal: roll?.total\n          ? roll.total * numberOfEnemiesHit\n          : 0,\n        isCritical: roll?.options.critical ?? false,\n        type: type,\n      };\n    } else if (type === CombatDetailType.Attack) {\n      return <EncounterWorkflow>{\n        id: item.id + actor.id,\n        actor: {\n          id: actor.id,\n        },\n        attackTotal: roll?.total ?? 0,\n        isFumble:\n          roll?.terms[0]?.results?.find((f) => f.active === true).result === 1,\n        advantage: roll?.options.advantageMode === 1 ? true : false,\n        disadvantage: roll?.options.advantageMode === -1 ? true : false,\n        type: type,\n        diceTotal: roll?.dice[0]?.total,\n      };\n    } else if (type === CombatDetailType.ItemCard) {\n      return <EncounterWorkflow>{\n        id: item.id + actor.id,\n        actor: {\n          id: actor.id,\n        },\n        item: {\n          id: item.id,\n          name: item.name,\n          link: item.link,\n          type: item.type,\n          img: item.img,\n        },\n        actionType: item.system.actionType,\n        enemyHit: enemiesHit,\n        type: type,\n      };\n    }\n  }\n}\n", "import { EncounterWorkflow } from \"EncounterWorkflow\";\nimport { CombatDetailType } from \"../enums\";\nimport Logger from \"../Helpers/Logger\";\n\nclass MidiQol {\n  static ParseWorkflow(workflow: MidiQolWorkflow): EncounterWorkflow {\n    const enemiesHit: Array<EnemyHit> = workflow.targets.map(\n      (m) =>\n        <EnemyHit>{\n          tokenId: m.id,\n          name: m.sheet.actor.name,\n        }\n    );\n\n    return <EncounterWorkflow>{\n      id: workflow.id,\n      actor: {\n        id: workflow.actor.id,\n      },\n      item: {\n        id: workflow.item.id,\n        name: workflow.item.name,\n        link: workflow.item.link,\n        type: workflow.item.type,\n        img: workflow.item.img,\n      },\n      actionType: workflow.item.system.actionType,\n      damageTotal: workflow.hitTargets.size > 0 ? workflow.damageTotal ?? 0 : 0,\n      damageMultipleEnemiesTotal: workflow.damageTotal\n        ? workflow.damageTotal * Array.from(enemiesHit).length\n        : 0,\n      attackTotal: workflow.attackTotal ?? 0,\n      workflowType: workflow.workflowType,\n      advantage:\n        workflow.attackRoll?.options?.advantageMode === 1 ? true : false,\n      disadvantage:\n        workflow.attackRoll?.options?.advantageMode === -1 ? true : false,\n      isCritical: workflow.isCritical,\n      isFumble: workflow.isFumble,\n      enemyHit: enemiesHit,\n      type: CombatDetailType.MidiQol,\n      diceTotal: workflow.d20AttackRoll,\n    };\n  }\n\n  static RollCheck(workflow: MidiQolWorkflow): DiceTrackParse | undefined {\n    const actorId = workflow.actor.id;\n\n    if (actorId) {\n      const actor = game.actors?.get(actorId);\n\n      if (!actor) {\n        Logger.log(\n          `No actor found for actorId ${actorId}`,\n          \"midiqol.RollCheck\",\n          workflow\n        );\n        return;\n      }\n\n      if (actor.type !== \"character\") {\n        return;\n      }\n\n      return <DiceTrackParse>{\n        isCritical: workflow.isCritical,\n        isFumble: workflow.isFumble,\n        flavor: workflow.item.name,\n        name: actor.name,\n      };\n    }\n  }\n}\n\nexport default MidiQol;\n", "import { EncounterWorkflow } from \"EncounterWorkflow\";\nimport { CombatDetailType } from \"../enums\";\nimport Logger from \"../Helpers/Logger\";\n\nclass ReadySetRoll {\n  static ParseRollData(workflow: ReadySetRollWorkflow): ReadySetRollRollData {\n    const attackData = workflow.fields.find((f) => f[0] === \"attack\");\n    const damageData = workflow.fields.find((f) => f[0] === \"damage\");\n    return {\n      attackData: attackData,\n      damageData: damageData,\n    };\n  }\n\n  static ParseWorkflow(workflow: ReadySetRollWorkflow): EncounterWorkflow {\n    const enemiesHit: Array<EnemyHit> = [];\n\n    const rollData = this.ParseRollData(workflow);\n\n    return <EncounterWorkflow>{\n      id: workflow.messageId,\n      actor: {\n        id: workflow.actorId,\n      },\n      item: {\n        id: workflow.item.id,\n        name: workflow.item.name,\n        link: workflow.item.link,\n        type: workflow.item.type,\n        img: workflow.item.img,\n      },\n      actionType: workflow.item.system.actionType,\n      damageTotal: rollData.damageData\n        ? rollData.damageData[1].baseRoll?.total\n        : 0,\n      attackTotal: rollData.attackData ? rollData.attackData[1].roll?.total : 0,\n      advantage: workflow.params.hasAdvantage,\n      disadvantage: workflow.params.hasDisadvantage,\n      isCritical: workflow.params.isCrit,\n      isFumble: workflow.params.isFumble,\n      enemyHit: enemiesHit,\n      type: CombatDetailType.ReadySetRoll,\n      diceTotal: undefined,\n    };\n  }\n\n  static RollCheck(workflow: ReadySetRollWorkflow): DiceTrackParse | undefined {\n    const actorId = workflow.actorId;\n\n    if (actorId) {\n      const actor = game.actors?.get(actorId);\n\n      if (!actor) {\n        Logger.log(\n          `No actor found for actorId ${actorId}`,\n          \"rsr5e.rollProcessed\",\n          workflow\n        );\n        return;\n      }\n\n      if (actor.type !== \"character\") {\n        return;\n      }\n\n      return <DiceTrackParse>{\n        isCritical: workflow.params.isCrit,\n        isFumble: workflow.params.isFumble,\n        flavor: workflow.item.name,\n        name: actor.name,\n      };\n    }\n  }\n}\n\nexport default ReadySetRoll;\n", "import {\n  OnRenderCombatTracker,\n  OnCreateCombat,\n  OnUpdateCombat,\n  OnEncounterWorkflowComplete,\n  OnUpdateHealth,\n  OnTrackKill,\n  OnTrackDice,\n  OnTrackDiceRoll,\n  OnCustomEvent,\n  OnTrackRollStreak,\n} from \"./Handlers\";\nimport StatManager from \"./StatManager\";\nimport DND5e from \"./parsers/DND5e\";\nimport MidiQol from \"./parsers/MidiQol\";\nimport { CombatDetailType, ChatType } from \"./enums\";\nimport Stat from \"./stats/Stat\";\nimport ReadySetRoll from \"./parsers/ReadySetRoll\";\n\nexport default class SetupHooksDND5e {\n  static SOCKET_NAME = \"module.encounter-stats\";\n\n  static async Setup() {\n    if (game.user?.isGM) {\n      SetupHooksDND5e._setupSockerListeners();\n      window.Hooks.on(\n        \"renderCombatTracker\",\n        async function (\n          _combatTracker: CombatTracker,\n          _element: string,\n          combatData: HookRenderCombatTrackerData\n        ) {\n          OnRenderCombatTracker(combatData);\n        }\n      );\n      window.Hooks.on(\"createCombat\", async function (data: Combat) {\n        OnCreateCombat(data);\n      });\n      window.Hooks.on(\n        \"updateCombat\",\n        async function (_combat: Combat, data: HookUpdateCombatRound) {\n          OnUpdateCombat(data.round);\n        }\n      );\n\n      window.Hooks.on(\n        \"updateActor\",\n        async function (actor: Actor, diff: unknown) {\n          await SetupHooksDND5e.updateActorToken(actor, diff);\n        }\n      );\n\n      window.Hooks.on(\n        \"updateToken\",\n        async function (actor: Actor, diff: unknown, diffResult: unknown) {\n          await SetupHooksDND5e.updateActorToken(actor, diff, diffResult);\n        }\n      );\n\n      if (game.modules.get(\"midi-qol\")?.active) {\n        window.Hooks.on(\n          \"midi-qol.RollComplete\",\n          async function (workflow: MidiQolWorkflow) {\n            const rollCheck = MidiQol.RollCheck(workflow);\n            const midiWorkflow = MidiQol.ParseWorkflow(workflow);\n            OnEncounterWorkflowComplete(midiWorkflow, ChatType.MidiQol);\n            OnTrackDice(rollCheck);\n\n            if (rollCheck && midiWorkflow) {\n              OnTrackRollStreak(\n                midiWorkflow.diceTotal,\n                rollCheck.name,\n                midiWorkflow.actor.id\n              );\n            }\n          }\n        );\n      }\n\n      if (game.modules.get(\"ready-set-roll-5e\")?.active) {\n        window.Hooks.on(\n          \"rsr5e.rollProcessed\",\n          async function (workflow: ReadySetRollWorkflow) {\n            const rollCheck = ReadySetRoll.RollCheck(workflow);\n            const readySetRollWorkflow = ReadySetRoll.ParseWorkflow(workflow);\n            OnEncounterWorkflowComplete(readySetRollWorkflow, ChatType.RSR);\n            OnTrackDice(rollCheck);\n          }\n        );\n      }\n\n      Hooks.on(\n        \"encounter-stats.customEvent\",\n        async function (customEvent: HookCustomEvent) {\n          OnCustomEvent(customEvent);\n        }\n      );\n    } else {\n      window.Hooks.on(\n        \"updateActor\",\n        async function (actor: Actor, diff: unknown) {\n          game.socket?.emit(SetupHooksDND5e.SOCKET_NAME, {\n            event: \"updateActor\",\n            data: { data: actor, diff: diff },\n          });\n        }\n      );\n      window.Hooks.on(\n        \"updateToken\",\n        async function (actor: Actor, diff: unknown, diffResult: unknown) {\n          game.socket?.emit(SetupHooksDND5e.SOCKET_NAME, {\n            event: \"updateToken\",\n            data: { data: actor, diff: diff, diffResult: diffResult },\n          });\n        }\n      );\n      if (game.modules.get(\"midi-qol\")?.active) {\n        window.Hooks.on(\n          \"midi-qol.RollComplete\",\n          async function (workflow: MidiQolWorkflow) {\n            game.socket?.emit(SetupHooksDND5e.SOCKET_NAME, {\n              event: \"midi-qol.RollComplete\",\n              data: {\n                workflow: MidiQol.ParseWorkflow(workflow),\n                rollCheck: MidiQol.RollCheck(workflow),\n              },\n            });\n          }\n        );\n      }\n\n      if (game.modules.get(\"ready-set-roll-5e\")?.active) {\n        window.Hooks.on(\n          \"rsr5e.rollProcessed\",\n          async function (workflow: ReadySetRollWorkflow) {\n            game.socket?.emit(SetupHooksDND5e.SOCKET_NAME, {\n              event: \"rsr5e.rollProcessed\",\n              data: {\n                workflow: ReadySetRoll.ParseWorkflow(workflow),\n                rollCheck: ReadySetRoll.RollCheck(workflow),\n              },\n            });\n          }\n        );\n      }\n\n      window.Hooks.on(\"dnd5e.useItem\", async function (item: Item) {\n        if (\n          !game.modules.get(\"midi-qol\")?.active &&\n          !game.modules.get(\"ready-set-roll-5e\")?.active\n        ) {\n          game.socket?.emit(SetupHooksDND5e.SOCKET_NAME, {\n            event: \"dnd5e.useItem\",\n            data: {\n              EncounterWorkflow: await DND5e.ParseHook(\n                item,\n                item.actor,\n                CombatDetailType.ItemCard,\n                undefined\n              ),\n              ChatType: ChatType.DND5e,\n            },\n          });\n        }\n      });\n\n      window.Hooks.on(\n        \"dnd5e.rollAttack\",\n        async function (item: Item5e, roll: Roll) {\n          if (\n            !game.modules.get(\"midi-qol\")?.active &&\n            !game.modules.get(\"ready-set-roll-5e\")?.active\n          ) {\n            game.socket?.emit(SetupHooksDND5e.SOCKET_NAME, {\n              event: \"dnd5e.rollAttack\",\n              data: {\n                EncounterWorkflow: await DND5e.ParseHook(\n                  item,\n                  item.actor,\n                  CombatDetailType.Attack,\n                  roll\n                ),\n                ChatType: ChatType.DND5e,\n              },\n            });\n          }\n        }\n      );\n\n      window.Hooks.on(\n        \"dnd5e.rollDamage\",\n        async function (item: Item5e, roll: Roll) {\n          if (\n            !game.modules.get(\"midi-qol\")?.active &&\n            !game.modules.get(\"ready-set-roll-5e\")?.active\n          ) {\n            game.socket?.emit(SetupHooksDND5e.SOCKET_NAME, {\n              event: \"dnd5e.rollDamage\",\n              data: {\n                EncounterWorkflow: await DND5e.ParseHook(\n                  item,\n                  item.actor,\n                  CombatDetailType.Damage,\n                  roll\n                ),\n                ChatType: ChatType.DND5e,\n              },\n            });\n          }\n        }\n      );\n\n      window.Hooks.on(\n        \"dnd5e.rollAbilityTest\",\n        async function (actor: Actor, roll: Roll) {\n          game.socket?.emit(SetupHooksDND5e.SOCKET_NAME, {\n            event: \"dnd5e.rollAbilityTest\",\n            data: {\n              result:\n                roll?.terms[0]?.results?.find((f) => f.active === true)\n                  .result ?? 0,\n              alias: actor.name,\n              actorId: actor.id,\n              flavor: roll.options.flavor,\n            },\n          });\n        }\n      );\n\n      window.Hooks.on(\n        \"dnd5e.rollAbilitySave\",\n        async function (actor: Actor, roll: Roll) {\n          game.socket?.emit(SetupHooksDND5e.SOCKET_NAME, {\n            event: \"dnd5e.rollAbilitySave\",\n            data: {\n              result:\n                roll?.terms[0]?.results?.find((f) => f.active === true)\n                  .result ?? 0,\n              alias: actor.name,\n              actorId: actor.id,\n              flavor: roll.options.flavor,\n            },\n          });\n        }\n      );\n\n      window.Hooks.on(\n        \"dnd5e.rollSkill\",\n        async function (actor: Actor, roll: Roll) {\n          game.socket?.emit(SetupHooksDND5e.SOCKET_NAME, {\n            event: \"dnd5e.rollSkill\",\n            data: {\n              result:\n                roll?.terms[0]?.results?.find((f) => f.active === true)\n                  .result ?? 0,\n              alias: actor.name,\n              actorId: actor.id,\n              flavor: roll.options.flavor,\n            },\n          });\n        }\n      );\n\n      window.Hooks.on(\n        \"encounter-stats.customEvent\",\n        async function (customEvent: HookCustomEvent) {\n          game.socket?.emit(SetupHooksDND5e.SOCKET_NAME, {\n            event: \"encounter-stats.customEvent\",\n            data: {\n              customEvent: customEvent,\n            },\n          });\n        }\n      );\n    }\n  }\n\n  static _setupSockerListeners() {\n    game.socket?.on(\n      SetupHooksDND5e.SOCKET_NAME,\n      async function (payload: unknown) {\n        switch (payload.event) {\n          case \"encounter-stats.customEvent\":\n            OnCustomEvent(payload.data.customEvent);\n            break;\n          case \"rsr5e.rollProcessed\":\n            OnEncounterWorkflowComplete(payload.data.workflow, ChatType.RSR);\n            OnTrackDice(payload.data.rollCheck);\n            break;\n          case \"midi-qol.RollComplete\":\n            OnEncounterWorkflowComplete(\n              payload.data.workflow,\n              ChatType.MidiQol\n            );\n            OnTrackDice(payload.data.rollCheck);\n            OnTrackRollStreak(\n              payload.data.workflow.diceTotal,\n              payload.data.rollCheck.name,\n              payload.data.workflow.actor.id\n            );\n            break;\n          case \"dnd5e.rollAttack\":\n            OnEncounterWorkflowComplete(\n              payload.data.EncounterWorkflow,\n              payload.data.ChatType\n            );\n            OnTrackRollStreak(\n              payload.data.EncounterWorkflow.diceTotal,\n              payload.data.EncounterWorkflow.actorName,\n              payload.data.EncounterWorkflow.actorId\n            );\n            break;\n          case \"dnd5e.useItem\":\n          case \"dnd5e.rollDamage\":\n            OnEncounterWorkflowComplete(\n              payload.data.EncounterWorkflow,\n              payload.data.ChatType\n            );\n            break;\n          case \"dnd5e.rollAbilityTest\":\n          case \"dnd5e.rollAbilitySave\":\n          case \"dnd5e.rollSkill\":\n            OnTrackDiceRoll(\n              payload.data.result,\n              payload.data.alias,\n              payload.data.flavor\n            );\n            OnTrackRollStreak(\n              payload.data.result,\n              payload.data.alias,\n              payload.data.actorId\n            );\n            break;\n        }\n      }\n    );\n  }\n\n  static async updateActorToken(actor: Actor, diff: unknown) {\n    if (StatManager.IsInCombat()) {\n      if (\n        actor.name &&\n        !actor.hasPlayerOwner &&\n        diff.system?.attributes?.hp?.value === 0 &&\n        game.combat?.current?.tokenId\n      ) {\n        OnTrackKill(actor.name, game.combat.current.tokenId);\n      }\n    }\n    if (\n      diff.system?.attributes?.hp &&\n      actor.id &&\n      Stat.IsValidCombatant(actor?.type)\n    ) {\n      OnUpdateHealth(actor);\n    }\n  }\n}\n", "import { EncounterWorkflow } from \"EncounterWorkflow\";\nimport { CombatDetailType } from \"../enums\";\n\nexport default class PF2e {\n  static async ParseHook(\n    chatMessage: ChatMessage,\n    actor: Actor,\n    type: CombatDetailType,\n    roll: Roll | undefined\n  ): Promise<EncounterWorkflow | undefined> {\n    const enemiesHit: Array<EnemyHit> = game.user?.targets.map(\n      (m) =>\n        <EnemyHit>{\n          tokenId: m.id,\n          name: m.name,\n        }\n    );\n\n    const numberOfEnemiesHit =\n      Array.from(enemiesHit).length > 0 ? Array.from(enemiesHit).length : 1;\n\n    if (type === CombatDetailType.Damage) {\n      return <EncounterWorkflow>{\n        id: chatMessage.id + actor.id,\n        actor: {\n          id: actor.id,\n          actorName: actor.name,\n        },\n        damageTotal: roll?.total ?? 0,\n        damageMultipleEnemiesTotal: roll?.total\n          ? roll.total * numberOfEnemiesHit\n          : 0,\n        isCritical: roll?.options.critical ?? false,\n        type: type,\n      };\n    } else if (type === CombatDetailType.Attack) {\n      return <EncounterWorkflow>{\n        id: chatMessage.id + actor.id,\n        actor: {\n          id: actor.id,\n        },\n        item: {\n          id: chatMessage.id,\n          name: chatMessage.name,\n          link: chatMessage.link,\n          type: chatMessage.type,\n          img: chatMessage.img,\n        },\n        attackTotal: roll?.total ?? 0,\n        isFumble:\n          roll?.terms[0]?.results?.find((f) => f.active === true).result === 1,\n        advantage: roll?.options.advantageMode === 1 ? true : false,\n        disadvantage: roll?.options.advantageMode === -1 ? true : false,\n        actionType: \"mwak\", // TODO: Parse different attack types\n        enemyHit: enemiesHit,\n        type: type,\n        diceTotal: roll?.dice[0]?.total,\n      };\n    }\n  }\n}\n", "import {\n  OnRenderCombatTracker,\n  OnCreateCombat,\n  OnUpdateCombat,\n  OnEncounterWorkflowComplete,\n  OnUpdateHealth,\n  OnTrackKill,\n  OnTrackDiceRoll,\n  OnCustomEvent,\n  OnTrackRollStreak,\n} from \"./Handlers\";\nimport StatManager from \"./StatManager\";\nimport { CombatDetailType, ChatType } from \"./enums\";\nimport Stat from \"./stats/Stat\";\nimport PF2e from \"./parsers/PF2e\";\n\nexport default class SetupHooksPF2e {\n  static SOCKET_NAME = \"module.encounter-stats\";\n\n  static async Setup() {\n    if (game.user?.isGM) {\n      SetupHooksPF2e._setupSockerListeners();\n      window.Hooks.on(\n        \"createChatMessage\",\n        async function (chatMessagePF2e: ChatMessage) {\n          let chatType = chatMessagePF2e?.flags?.pf2e?.context?.type;\n          if (!chatType) {\n            if (chatMessagePF2e.isDamageRoll) {\n              chatType = \"damage-roll\";\n            } else {\n              return;\n            }\n          }\n\n          if (chatType === \"attack-roll\" || chatType === \"spell-attack-roll\") {\n            const workflow = await PF2e.ParseHook(\n              chatMessagePF2e.item,\n              chatMessagePF2e.actor,\n              CombatDetailType.Attack,\n              chatMessagePF2e.roll\n            );\n            OnEncounterWorkflowComplete(workflow, ChatType.PF2e);\n            OnTrackRollStreak(\n              chatMessagePF2e.roll?.terms[0]?.results?.find(\n                (f) => f.active === true\n              ).result ?? 0,\n              chatMessagePF2e.actor.name,\n              chatMessagePF2e.actor.id\n            );\n          }\n          if (chatType === \"damage-roll\") {\n            const workflow = await PF2e.ParseHook(\n              chatMessagePF2e.item,\n              chatMessagePF2e.item.actor,\n              CombatDetailType.Damage,\n              chatMessagePF2e.roll\n            );\n            OnEncounterWorkflowComplete(workflow, ChatType.PF2e);\n          }\n          if (chatType === \"saving-throw\" || chatType.indexOf(\"-check\") > 0) {\n            OnTrackDiceRoll(\n              chatMessagePF2e.roll?.terms[0]?.results?.find(\n                (f) => f.active === true\n              ).result ?? 0,\n              chatMessagePF2e.actor.name,\n              chatMessagePF2e?.flags?.pf2e?.modifierName\n            );\n            OnTrackRollStreak(\n              chatMessagePF2e.roll?.terms[0]?.results?.find(\n                (f) => f.active === true\n              ).result ?? 0,\n              chatMessagePF2e.actor.name,\n              chatMessagePF2e.actor.id\n            );\n          }\n        }\n      );\n      window.Hooks.on(\n        \"renderCombatTracker\",\n        async function (\n          _combatTracker: CombatTracker,\n          _element: string,\n          combatData: HookRenderCombatTrackerData\n        ) {\n          OnRenderCombatTracker(combatData);\n        }\n      );\n      window.Hooks.on(\"createCombat\", async function (data: Combat) {\n        OnCreateCombat(data);\n      });\n      window.Hooks.on(\n        \"updateCombat\",\n        async function (_combat: Combat, data: HookUpdateCombatRound) {\n          OnUpdateCombat(data.round);\n        }\n      );\n\n      window.Hooks.on(\n        \"updateActor\",\n        async function (actor: Actor, diff: unknown) {\n          await SetupHooksPF2e.updateActorToken(actor, diff);\n        }\n      );\n\n      window.Hooks.on(\n        \"updateToken\",\n        async function (actor: Actor, diff: unknown) {\n          await SetupHooksPF2e.updateActorToken(actor, diff);\n        }\n      );\n\n      Hooks.on(\n        \"encounter-stats.customEvent\",\n        async function (customEvent: HookCustomEvent) {\n          OnCustomEvent(customEvent);\n        }\n      );\n    } else {\n      window.Hooks.on(\n        \"updateActor\",\n        async function (actor: Actor, diff: unknown) {\n          game.socket?.emit(SetupHooksPF2e.SOCKET_NAME, {\n            event: \"updateActor\",\n            data: { data: actor, diff: diff },\n          });\n        }\n      );\n      window.Hooks.on(\n        \"updateToken\",\n        async function (actor: Actor, diff: unknown) {\n          game.socket?.emit(SetupHooksPF2e.SOCKET_NAME, {\n            event: \"updateToken\",\n            data: { data: actor, diff: diff },\n          });\n        }\n      );\n    }\n  }\n\n  static _setupSockerListeners() {\n    game.socket?.on(\n      SetupHooksPF2e.SOCKET_NAME,\n      async function (payload: unknown) {\n        switch (payload.event) {\n          case \"encounter-stats.customEvent\":\n            OnCustomEvent(payload.data.customEvent);\n            break;\n        }\n      }\n    );\n  }\n\n  static async updateActorToken(actor: Actor, diff: unknown) {\n    if (StatManager.IsInCombat()) {\n      if (\n        actor.name &&\n        !actor.hasPlayerOwner &&\n        diff.system?.attributes?.hp?.value === 0 &&\n        game.combat?.current?.tokenId\n      ) {\n        OnTrackKill(actor.name, game.combat.current.tokenId);\n      }\n    }\n    if (\n      diff.system?.attributes?.hp &&\n      actor.id &&\n      Stat.IsValidCombatant(actor?.type)\n    ) {\n      OnUpdateHealth(actor);\n    }\n  }\n}\n", "import { OnDeleteCombat } from \"./Handlers\";\nimport SetupHooksDND5e from \"./SetupHooksDND5e\";\nimport SetupHooksPF2e from \"./SetupHooksPF2e\";\n\nexport default class SetupHooks {\n  static SOCKET_NAME = \"module.encounter-stats\";\n\n  static async Setup() {\n    if (game.system.id === \"dnd5e\") {\n      SetupHooksDND5e.Setup();\n    } else if (game.system.id === \"pf2e\") {\n      SetupHooksPF2e.Setup();\n    }\n\n    window.Hooks.on(\"preDeleteCombat\", async function (_combat: Combat) {\n      OnDeleteCombat(_combat);\n    });\n  }\n}\n", "import CampaignStat from \"../CampaignStat\";\nimport Gamemaster from \"../Helpers/Gamemaster\";\nimport Trans from \"../Helpers/Trans\";\nimport { MODULE_NAME } from \"../Settings\";\n\nexport default class CampaignStatsPanel extends FormApplication {\n  static get defaultOptions() {\n    return mergeObject(super.defaultOptions, {\n      title: Trans.Get(\"Settings.StatisticsManagement\"),\n      template: \"modules/encounter-stats/templates/settings.html\",\n      id: `${MODULE_NAME}-chat-settings`,\n      width: 520,\n      height: \"500\",\n      closeOnSubmit: true,\n    });\n  }\n\n  activateListeners(html) {\n    html.find(\"#encounter-stats-delete-statistics\").on(\"click\", this.deleteStatistics);\n    html.find(\"#encounter-stats-export-statistics\").on(\"click\", this.exportSettingsToJSON);\n    html.find(\"#encounter-stats-import-statistics\").on(\"click\", async () => {\n      if (await this.importFromJSONDialog()) {\n        this.close();\n      }\n    });\n  }\n\n  // @ts-expect-error TS(2416): Property 'getData' in type 'ChatSettingsPanel' is ... Remove this comment to see the full error message\n  getData() {\n    return;\n  }\n\n  deleteStatistics() {\n    Gamemaster.DeleteStats();\n    return ui.notifications?.info(\n      Trans.Get(\"Settings.CampaignStatsDeleted\")\n    );\n  }\n\n  // @ts-expect-error TS(2416): Property '_updateObject' in type 'ChatSettingsPane... Remove this comment to see the full error message\n  _updateObject(_event: any, formData: any) {\n    return;\n  }\n\n  exportSettingsToJSON() {\n    const filename = `encounter-stats-export.json`;\n    saveDataToFile(\n      JSON.stringify(Gamemaster.GetStats, null, 2),\n      \"text/json\",\n      filename\n    );\n  }\n\n  importSettingsFromJSON(json) {\n    if (typeof json === \"string\") {\n      json = JSON.parse(json);\n    }\n    Gamemaster.DeleteStats();\n    CampaignStat.Save(json);\n    return ui.notifications?.info(\n      Trans.Get(\"Settings.CampaignStatsImported\")\n    );\n  }\n\n  async importFromJSONDialog() {\n    const content = await renderTemplate(\"templates/apps/import-data.html\", {\n      entity: \"encounter-stats\",\n      name: \"Campaign Statistics\",\n    });\n    let dialog = new Promise((resolve, reject) => {\n      new Dialog(\n        {\n          title: Trans.Get(\"Settings.ImportCampaignStatistics\"),\n          content: content,\n          buttons: {\n            import: {\n              icon: '<i class=\"fas fa-file-import\"></i>',\n              label: Trans.Get(\"Settings.Import\"),\n              callback: (html) => {\n                //@ts-ignore\n                const form = html.find(\"form\")[0];\n                if (!form.data.files.length)\n                  return ui.notifications?.error(\n                    Trans.Get(\"Settings.FileUploadError\")\n                  );\n                readTextFromFile(form.data.files[0]).then((json) => {\n                  this.importSettingsFromJSON(json);\n                  resolve(true);\n                });\n              },\n            },\n            no: {\n              icon: '<i class=\"fas fa-times\"></i>',\n              label: Trans.Get(\"Settings.Cancel\"),\n              callback: (html) => resolve(false),\n            },\n          },\n          default: \"import\",\n        },\n        {\n          width: 400,\n        }\n      ).render(true);\n    });\n    return await dialog;\n  }\n}\n", "import { MODULE_ID } from \"../Settings\";\n\nexport function SettingsList(settings: any) {\n  const chatSettingsList = [];\n\n  for (const element of settings) {\n    const setting = element;\n\n    for (const [key, value] of (game.settings as any).settings.entries()) {\n      if (key === `${MODULE_ID}.${setting}`) {\n        const settingValue = game.settings.get(MODULE_ID, setting);\n\n        const choicesSelect = [];\n        let isArray = false;\n        if (value.choices) {\n          isArray = true;\n          for (const keyChoice in value.choices) {\n            choicesSelect.push({\n              key: keyChoice.toString(),\n              value: value.choices[keyChoice],\n              selected: keyChoice.toString() === settingValue,\n            });\n          }\n        }\n\n        chatSettingsList.push({\n          module: value.namespace ? value.namespace : value.module,\n          key: value.key,\n          type: value.type.name,\n          isBoolean: value.type.name === \"Boolean\",\n          isString: value.type.name === \"String\" && !value.choices,\n          isArray: isArray,\n          displayname: game.i18n.format(value.name),\n          hint: value.hint ? game.i18n.format(value.hint) : \"\",\n          choices: value.choices ? value.choices : [],\n          value: settingValue,\n          choicesSelect: choicesSelect,\n        });\n      }\n    }\n  }\n\n  return chatSettingsList;\n}\n\nexport function UpdateObject(formData: any) {\n  for (const key in formData) {\n    const keySplit = key.split(\".\");\n    game.settings.set(keySplit[0], keySplit[1], formData[key]);\n  }\n}\n", "import Trans from \"../Helpers/Trans\";\nimport { MODULE_NAME, OPT_SETTINGS_DICE_STREAK_ENABLE, OPT_SETTINGS_DICE_STREAK_TO_CHAT_ENABLE } from \"../Settings\";\nimport { SettingsList, UpdateObject } from \"./Helpers\";\n\nexport default class CampaignTrackingPanel extends FormApplication {\n  static get defaultOptions() {\n    return mergeObject(super.defaultOptions, {\n      title: Trans.Get(\"Settings.CampaignTrackingOptions\"),\n      template: \"modules/encounter-stats/templates/tracking.html\",\n      id: `${MODULE_NAME}-tracking-settings`,\n      width: 520,\n      height: \"500\",\n      closeOnSubmit: true,\n    });\n  }\n\n  settingsList(settings: any) {\n    return SettingsList(settings);\n  }\n\n  // @ts-expect-error TS(2416): Property 'getData' in type 'ChatSettingsPanel' is ... Remove this comment to see the full error message\n  getData() {\n    const settings = [\n      OPT_SETTINGS_DICE_STREAK_ENABLE,\n      OPT_SETTINGS_DICE_STREAK_TO_CHAT_ENABLE,\n    ];\n\n    return {\n      modules: this.settingsList(settings),\n    };\n  }\n\n  // @ts-expect-error TS(2416): Property '_updateObject' in type 'ChatSettingsPane... Remove this comment to see the full error message\n  _updateObject(_event: any, formData: any) {\n    UpdateObject(formData);\n  }\n}\n", "import {\n  MODULE_ID,\n  OPT_ENABLE,\n  OPT_ENABLE_EXPORT_JSON,\n  OPT_SETTINGS_DICE_STREAK_ENABLE,\n  OPT_SETTINGS_DICE_STREAK_TO_CHAT_ENABLE,\n} from \"./Settings\";\nimport Trans from \"./Helpers/Trans\";\nimport { CampaignStatsPanel, CampaignTrackingPanel } from \"./panels\";\n\nclass ModuleSettings {\n  /**\n   * Register all module settings\n   * @public\n   * @return {void}\n   */\n  static Register(): void {\n    game.settings.register(`${MODULE_ID}`, `${OPT_ENABLE}`, {\n      name: Trans.Get(\"opt_enable_name\"),\n      hint: Trans.Get(\"opt_enable_hint\"),\n      scope: \"world\",\n      config: true,\n      default: true,\n      type: Boolean,\n    });\n\n    game.settings.register(`${MODULE_ID}`, `${OPT_ENABLE_EXPORT_JSON}`, {\n      name: Trans.Get(\"opt_enable_export_json_name\"),\n      hint: Trans.Get(\"opt_enable_export_json_hint\"),\n      scope: \"world\",\n      config: true,\n      default: true,\n      type: Boolean,\n    });\n\n    game.settings.registerMenu(`${MODULE_ID}`, `CampaignStatsPanel`, {\n      name: Trans.Get(\"Settings.StatisticsManagement\"),\n      label: Trans.Get(\"Settings.Configure\"),\n      icon: \"fas fa-cog\",\n      scope: \"world\",\n      type: CampaignStatsPanel,\n      restricted: true,\n    });\n\n    game.settings.registerMenu(`${MODULE_ID}`, `CampaignTrackingPanel`, {\n      name: Trans.Get(\"Settings.CampaignTrackingOptions\"),\n      label: Trans.Get(\"Settings.Configure\"),\n      icon: \"fas fa-cog\",\n      scope: \"world\",\n      type: CampaignTrackingPanel,\n      restricted: true,\n    });\n\n    game.settings.register(\n      `${MODULE_ID}`,\n      `${OPT_SETTINGS_DICE_STREAK_ENABLE}`,\n      {\n        name: Trans.Get(\"opt_enable_dice_streak_name\"),\n        hint: Trans.Get(\"opt_enable_dice_streak_hint\"),\n        scope: \"world\",\n        config: false,\n        default: true,\n        type: Boolean,\n      }\n    );\n\n    game.settings.register(\n      `${MODULE_ID}`,\n      `${OPT_SETTINGS_DICE_STREAK_TO_CHAT_ENABLE}`,\n      {\n        name: Trans.Get(\"opt_enable_dice_streak_to_chat_name\"),\n        hint: Trans.Get(\"opt_enable_dice_streak_to_chat_hint\"),\n        scope: \"world\",\n        config: false,\n        default: true,\n        type: Boolean,\n      }\n    );\n  }\n}\n\nexport default ModuleSettings;\n", "import { MODULE_ID, OPT_ENABLE } from \"./Settings\";\nimport SetupHooks from \"./SetupHooks\";\nimport ModuleSettings from \"./ModuleSettings\";\nimport EncounterJournal from \"./EncounterJournal\";\nimport Logger from \"./Helpers/Logger\";\nimport Gamemaster from \"./Helpers/Gamemaster\";\n\nHooks.once(\"init\", async function () {\n  ModuleSettings.Register();\n\n  Logger.log(`Settings Registered`, \"module.init\");\n});\n\nHooks.once(\"ready\", async function () {\n  if (!game.settings.get(`${MODULE_ID}`, `${OPT_ENABLE}`)) {\n    return;\n  }\n\n  if (game.user?.isGM) {\n    if (!EncounterJournal.IsJournalSetup) {\n      await EncounterJournal.CreateJournal();\n    }\n\n    // Temporary for migration from Journal\n    const campaignJournal = await EncounterJournal.GetCampaignJournal();\n    if (campaignJournal) {\n      Gamemaster.SetStats(campaignJournal);\n      EncounterJournal.DeleteCampaignJournalEntryPageData();\n    }\n  }\n  SetupHooks.Setup();\n\n  Logger.log(`Module Ready`, \"module.ready\");\n});\n"],
  "mappings": "imCAAA,IAAAA,GAAAC,GAAA,CAAAC,GAAAC,KAAA,EAAC,SAASC,EAAEC,EAAE,CAAW,OAAOH,IAAjB,UAAuC,OAAOC,IAApB,YAA2BA,GAAO,QAAQE,EAAE,EAAc,OAAO,QAAnB,YAA2B,OAAO,IAAI,OAAOA,CAAC,GAAGD,EAAe,OAAO,YAApB,YAA+B,WAAWA,GAAG,MAAM,MAAMC,EAAE,CAAC,GAAEH,GAAM,UAAU,CAAC,aAAa,IAAIE,EAAE,IAAIC,EAAE,IAAIC,EAAE,KAAKC,EAAE,cAAcC,EAAE,SAASC,EAAE,SAASC,EAAE,OAAOC,EAAE,MAAMC,EAAE,OAAOC,EAAE,QAAQC,EAAE,UAAUC,EAAE,OAAOC,EAAE,OAAOC,EAAE,eAAeC,EAAE,6FAA6FC,GAAE,sFAAsFC,GAAE,CAAC,KAAK,KAAK,SAAS,2DAA2D,MAAM,GAAG,EAAE,OAAO,wFAAwF,MAAM,GAAG,EAAE,QAAQ,SAAShB,EAAE,CAAC,IAAIC,EAAE,CAAC,KAAK,KAAK,KAAK,IAAI,EAAEC,EAAEF,EAAE,IAAI,MAAM,IAAIA,GAAGC,GAAGC,EAAE,IAAI,EAAE,GAAGD,EAAEC,CAAC,GAAGD,EAAE,CAAC,GAAG,GAAG,CAAC,EAAEgB,EAAE,SAASjB,EAAEC,EAAEC,EAAE,CAAC,IAAIC,EAAE,OAAOH,CAAC,EAAE,MAAM,CAACG,GAAGA,EAAE,QAAQF,EAAED,EAAE,GAAG,MAAMC,EAAE,EAAEE,EAAE,MAAM,EAAE,KAAKD,CAAC,EAAEF,CAAC,EAAEkB,EAAE,CAAC,EAAED,EAAE,EAAE,SAASjB,EAAE,CAAC,IAAIC,EAAE,CAACD,EAAE,UAAU,EAAEE,EAAE,KAAK,IAAID,CAAC,EAAEE,EAAE,KAAK,MAAMD,EAAE,EAAE,EAAEE,EAAEF,EAAE,GAAG,OAAOD,GAAG,EAAE,IAAI,KAAKgB,EAAEd,EAAE,EAAE,GAAG,EAAE,IAAIc,EAAEb,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,SAASJ,EAAEC,EAAEC,EAAE,CAAC,GAAGD,EAAE,KAAK,EAAEC,EAAE,KAAK,EAAE,MAAM,CAACF,EAAEE,EAAED,CAAC,EAAE,IAAIE,EAAE,IAAID,EAAE,KAAK,EAAED,EAAE,KAAK,IAAIC,EAAE,MAAM,EAAED,EAAE,MAAM,GAAGG,EAAEH,EAAE,MAAM,EAAE,IAAIE,EAAEM,CAAC,EAAEJ,EAAEH,EAAEE,EAAE,EAAEE,EAAEL,EAAE,MAAM,EAAE,IAAIE,GAAGE,EAAE,GAAG,GAAGI,CAAC,EAAE,MAAM,EAAE,EAAEN,GAAGD,EAAEE,IAAIC,EAAED,EAAEE,EAAEA,EAAEF,KAAK,EAAE,EAAE,EAAE,SAASJ,EAAE,CAAC,OAAOA,EAAE,EAAE,KAAK,KAAKA,CAAC,GAAG,EAAE,KAAK,MAAMA,CAAC,CAAC,EAAE,EAAE,SAASA,EAAE,CAAC,MAAM,CAAC,EAAES,EAAE,EAAEE,EAAE,EAAEH,EAAE,EAAED,EAAE,EAAEK,EAAE,EAAEN,EAAE,EAAED,EAAE,EAAED,EAAE,GAAGD,EAAE,EAAEO,CAAC,EAAEV,CAAC,GAAG,OAAOA,GAAG,EAAE,EAAE,YAAY,EAAE,QAAQ,KAAK,EAAE,CAAC,EAAE,EAAE,SAASA,EAAE,CAAC,OAAgBA,IAAT,MAAU,CAAC,EAAEmB,EAAE,KAAKC,EAAE,CAAC,EAAEA,EAAED,CAAC,EAAEH,GAAE,IAAIK,EAAE,SAASrB,EAAE,CAAC,OAAOA,aAAasB,EAAC,EAAEC,GAAE,SAASvB,EAAEC,EAAEC,EAAEC,EAAE,CAAC,IAAIC,EAAE,GAAG,CAACH,EAAE,OAAOkB,EAAE,GAAa,OAAOlB,GAAjB,SAAmB,CAAC,IAAII,EAAEJ,EAAE,YAAY,EAAEmB,EAAEf,CAAC,IAAID,EAAEC,GAAGH,IAAIkB,EAAEf,CAAC,EAAEH,EAAEE,EAAEC,GAAG,IAAIC,EAAEL,EAAE,MAAM,GAAG,EAAE,GAAG,CAACG,GAAGE,EAAE,OAAO,EAAE,OAAON,EAAEM,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIC,EAAEN,EAAE,KAAKmB,EAAEb,CAAC,EAAEN,EAAEG,EAAEG,CAAC,CAAC,MAAM,CAACJ,GAAGC,IAAIe,EAAEf,GAAGA,GAAG,CAACD,GAAGgB,CAAC,EAAEK,EAAE,SAASxB,EAAEC,EAAE,CAAC,GAAGoB,EAAErB,CAAC,EAAE,OAAOA,EAAE,MAAM,EAAE,IAAIE,EAAY,OAAOD,GAAjB,SAAmBA,EAAE,CAAC,EAAE,OAAOC,EAAE,KAAKF,EAAEE,EAAE,KAAK,UAAU,IAAIoB,GAAEpB,CAAC,CAAC,EAAEuB,EAAEP,EAAEO,EAAE,EAAEF,GAAEE,EAAE,EAAEJ,EAAEI,EAAE,EAAE,SAASzB,EAAEC,EAAE,CAAC,OAAOuB,EAAExB,EAAE,CAAC,OAAOC,EAAE,GAAG,IAAIA,EAAE,GAAG,EAAEA,EAAE,GAAG,QAAQA,EAAE,OAAO,CAAC,CAAC,EAAE,IAAIqB,GAAE,UAAU,CAAC,SAASN,EAAEhB,EAAE,CAAC,KAAK,GAAGuB,GAAEvB,EAAE,OAAO,KAAK,EAAE,EAAE,KAAK,MAAMA,CAAC,CAAC,CAAC,IAAIiB,EAAED,EAAE,UAAU,OAAOC,EAAE,MAAM,SAASjB,EAAE,CAAC,KAAK,GAAG,SAASA,EAAE,CAAC,IAAIC,EAAED,EAAE,KAAKE,EAAEF,EAAE,IAAI,GAAUC,IAAP,KAAS,OAAO,IAAI,KAAK,GAAG,EAAE,GAAGwB,EAAE,EAAExB,CAAC,EAAE,OAAO,IAAI,KAAK,GAAGA,aAAa,KAAK,OAAO,IAAI,KAAKA,CAAC,EAAE,GAAa,OAAOA,GAAjB,UAAoB,CAAC,MAAM,KAAKA,CAAC,EAAE,CAAC,IAAIE,EAAEF,EAAE,MAAMa,CAAC,EAAE,GAAGX,EAAE,CAAC,IAAIC,EAAED,EAAE,CAAC,EAAE,GAAG,EAAEE,GAAGF,EAAE,CAAC,GAAG,KAAK,UAAU,EAAE,CAAC,EAAE,OAAOD,EAAE,IAAI,KAAK,KAAK,IAAIC,EAAE,CAAC,EAAEC,EAAED,EAAE,CAAC,GAAG,EAAEA,EAAE,CAAC,GAAG,EAAEA,EAAE,CAAC,GAAG,EAAEA,EAAE,CAAC,GAAG,EAAEE,CAAC,CAAC,EAAE,IAAI,KAAKF,EAAE,CAAC,EAAEC,EAAED,EAAE,CAAC,GAAG,EAAEA,EAAE,CAAC,GAAG,EAAEA,EAAE,CAAC,GAAG,EAAEA,EAAE,CAAC,GAAG,EAAEE,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,KAAKJ,CAAC,CAAC,EAAED,CAAC,EAAE,KAAK,GAAGA,EAAE,GAAG,CAAC,EAAE,KAAK,KAAK,CAAC,EAAEiB,EAAE,KAAK,UAAU,CAAC,IAAIjB,EAAE,KAAK,GAAG,KAAK,GAAGA,EAAE,YAAY,EAAE,KAAK,GAAGA,EAAE,SAAS,EAAE,KAAK,GAAGA,EAAE,QAAQ,EAAE,KAAK,GAAGA,EAAE,OAAO,EAAE,KAAK,GAAGA,EAAE,SAAS,EAAE,KAAK,GAAGA,EAAE,WAAW,EAAE,KAAK,GAAGA,EAAE,WAAW,EAAE,KAAK,IAAIA,EAAE,gBAAgB,CAAC,EAAEiB,EAAE,OAAO,UAAU,CAAC,OAAOQ,CAAC,EAAER,EAAE,QAAQ,UAAU,CAAC,OAAQ,KAAK,GAAG,SAAS,IAAIJ,CAAE,EAAEI,EAAE,OAAO,SAASjB,EAAEC,EAAE,CAAC,IAAIC,EAAEsB,EAAExB,CAAC,EAAE,OAAO,KAAK,QAAQC,CAAC,GAAGC,GAAGA,GAAG,KAAK,MAAMD,CAAC,CAAC,EAAEgB,EAAE,QAAQ,SAASjB,EAAEC,EAAE,CAAC,OAAOuB,EAAExB,CAAC,EAAE,KAAK,QAAQC,CAAC,CAAC,EAAEgB,EAAE,SAAS,SAASjB,EAAEC,EAAE,CAAC,OAAO,KAAK,MAAMA,CAAC,EAAEuB,EAAExB,CAAC,CAAC,EAAEiB,EAAE,GAAG,SAASjB,EAAEC,EAAEC,EAAE,CAAC,OAAOuB,EAAE,EAAEzB,CAAC,EAAE,KAAKC,CAAC,EAAE,KAAK,IAAIC,EAAEF,CAAC,CAAC,EAAEiB,EAAE,KAAK,UAAU,CAAC,OAAO,KAAK,MAAM,KAAK,QAAQ,EAAE,GAAG,CAAC,EAAEA,EAAE,QAAQ,UAAU,CAAC,OAAO,KAAK,GAAG,QAAQ,CAAC,EAAEA,EAAE,QAAQ,SAASjB,EAAEC,EAAE,CAAC,IAAIC,EAAE,KAAKC,EAAE,CAAC,CAACsB,EAAE,EAAExB,CAAC,GAAGA,EAAES,EAAEe,EAAE,EAAEzB,CAAC,EAAEa,EAAE,SAASb,GAAEC,EAAE,CAAC,IAAIG,EAAEqB,EAAE,EAAEvB,EAAE,GAAG,KAAK,IAAIA,EAAE,GAAGD,EAAED,EAAC,EAAE,IAAI,KAAKE,EAAE,GAAGD,EAAED,EAAC,EAAEE,CAAC,EAAE,OAAOC,EAAEC,EAAEA,EAAE,MAAMG,CAAC,CAAC,EAAEO,EAAE,SAASd,GAAEC,EAAE,CAAC,OAAOwB,EAAE,EAAEvB,EAAE,OAAO,EAAEF,EAAC,EAAE,MAAME,EAAE,OAAO,GAAG,GAAGC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,MAAMF,CAAC,CAAC,EAAEC,CAAC,CAAC,EAAEa,EAAE,KAAK,GAAGC,EAAE,KAAK,GAAGC,EAAE,KAAK,GAAGC,EAAE,OAAO,KAAK,GAAG,MAAM,IAAI,OAAOR,EAAE,CAAC,KAAKC,EAAE,OAAOR,EAAEU,EAAE,EAAE,CAAC,EAAEA,EAAE,GAAG,EAAE,EAAE,KAAKJ,EAAE,OAAON,EAAEU,EAAE,EAAEG,CAAC,EAAEH,EAAE,EAAEG,EAAE,CAAC,EAAE,KAAKR,EAAE,IAAIW,GAAE,KAAK,QAAQ,EAAE,WAAW,EAAEC,IAAGL,EAAEI,GAAEJ,EAAE,EAAEA,GAAGI,GAAE,OAAON,EAAEV,EAAEc,EAAEG,GAAEH,GAAG,EAAEG,IAAGJ,CAAC,EAAE,KAAKT,EAAE,KAAKK,EAAE,OAAOE,EAAEI,EAAE,QAAQ,CAAC,EAAE,KAAKZ,EAAE,OAAOQ,EAAEI,EAAE,UAAU,CAAC,EAAE,KAAKb,EAAE,OAAOS,EAAEI,EAAE,UAAU,CAAC,EAAE,KAAKd,EAAE,OAAOU,EAAEI,EAAE,eAAe,CAAC,EAAE,QAAQ,OAAO,KAAK,MAAM,CAAC,CAAC,EAAED,EAAE,MAAM,SAASjB,EAAE,CAAC,OAAO,KAAK,QAAQA,EAAE,EAAE,CAAC,EAAEiB,EAAE,KAAK,SAASjB,EAAEC,EAAE,CAAC,IAAIC,EAAEM,EAAEiB,EAAE,EAAEzB,CAAC,EAAEU,EAAE,OAAO,KAAK,GAAG,MAAM,IAAIG,GAAGX,EAAE,CAAC,EAAEA,EAAEK,CAAC,EAAEG,EAAE,OAAOR,EAAEU,CAAC,EAAEF,EAAE,OAAOR,EAAEO,CAAC,EAAEC,EAAE,QAAQR,EAAES,CAAC,EAAED,EAAE,WAAWR,EAAEI,CAAC,EAAEI,EAAE,QAAQR,EAAEG,CAAC,EAAEK,EAAE,UAAUR,EAAEE,CAAC,EAAEM,EAAE,UAAUR,EAAEC,CAAC,EAAEO,EAAE,eAAeR,GAAGM,CAAC,EAAEM,EAAEN,IAAID,EAAE,KAAK,IAAIN,EAAE,KAAK,IAAIA,EAAE,GAAGO,IAAIC,GAAGD,IAAIG,EAAE,CAAC,IAAII,EAAE,KAAK,MAAM,EAAE,IAAIH,EAAE,CAAC,EAAEG,EAAE,GAAGF,CAAC,EAAEC,CAAC,EAAEC,EAAE,KAAK,EAAE,KAAK,GAAGA,EAAE,IAAIH,EAAE,KAAK,IAAI,KAAK,GAAGG,EAAE,YAAY,CAAC,CAAC,EAAE,EAAE,MAAMF,GAAG,KAAK,GAAGA,CAAC,EAAEC,CAAC,EAAE,OAAO,KAAK,KAAK,EAAE,IAAI,EAAEG,EAAE,IAAI,SAASjB,EAAEC,EAAE,CAAC,OAAO,KAAK,MAAM,EAAE,KAAKD,EAAEC,CAAC,CAAC,EAAEgB,EAAE,IAAI,SAASjB,EAAE,CAAC,OAAO,KAAKyB,EAAE,EAAEzB,CAAC,CAAC,EAAE,CAAC,EAAEiB,EAAE,IAAI,SAASd,EAAEO,EAAE,CAAC,IAAIE,EAAEC,EAAE,KAAKV,EAAE,OAAOA,CAAC,EAAE,IAAIW,EAAEW,EAAE,EAAEf,CAAC,EAAEK,EAAE,SAASf,EAAE,CAAC,IAAIC,EAAEuB,EAAEX,CAAC,EAAE,OAAOY,EAAE,EAAExB,EAAE,KAAKA,EAAE,KAAK,EAAE,KAAK,MAAMD,EAAEG,CAAC,CAAC,EAAEU,CAAC,CAAC,EAAE,GAAGC,IAAIL,EAAE,OAAO,KAAK,IAAIA,EAAE,KAAK,GAAGN,CAAC,EAAE,GAAGW,IAAIH,EAAE,OAAO,KAAK,IAAIA,EAAE,KAAK,GAAGR,CAAC,EAAE,GAAGW,IAAIP,EAAE,OAAOQ,EAAE,CAAC,EAAE,GAAGD,IAAIN,EAAE,OAAOO,EAAE,CAAC,EAAE,IAAIC,GAAGJ,EAAE,CAAC,EAAEA,EAAEP,CAAC,EAAEJ,EAAEW,EAAEN,CAAC,EAAEJ,EAAEU,EAAER,CAAC,EAAEJ,EAAEY,GAAGE,CAAC,GAAG,EAAEG,EAAE,KAAK,GAAG,QAAQ,EAAEd,EAAEa,EAAE,OAAOS,EAAE,EAAER,EAAE,IAAI,CAAC,EAAEA,EAAE,SAAS,SAASjB,EAAEC,EAAE,CAAC,OAAO,KAAK,IAAI,GAAGD,EAAEC,CAAC,CAAC,EAAEgB,EAAE,OAAO,SAASjB,EAAE,CAAC,IAAIC,EAAE,KAAKC,EAAE,KAAK,QAAQ,EAAE,GAAG,CAAC,KAAK,QAAQ,EAAE,OAAOA,EAAE,aAAaW,EAAE,IAAIV,EAAEH,GAAG,uBAAuBI,EAAEqB,EAAE,EAAE,IAAI,EAAEpB,EAAE,KAAK,GAAGC,EAAE,KAAK,GAAGC,EAAE,KAAK,GAAGC,EAAEN,EAAE,SAASO,EAAEP,EAAE,OAAOQ,EAAE,SAASV,EAAEE,EAAEE,GAAEC,GAAE,CAAC,OAAOL,IAAIA,EAAEE,CAAC,GAAGF,EAAEC,EAAEE,CAAC,IAAIC,GAAEF,CAAC,EAAE,MAAM,EAAEG,EAAC,CAAC,EAAEM,GAAE,SAASX,EAAE,CAAC,OAAOyB,EAAE,EAAEpB,EAAE,IAAI,GAAGL,EAAE,GAAG,CAAC,EAAEY,GAAEV,EAAE,UAAU,SAASF,EAAEC,EAAEC,GAAE,CAAC,IAAIC,GAAEH,EAAE,GAAG,KAAK,KAAK,OAAOE,GAAEC,GAAE,YAAY,EAAEA,EAAC,EAAEW,GAAE,CAAC,GAAG,OAAO,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,KAAK,GAAG,EAAEP,EAAE,EAAE,GAAGkB,EAAE,EAAElB,EAAE,EAAE,EAAE,GAAG,EAAE,IAAIG,EAAER,EAAE,YAAYK,EAAEE,EAAE,CAAC,EAAE,KAAKC,EAAED,EAAEF,CAAC,EAAE,EAAE,KAAK,GAAG,GAAGkB,EAAE,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,OAAO,KAAK,EAAE,EAAE,GAAGf,EAAER,EAAE,YAAY,KAAK,GAAGM,EAAE,CAAC,EAAE,IAAIE,EAAER,EAAE,cAAc,KAAK,GAAGM,EAAE,CAAC,EAAE,KAAKA,EAAE,KAAK,EAAE,EAAE,EAAE,OAAOH,CAAC,EAAE,GAAGoB,EAAE,EAAEpB,EAAE,EAAE,GAAG,EAAE,EAAEM,GAAE,CAAC,EAAE,GAAGA,GAAE,CAAC,EAAE,EAAEC,GAAEP,EAAEC,EAAE,EAAE,EAAE,EAAEM,GAAEP,EAAEC,EAAE,EAAE,EAAE,EAAE,OAAOA,CAAC,EAAE,GAAGmB,EAAE,EAAEnB,EAAE,EAAE,GAAG,EAAE,EAAE,OAAO,KAAK,EAAE,EAAE,GAAGmB,EAAE,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,IAAIA,EAAE,EAAE,KAAK,IAAI,EAAE,GAAG,EAAE,EAAErB,CAAC,EAAE,OAAOD,EAAE,QAAQY,GAAG,SAASf,EAAEC,EAAE,CAAC,OAAOA,GAAGa,GAAEd,CAAC,GAAGI,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAE,CAAC,EAAEa,EAAE,UAAU,UAAU,CAAC,MAAO,IAAG,CAAC,KAAK,MAAM,KAAK,GAAG,kBAAkB,EAAE,EAAE,CAAC,EAAEA,EAAE,KAAK,SAASd,EAAES,EAAEC,EAAE,CAAC,IAAIC,EAAEC,EAAEU,EAAE,EAAEb,CAAC,EAAEI,EAAEQ,EAAErB,CAAC,EAAEc,GAAGD,EAAE,UAAU,EAAE,KAAK,UAAU,GAAGf,EAAEiB,EAAE,KAAKF,EAAEG,EAAEM,EAAE,EAAE,KAAKT,CAAC,EAAE,OAAOG,GAAGL,EAAE,CAAC,EAAEA,EAAEH,CAAC,EAAEQ,EAAE,GAAGL,EAAEL,CAAC,EAAEU,EAAEL,EAAEJ,CAAC,EAAES,EAAE,EAAEL,EAAEN,CAAC,GAAGU,EAAED,GAAG,OAAOH,EAAEP,CAAC,GAAGW,EAAED,GAAG,MAAMH,EAAER,CAAC,EAAEY,EAAEhB,EAAEY,EAAET,CAAC,EAAEa,EAAEjB,EAAEa,EAAEV,CAAC,EAAEc,EAAElB,EAAEc,GAAGC,CAAC,GAAGG,EAAEL,EAAEM,EAAEM,EAAE,EAAEN,CAAC,CAAC,EAAEF,EAAE,YAAY,UAAU,CAAC,OAAO,KAAK,MAAMR,CAAC,EAAE,EAAE,EAAEQ,EAAE,QAAQ,UAAU,CAAC,OAAOG,EAAE,KAAK,EAAE,CAAC,EAAEH,EAAE,OAAO,SAASjB,EAAEC,EAAE,CAAC,GAAG,CAACD,EAAE,OAAO,KAAK,GAAG,IAAIE,EAAE,KAAK,MAAM,EAAEC,EAAEoB,GAAEvB,EAAEC,EAAE,EAAE,EAAE,OAAOE,IAAID,EAAE,GAAGC,GAAGD,CAAC,EAAEe,EAAE,MAAM,UAAU,CAAC,OAAOQ,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,EAAER,EAAE,OAAO,UAAU,CAAC,OAAO,IAAI,KAAK,KAAK,QAAQ,CAAC,CAAC,EAAEA,EAAE,OAAO,UAAU,CAAC,OAAO,KAAK,QAAQ,EAAE,KAAK,YAAY,EAAE,IAAI,EAAEA,EAAE,YAAY,UAAU,CAAC,OAAO,KAAK,GAAG,YAAY,CAAC,EAAEA,EAAE,SAAS,UAAU,CAAC,OAAO,KAAK,GAAG,YAAY,CAAC,EAAED,CAAC,EAAE,EAAEU,GAAEJ,GAAE,UAAU,OAAOE,EAAE,UAAUE,GAAE,CAAC,CAAC,MAAMvB,CAAC,EAAE,CAAC,KAAKC,CAAC,EAAE,CAAC,KAAKC,CAAC,EAAE,CAAC,KAAKC,CAAC,EAAE,CAAC,KAAKC,CAAC,EAAE,CAAC,KAAKE,CAAC,EAAE,CAAC,KAAKE,CAAC,EAAE,CAAC,KAAKC,CAAC,CAAC,EAAE,QAAS,SAASZ,EAAE,CAAC0B,GAAE1B,EAAE,CAAC,CAAC,EAAE,SAASC,EAAE,CAAC,OAAO,KAAK,GAAGA,EAAED,EAAE,CAAC,EAAEA,EAAE,CAAC,CAAC,CAAC,CAAC,CAAE,EAAEwB,EAAE,OAAO,SAASxB,EAAEC,EAAE,CAAC,OAAOD,EAAE,KAAKA,EAAEC,EAAEqB,GAAEE,CAAC,EAAExB,EAAE,GAAG,IAAIwB,CAAC,EAAEA,EAAE,OAAOD,GAAEC,EAAE,QAAQH,EAAEG,EAAE,KAAK,SAASxB,EAAE,CAAC,OAAOwB,EAAE,IAAIxB,CAAC,CAAC,EAAEwB,EAAE,GAAGJ,EAAED,CAAC,EAAEK,EAAE,GAAGJ,EAAEI,EAAE,EAAE,CAAC,EAAEA,CAAC,CAAE,ICArgN,IAAMG,GAAc,4BACdC,EAAY,kBAGlB,IAAMC,GAAe,uBAKrB,IAAMC,GAAa,SACbC,GAAyB,mBAEzBC,EAAkC,mBAClCC,GAA0C,yBCbvD,IAAqBC,GAArB,KAA+C,CAC7C,OAAO,WAAY,CACjB,OAAO,OAAO,gBAAmB,WACnC,CAEA,OAAO,wBAAyB,CALlC,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAMI,MAAO,IAAGN,EAAA,eAAe,IAAI,cAAc,IAAjC,YAAAA,EAAoC,SAC5CE,GAAAD,EAAA,eAAe,MAAf,YAAAA,EAAoB,oBAApB,YAAAC,EAAuC,SACrCE,GAAAD,EAAA,eAAe,MAAf,YAAAA,EAAoB,mBAApB,YAAAC,EAAsC,0BACxCE,GAAAD,EAAA,eAAe,MAAf,YAAAA,EAAoB,mBAApB,YAAAC,EAAsC,SAE1C,CACF,ECZA,IAAMC,GAAN,KAAa,CACX,OAAc,IACZC,EACAC,EAAS,SACTC,EAAgB,CAAC,EACX,CACN,QAAQ,IAAI,kBAAmBD,EAAQD,EAAaE,CAAI,CAC1D,CAEA,OAAc,MACZF,EACAC,EAAS,SACTC,EAAgB,CAAC,EACX,CACN,QAAQ,MAAM,kBAAmBD,EAAQD,EAAaE,CAAI,CAC5D,CAEA,OAAc,KACZF,EACAC,EAAS,SACTC,EAAgB,CAAC,EACX,CACN,QAAQ,KAAK,kBAAmBD,EAAQD,EAAaE,CAAI,CAC3D,CAEA,OAAc,MACZF,EACAC,EAAS,SACTC,EAAgB,CAAC,EACX,CACN,QAAQ,MAAM,kBAAmBD,EAAQD,EAAaE,CAAI,CAC5D,CACF,EAEOC,EAAQJ,GClCf,IAAAK,GAAkB,WAEZC,GAAN,KAAY,CACV,WAAW,KAAmB,CAC5B,IAAMC,KAAc,GAAAC,SAAM,EAC1B,MAAO,CACL,GAAID,EAAY,YAAY,EAAE,QAAQ,OAAQ,EAAE,EAAE,UAAU,EAAG,CAAC,EAChE,gBAAiBA,EAAY,OAAO,oBAAoB,EACxD,YAAaA,EAAY,OAAO,cAAc,CAChD,CACF,CACF,EAEOE,EAAQH,GCTf,IAAMI,GAAN,KAAuB,CAGrB,WAAW,gBAA0B,CAPvC,IAAAC,EAQI,QACEA,EAAA,KAAK,UAAL,YAAAA,EAAc,KAAM,GAAoB,EAAE,OAAS,KAAK,kBACxD,MAEJ,CAEA,OAAa,eAAgB,QAAAC,EAAA,sBAC3B,MAAM,aAAa,OACjB,CACE,KAAM,KAAK,aACb,EACA,CAAE,YAAa,GAAO,SAAU,EAAM,CACxC,EAEA,MAAMF,GAAiB,+BAA+B,CACxD,GAEA,OAAa,uBAAuBG,EAAqB,QAAAD,EAAA,sBAzB3D,IAAAD,EA0BI,IAAIG,EAAQ,GAAGC,EAAM,IAAI,kBAErBC,GAA0B,UAAU,IACtCF,EAAQ,GAAGE,GAA0B,uBAAuB,MAAMH,MAGpE,IAAMI,GAAeN,EAAA,KAAK,UAAL,YAAAA,EAAc,KAChCO,GAAoBA,EAAE,OAAS,KAAK,eAGvC,GAAI,CAACD,EAAc,CACjBE,EAAO,MACL,8BAA8B,KAAK,gBACnC,yCACF,EACA,MACF,CACA,MAAMF,EAAa,wBAAwB,mBAAoB,CAC7D,CACE,KAAMH,EACN,KAAM,OACN,KAAM,CACJ,QAAS,GACT,OAAQ,MAAM,2BAA2B,IAC3C,EACA,oCAAqCD,CACvC,CACF,CAAC,EAED,MAAM,KAAK,gBAAgB,CAC7B,GAGA,OAAa,oCAAqC,QAAAD,EAAA,sBA3DpD,IAAAD,EAAAS,IA4D6BA,GAAAT,EAAA,KAAK,UAAL,YAAAA,EACrB,KAAMO,GAAoBA,EAAE,OAAS,KAAK,iBADrB,YAAAE,EAErB,MAAM,KACLF,GACCA,EAAE,QAAQ,kBAAmB,eAAe,IAAM,SAGvC,OAAO,CAC1B,GAEA,OAAa,gCAAiC,QAAAN,EAAA,sBAtEhD,IAAAD,EAuEI,IAAMM,GAAeN,EAAA,KAAK,UAAL,YAAAA,EAAc,KAChCO,GAAoBA,EAAE,OAAS,KAAK,eAGvC,GAAI,CAACD,EAAc,CACjBE,EAAO,MACL,8BAA8B,KAAK,gBACnC,iDACF,EACA,MACF,CACA,MAAMF,EAAa,wBAAwB,mBAAoB,CAC7D,CACE,KAAM,sBACN,KAAM,OACN,KAAM,CACJ,QAAS,GACT,OAAQ,MAAM,2BAA2B,IAC3C,EACA,sCAAuC,MACzC,CACF,CAAC,CACH,GAEA,OAAa,kBACXI,EACAC,EACAC,EACA,QAAAX,EAAA,sBAnGJ,IAAAD,EAAAS,EAoGI,IAAMI,GAAmBJ,GAAAT,EAAA,KAAK,UAAL,YAAAA,EACrB,KAAMO,GAAoBA,EAAE,OAAS,KAAK,iBADrB,YAAAE,EAErB,MAAM,KACLF,GACCA,EAAE,QAAQ,kBAAmBI,CAAQ,IAAMC,GAGjD,GAAI,CAACC,EAAkB,CACrBL,EAAO,MACL,8BAA8B,KAAK,qBAAqBG,KAAYC,IACpE,oCACF,EACA,MACF,CAEA,MAAMb,GAAiB,mBAAmB,CACxC,IAAKc,EAAiB,IACtB,MAAOA,EAAiB,MACxB,KAAM,CACJ,QAASH,CACX,CACF,CAAC,CACH,GAEA,OAAqB,iBAAkB,QAAAT,EAAA,sBA5HzC,IAAAD,EA6HI,IAAMM,GAAeN,EAAA,KAAK,UAAL,YAAAA,EAAc,QAAQ,KAAK,eAE5Cc,EAAY,IAEVC,EAAuB,IAAI,IAC/B,CAAC,GAAGT,EAAa,MAAM,QAAQ,CAAC,EAAE,KAAK,CAACU,EAAGC,IACzCD,EAAE,KAAOC,EAAE,KAAO,EAAI,EACxB,CACF,EAEA,OAAW,CAAC,CAAEJ,CAAgB,IAAKE,EAAqB,QAAQ,EAE5DF,EAAiB,QAAQ,kBAAmB,eAAe,IAAM,OAEjE,MAAMd,GAAiB,mBAAmB,CACxC,IAAKc,EAAiB,IACtB,MAAO,CAAC,EACR,KAAM,GACR,CAAC,GAED,MAAMd,GAAiB,mBAAmB,CACxC,IAAKc,EAAiB,IACtB,MAAO,CAAC,EACR,KAAMC,CACR,CAAC,EACDA,EAAYA,EAAY,IAG9B,GAEA,OAAqB,mBAAmBI,EAAiB,QAAAjB,EAAA,sBA3J3D,IAAAD,EA4JI,MAAMA,EAAA,KAAK,UAAL,YAAAA,EACF,QAAQ,KAAK,eACd,wBAAwB,mBAAoB,CAACkB,CAAM,EAAG,CACrD,KAAM,GACN,OAAQ,EACV,EACJ,GAGA,OAAa,oBAAyD,QAAAjB,EAAA,sBArKxE,IAAAD,EAAAS,EAsKI,IAAMI,GAAmBJ,GAAAT,EAAA,KAAK,UAAL,YAAAA,EACrB,KAAMO,GAAoBA,EAAE,OAAS,KAAK,iBADrB,YAAAE,EAErB,MAAM,KACLF,GACCA,EAAE,QAAQ,kBAAmB,eAAe,IAAM,QAGxD,GAAKM,EAIL,OACE,KAAK,MACHA,EAAiB,KAAK,QAAQ,QAAQ,MAAO,EAAE,EAAE,QAAQ,OAAQ,EAAE,CACrE,CAEJ,GACF,EAnLMM,GAANpB,GAAMoB,GACY,cAAgB,uBAoLlC,IAAOC,EAAQD,GCzLf,IAAqBE,EAArB,KAAgC,CAC9B,OAAO,wBAAwBC,EAAuB,CADxD,IAAAC,EAAAC,EAEI,OAAKD,EAAA,KAAK,SAAL,MAAAA,EAAa,SAEXC,EAAA,KAAK,SAAL,YAAAA,EAAa,QAAQ,kBAAmBF,MAAU,OAFxB,EAGnC,CAEA,OAAa,IACXA,EACAG,EACgC,QAAAC,EAAA,sBAVpC,IAAAH,EAWI,GAAI,CAACF,EAAW,wBAAwBC,CAAI,EAAG,OAE/C,IAAIK,GAAYJ,EAAA,KAAK,SAAL,YAAAA,EAAa,QAAQ,kBAAmBD,GAGxD,GAAIG,GAEE,CAACE,EAAU,WAAW,KAAMC,GAAMA,EAAE,KAAOH,CAAO,EAAG,CAEvD,IAAMI,EAA+B,MAAM,KAAK,QAAQ,KAAMC,GAC5DA,EACG,QAAQ,kBAAmBR,CAAI,EAC/B,WAAW,KAAMM,GAAMA,EAAE,KAAOH,CAAO,CAC5C,EACA,GAAI,CAACI,EAA8B,OAEnCF,EAAYE,EAA6B,QACvC,kBACAP,CACF,CAEF,CAGF,OAAOK,CACT,GAEA,OAAa,KAAKI,EAAkBC,EAAiB,QAAAN,EAAA,sBACnD,MAAM,KAAK,QACR,KAAMI,GAAMA,EAAE,KAAOE,EAAK,WAAW,EACrC,QAAQ,kBAAmBD,EAAUC,CAAI,CAC9C,GACF,ECxBO,IAAKC,QACVA,IAAA,KAAO,GAAP,OADUA,QAAA,IAIAC,QACVA,IAAA,KAAO,GAAP,OACAA,IAAA,KAAO,GAAP,OACAA,IAAA,KAAO,GAAP,OACAA,IAAA,KAAO,GAAP,OACAA,IAAA,KAAO,GAAP,OALUA,QAAA,IAQAC,QACVA,IAAA,KAAO,GAAP,OACAA,IAAA,KAAO,GAAP,OACAA,IAAA,KAAO,GAAP,OACAA,IAAA,KAAO,GAAP,OACAA,IAAA,KAAO,GAAP,OACAA,IAAA,KAAO,GAAP,OANUA,QAAA,ICrBZ,IAAqBC,EAArB,KAA0B,CAGxB,YAAYC,EAAsB,CAChC,GAAIA,EAAa,CACf,IAAMC,EAAOC,EAAM,IAAI,gBACvB,KAAK,WAAa,CAChB,YAAaF,EACb,MAAO,EACP,SAAU,CACR,MAAOC,EACP,IAAK,GACL,SAAUA,EACV,MAAO,CACL,GAAI,GACJ,KAAM,GACN,MAAO,EACT,CACF,EACA,QAAS,CAAC,EACV,WAAY,CAAC,EACb,IAAK,CACH,UAAW,GACX,oBAAqB,GACrB,iBAAkB,GAClB,iBAAkB,GAClB,UAAW,GACX,YAAa,GACb,mBAAoB,GACpB,uBAAwB,GAC1B,EACA,oBAAqB,CAAC,EACtB,aAAc,CACZ,sBAAuB,EACvB,qBAAsB,EACtB,sBAAuB,EACvB,YAAa,EACb,oBAAqB,CAAC,CACxB,CACF,CACF,CACF,CAEA,IAAI,UAAUE,EAAW,CACvB,KAAK,WAAaA,CACpB,CAEA,IAAI,WAAuB,CACzB,OAAO,KAAK,UACd,CAEA,IAAI,cAAwB,CAC1B,OAAO,KAAK,aAAe,MAC7B,CAEA,IAAI,cAAuB,CACzB,OAAO,KAAK,WAAW,KACzB,CAEA,WAAY,CArEd,IAAAC,GAsESA,EAAA,KAAK,aAAL,MAAAA,EAAiB,WACtB,KAAK,WAAW,SAAS,IAAMF,EAAM,IAAI,gBAC3C,CAEA,QAAQG,EAAoBC,EAAiB,CAC3C,IAAMC,EAA2B,CAAC,EAE5BC,EAAgB,KAAK,2BAA2BF,CAAO,EAC7D,GAAI,CAACE,EAAe,CAClBC,EAAO,KACL,uCAAuCH,IACvC,eACAA,CACF,EACA,MACF,CAEAC,EAAS,MAAQ,KAAK,aACtBA,EAAS,UAAYF,EAErBG,EAAc,MAAM,KAAKD,CAAQ,CACnC,CAEA,aAAaG,EAAc,CACzB,IAAMC,EAAkC,CAAC,EACzC,GAAI,CAACD,EAAM,GAAI,CACbD,EAAO,KAAK,qBAAsB,oBAAqBC,CAAK,EAC5D,MACF,CAEA,IAAMF,EAAgB,KAAK,kBAAkBE,EAAM,EAAE,EACrD,GAAI,CAACF,EAAe,CAClBC,EAAO,KACL,uCAAuCC,EAAM,KAC7C,oBACAA,CACF,EACA,MACF,CACAC,EAAW,MAAQ,KAAK,aACxBA,EAAW,QAAUD,GAAA,YAAAA,EAAO,GAC5BC,EAAW,IAAMD,EAAM,OAAO,WAAW,GAAG,IAC5CC,EAAW,QAAUD,EAAM,OAAO,WAAW,GAAG,MAE5CF,EAAc,OAAO,OAAS,EAChCG,EAAW,SACTH,EAAc,OAAOA,EAAc,OAAO,OAAS,CAAC,EAAE,QAExDG,EAAW,SAAWH,EAAc,GAGlCG,EAAW,QAAUA,EAAW,UAClCA,EAAW,KAAOA,EAAW,QAAUA,EAAW,SAClDA,EAAW,OAAS,IACXA,EAAW,QAAUA,EAAW,WACzCA,EAAW,KAAOA,EAAW,SAAWA,EAAW,QACnDA,EAAW,SAAW,IAExBH,EAAc,OAAO,KAAKG,CAAU,CACtC,CAEA,SAASC,EAAgB,CACvB,KAAK,WAAW,QAAQ,KAAKA,CAAK,CACpC,CAEM,aAAaF,EAAcJ,EAAiBO,EAA2B,QAAAC,EAAA,sBAC3E,GAAI,CAACJ,GAAS,CAACA,EAAM,IAAM,CAACA,EAAM,KAAM,CACtCD,EAAO,KAAK,yBAAyBC,IAAS,oBAAqBA,CAAK,EACxE,MACF,CACA,IAAMK,EAAa,MAAML,EAAM,eAAe,EAE9C,GAAI,CAACX,EAAK,iBAAiBW,GAAA,YAAAA,EAAO,IAAI,EAAG,OAEzC,IAAMM,EAAmC,CACvC,KAAMN,EAAM,KACZ,GAAIA,EAAM,GACV,QAASJ,EACT,IAAKS,EAAW,OAAS,EAAIA,EAAW,CAAC,EAAIL,EAAM,IACnD,KAAMA,EAAM,KACZ,GAAIA,EAAM,OAAO,WAAW,GAAG,MAC/B,IAAKA,EAAM,OAAO,WAAW,GAAG,IAChC,GAAIA,EAAM,OAAO,WAAW,GAAG,MAC/B,WAAYG,EACZ,UAAW,CACT,IAAKH,EAAM,OAAO,UAAU,IAAI,MAChC,IAAKA,EAAM,OAAO,UAAU,IAAI,MAChC,IAAKA,EAAM,OAAO,UAAU,IAAI,MAChC,IAAKA,EAAM,OAAO,UAAU,IAAI,MAChC,IAAKA,EAAM,OAAO,UAAU,IAAI,MAChC,IAAKA,EAAM,OAAO,UAAU,IAAI,KAClC,EACA,OAAQ,CAAC,EACT,OAAQ,CAAC,EACT,MAAO,CAAC,EACR,YAAa,CACX,IAAK,EACL,IAAK,EACL,IAAK,EACL,MAAO,CACT,EACA,aAAc,CACZ,OAAQ,CACN,CACE,MAAO,KAAK,aACZ,YAAa,CACf,CACF,CACF,CACF,EAEIO,EAAmB,KAAK,WAAW,WAAW,KAC/CC,GAAMA,EAAE,KAAOF,EAAa,EAC/B,EAEKC,IACH,KAAK,WAAW,WAAW,KAAKD,CAAY,EAC5CC,EAAmB,KAAK,WAAW,WAAW,KAC3CC,GAAMA,EAAE,KAAOF,EAAa,EAC/B,EACIC,GAAA,MAAAA,EAAkB,YACpB,KAAK,WAAW,WAAW,KAAK,CAACE,EAAGC,IAAG,CA/L/C,IAAAhB,EAAAiB,EAgMW,QAAAjB,EAAAe,EAAE,aAAF,KAAAf,EAAgB,KAAMiB,EAAAD,EAAE,aAAF,KAAAC,EAAgB,GAAK,EAAI,GAClD,GAIA,EAACJ,GAAA,MAAAA,EAAkB,aAAcD,EAAa,aAChDC,EAAiB,WAAaD,EAAa,WAC3C,KAAK,WAAW,WAAW,KAAK,CAACG,EAAGC,IAAG,CAvM7C,IAAAhB,EAAAiB,EAwMS,QAAAjB,EAAAe,EAAE,aAAF,KAAAf,EAAgB,KAAMiB,EAAAD,EAAE,aAAF,KAAAC,EAAgB,GAAK,EAAI,GAClD,EAEJ,GAEA,cAAcC,EAAoB,CAChC,OAAO,OAAO,OAAOC,EAAY,EAAE,SAASD,CAAU,CACxD,CAEA,eAAeA,EAAoB,CACjC,OAAO,OAAO,OAAOE,EAAU,EAAE,SAASF,CAAU,CACtD,CAEA,OAAO,iBAAiBG,EAAuB,CAC7C,OAAOA,eACT,CAEU,iBAAiBH,EAAoB,CAC7C,OAAO,OAAO,OAAOI,EAAc,EAAE,SAASJ,CAAU,CAC1D,CAEO,YAAYK,EAAYC,EAAcC,EAAe,CA7N9D,IAAAzB,EAAAiB,GA8NSA,GAAAjB,EAAA,KAAK,aAAL,YAAAA,EAAiB,WAAjB,MAAAiB,EAA2B,QAChC,KAAK,WAAW,SAAS,MAAM,KAAOO,EACtC,KAAK,WAAW,SAAS,MAAM,MAAQC,EACvC,KAAK,WAAW,SAAS,MAAM,GAAKF,EACtC,CAEO,YAAYG,EAAsB,CACnC,KAAK,WAAW,QAAUA,IAC5B,KAAK,WAAW,MAAQA,EAE5B,CAEA,kBAAkBC,EAAiD,CA1OrE,IAAA3B,EAAAiB,EA2OI,OAAOA,GAAAjB,EAAA,KAAK,aAAL,YAAAA,EAAiB,aAAjB,YAAAiB,EAA6B,KAAMH,GAAMA,EAAE,KAAOa,EAC3D,CAEA,2BAA2BzB,EAAiD,CAC1E,OAAO,KAAK,WAAW,WAAW,KAAMY,GAAMA,EAAE,UAAYZ,CAAO,CACrE,CAEM,MAAsB,QAAAQ,EAAA,sBAlP9B,IAAAV,GAmPSA,EAAA,KAAK,aAAL,MAAAA,EAAiB,aACtB,KAAK,uBAAuB,EAC5B,KAAK,YAAY,EACjB,KAAK,cAAc,KAAK,UAAU,EAClC,MAAM4B,EAAY,SAAS,KAAK,UAAU,EAC5C,GAEQ,gBAAgBC,EAAmB,CACzC,KAAK,WAAW,IAAMA,CACxB,CAEQ,iBAAiBC,EAAiC,CACxD,KAAK,WAAW,aAAeA,CACjC,CAEQ,wBAA+B,CACrC,KAAK,WAAW,WAAW,QAAS1B,GAAkB,CACpD,IAAM2B,EAAmB3B,EAAc,OAAO,OAAQU,GAC7C,KAAK,cAAcA,EAAE,UAAU,CACvC,EAEKkB,EAAsCD,EAAiB,IAAKE,GAAM,CAxQ9E,IAAAjC,EAyQQ,OAAOA,EAAAiC,EAAE,cAAF,KAAAjC,EAAiB,CAC1B,CAAC,EAEDI,EAAc,YACZ,KAAK,yBAAyB4B,CAAoB,EAEpD,IAAME,EAA+BH,EAAiB,IAAKE,GAAM,CA/QvE,IAAAjC,EAgRQ,MAA4B,CAC1B,MAAOiC,EAAE,MACT,aAAajC,EAAAiC,EAAE,cAAF,KAAAjC,EAAiB,CAChC,CACF,CAAC,EAEDI,EAAc,aAAe,KAAK,qBAChC8B,CACF,CACF,CAAC,CACH,CAEQ,qBACNC,EACA,CACA,IAAMC,EAAa,KAAK,QAAQD,EAAsB,OAAO,EACvDE,EAAgC,CACpC,OAAQ,CAAC,CACX,EACA,QAAWC,KAASF,EAClBC,EAAO,OAAO,KAA0B,CACtC,MAAO,SAASC,CAAK,EACrB,YAAaF,EAAWE,CAAK,EAC1B,IAAKL,GAAM,CAvStB,IAAAjC,EAwSY,OAAOA,EAAAiC,EAAE,cAAF,KAAAjC,EAAiB,CAC1B,CAAC,EACA,OAAO,KAAK,eAAgB,CAAC,CAClC,CAAC,EAGH,OAAOqC,CACT,CAEQ,yBACNL,EAC2B,CAC3B,OAAIA,EAAqB,SAAW,EAC3B,CACL,IAAK,EACL,IAAK,EACL,IAAK,EACL,MAAO,CACT,EAGgC,CAChC,IAAK,KAAK,IAAI,GAAGA,CAAoB,EACrC,IAAK,KAAK,IAAI,GAAGA,CAAoB,EACrC,IAAK,KAAK,MACRA,EAAqB,OAAO,KAAK,eAAgB,CAAC,EAChDA,EAAqB,MACzB,EACA,MAAOA,EAAqB,OAAO,KAAK,eAAgB,CAAC,CAC3D,CACF,CAEQ,aAAoB,CAC1B,GAAI,KAAK,WAAW,WAAW,SAAW,EAAG,CAC3C,KAAK,gBAAgB,CACnB,UAAW,GACX,oBAAqB,GACrB,iBAAkB,GAClB,iBAAkB,GAClB,UAAW,GACX,YAAa,GACb,mBAAoB,GACpB,uBAAwB,EAC1B,CAAC,EACD,MACF,CAEA,IAAMO,EAAY,KAAK,WAAW,WAC/B,IAAKN,GACAA,EAAE,MAAM,SAAW,EACd,CACL,KAAM,OACN,MAAO,CACT,EAEK,CACL,KAAMA,EAAE,KACR,MAAOA,EAAE,MAAM,MACjB,CACD,EACA,OAAO,SAAUO,EAAKC,EAAK,CAC1B,OAAOA,EAAI,MAAQD,EAAI,MAAQC,EAAMD,CACvC,CAAC,EAEGE,EAAc,KAAK,WAAW,WACjC,IAAKT,GACAA,EAAE,OAAO,SAAW,EACf,CACL,KAAM,OACN,MAAO,CACT,EAEK,CACL,KAAMA,EAAE,KACR,MAAOA,EAAE,OAAO,OAAQnB,GACfA,EAAE,aAAe,MACzB,EAAE,MACL,CACD,EACA,OAAO,SAAU0B,EAAKC,EAAK,CAC1B,OAAOA,EAAI,MAAQD,EAAI,MAAQC,EAAMD,CACvC,CAAC,EAEGG,EAAqB,KAAK,WAAW,WACxC,IAAKV,GACAA,EAAE,OAAO,SAAW,EACf,CACL,KAAM,OACN,MAAO,CACT,EAEK,CACL,KAAMA,EAAE,KACR,MAAOA,EAAE,OAAO,OAAQnB,GACfA,EAAE,aAAe,QAAUA,EAAE,aAAe,MACpD,EAAE,MACL,CACD,EACA,OAAO,SAAU0B,EAAKC,EAAK,CAC1B,OAAOA,EAAI,MAAQD,EAAI,MAAQC,EAAMD,CACvC,CAAC,EAEGI,EAAyB,KAAK,WAAW,WAC5C,IAAKX,GACAA,EAAE,OAAO,SAAW,EACf,CACL,KAAM,OACN,MAAO,CACT,EAEK,CACL,KAAMA,EAAE,KACR,MAAOA,EAAE,OAAO,OAAQnB,GACfA,EAAE,aAAe,OACzB,EAAE,MACL,CACD,EACA,OAAO,SAAU0B,EAAKC,EAAK,CAC1B,OAAOA,EAAI,MAAQD,EAAI,MAAQC,EAAMD,CACvC,CAAC,EAEGK,EAAsB,KAAK,WAAW,WACzC,IAAKZ,GACAA,EAAE,aAAa,OAAO,SAAW,EAC5B,CACL,KAAM,OACN,MAAO,CACT,EAEK,CACL,KAAMA,EAAE,KACR,MAAOA,EAAE,aAAa,OAAO,OAAO,SAAUO,EAAKC,EAAK,CACtD,OAAOA,EAAI,YAAcD,EAAI,YAAcC,EAAMD,CACnD,CAAC,EAAE,WACL,CACD,EACA,OAAO,CAACzB,EAAGC,IAAOD,EAAE,MAAQC,EAAE,MAAQD,EAAIC,CAAE,EAEzC8B,EAAS,KAAK,WAAW,WAAW,IAAKb,GACzCA,EAAE,YAAY,QAAU,EACnB,CACL,KAAM,OACN,IAAK,EACL,IAAK,EACL,IAAK,EACL,MAAO,CACT,EAEK,CACL,KAAMA,EAAE,KACR,IAAKA,EAAE,YAAY,IACnB,IAAKA,EAAE,YAAY,IACnB,IAAKA,EAAE,YAAY,IACnB,MAAOA,EAAE,YAAY,KACvB,CACD,EAEKc,EAAYD,EAAO,OAAO,SAAUN,EAAKC,EAAK,CAClD,OAAOA,EAAI,MAAQD,EAAI,MAAQC,EAAMD,CACvC,CAAC,EACKQ,EAAmBF,EAAO,OAAO,SAAUN,EAAKC,EAAK,CACzD,OAAOA,EAAI,IAAMD,EAAI,IAAMC,EAAMD,CACnC,CAAC,EACKS,EAAmBH,EAAO,OAAO,SAAUN,EAAKC,EAAK,CACzD,OAAOA,EAAI,IAAMD,EAAI,IAAMC,EAAMD,CACnC,CAAC,EAED,KAAK,gBAAgB,CACnB,UAAW,GAAGO,EAAU,aAAaA,EAAU,QAC/C,oBAAqB,GAAGF,EAAoB,aAAaA,EAAoB,QAC7E,iBAAkB,GAAGG,EAAiB,aAAaA,EAAiB,MACpE,iBAAkB,GAAGC,EAAiB,aAAaA,EAAiB,MACpE,UAAW,GAAGV,EAAU,aAAaA,EAAU,QAC/C,YAAa,GAAGG,EAAY,aAAaA,EAAY,QACrD,mBAAoB,GAAGC,EAAmB,aAAaA,EAAmB,QAC1E,uBAAwB,GAAGC,EAAuB,aAAaA,EAAuB,OACxF,CAAC,CACH,CAEQ,cAAc7C,EAAkD,CA3d1E,IAAAC,EAAAiB,EAAAiC,EA4dI,GAAInD,EAAU,WAAW,SAAW,EAClC,OAEF,IAAM+C,EAAS/C,EAAU,WACtB,OAAQe,GAAMA,EAAE,OAAS,WAAW,EACpC,IAAKmB,IACG,CACL,OAAQA,EAAE,aAAa,MACzB,EACD,EACA,OAAO,CAAClB,EAAGC,IAAM,CAtexB,IAAAhB,EAAAiB,EAueQ,MAAO,CACL,QAAQA,GAAAjB,EAAAe,EAAE,SAAF,YAAAf,EAAU,OAAOgB,EAAE,UAAnB,KAAAC,EAA8B,CAAC,CACzC,CACF,CAAC,EAECkC,EAAc,EACZC,EAAkD,CAAC,GACrDN,GAAA,YAAAA,EAAQ,OAAO,QAAS,IAC1BK,GACEnD,EAAA8C,EAAO,OAAO,OAAO,CAACO,EAAMC,IAASD,EAAOC,EAAK,YAAa,CAAC,IAA/D,KAAAtD,EAAoE,EAEtE8C,EAAO,OAAO,OAAO,SAAUS,EAAKC,EAAO,CACzC,OAAKD,EAAIC,EAAM,KAAK,IAClBD,EAAIC,EAAM,KAAK,EAAI,CAAE,MAAOA,EAAM,MAAO,YAAa,CAAE,EACxDJ,EAAoB,KAAKG,EAAIC,EAAM,KAAK,CAAC,GAE3CD,EAAIC,EAAM,KAAK,EAAE,aAAeA,EAAM,YAC/BD,CACT,EAAG,CAAC,CAAC,GAGP,IAAIE,EAAwB,EACxBC,EAAuB,EACvBC,EAAwB,EAC5B,OAAIP,EAAoB,OAAS,IAC/BK,EAAwBN,EAAcC,EAAoB,OAC1DM,GACEzC,EAAAmC,GAAA,YAAAA,EAAqB,OAAO,SAAUQ,EAAeC,EAAc,CACjE,OAAOA,EAAa,YAAcD,EAAc,YAC5CC,EACAD,CACN,GAAG,cAJH,KAAA3C,EAIkB,EACpB0C,GACET,EAAAE,GAAA,YAAAA,EAAqB,OAAO,SAAUQ,EAAeC,EAAc,CACjE,OAAOA,EAAa,YAAcD,EAAc,YAC5CC,EACAD,CACN,GAAG,cAJH,KAAAV,EAIkB,GAGtB,KAAK,iBAAiB,CACpB,sBAAuB,KAAK,MAAMO,CAAqB,EACvD,qBAAsB,KAAK,MAAMC,CAAoB,EACrD,sBAAuB,KAAK,MAAMC,CAAqB,EACvD,YAAa,KAAK,MAAMR,CAAW,EACnC,oBAAqBC,CACvB,CAAC,EAEM,CACL,sBAAuB,KAAK,MAAMK,CAAqB,EACvD,qBAAsB,KAAK,MAAMC,CAAoB,EACrD,sBAAuB,KAAK,MAAMC,CAAqB,EACvD,YAAa,KAAK,MAAMR,CAAW,EACnC,oBAAqBC,CACvB,CACF,CAEQ,QAAQU,EAAIC,EAAK,CACvB,OAAOD,EAAG,OAAO,SAAUE,EAAIC,EAAG,CAChC,OAACD,EAAGC,EAAEF,CAAG,CAAC,EAAIC,EAAGC,EAAEF,CAAG,CAAC,GAAK,CAAC,GAAG,KAAKE,CAAC,EAC/BD,CACT,EAAG,CAAC,CAAC,CACP,CAEQ,eAAeE,EAAqBnD,EAAW,CACrD,OAAOmD,EAAcnD,CACvB,CACF,EC1iBA,IAAMoD,GAAN,KAAY,CACV,OAAO,IAAIC,EAAgC,CACzC,OAAO,KAAK,KAAK,OAAO,kBAAkBA,GAAgB,CAC5D,CACF,EAEOC,EAAQF,GCHf,IAAMG,GAAN,KAAwB,CACtB,OAAa,OAAOC,EAAsB,QAAAC,EAAA,sBAJ5C,IAAAC,EAAAC,EAAAC,EAAAC,EAKI,IAAMC,EAAaN,EAEnBM,EAAW,aAAcH,GAAAD,EAAAI,EAAW,UAAX,YAAAJ,EAAoB,SAApB,KAAAC,EAA8B,EACvD,QAAWI,KAAaD,EAAW,WAC7BC,EAAU,OAAS,aACrBD,EAAW,WAAW,IAAIC,CAAS,EAIvC,QAAWA,KAAaD,EAAW,WAAY,CAE7CC,EAAU,OAAS,CAAC,EACpB,QAAWC,KAASD,EAAU,OAC5BC,EAAM,aAAe,MAAM,KAAK,qBAAqBA,EAAM,UAAU,EACrEA,EAAM,WAAaA,EAAM,UACrB,YACAA,EAAM,aACN,eACA,SAEJA,EAAM,4BACJJ,EAAAI,EAAM,6BAAN,KAAAJ,EAAoCI,EAAM,YAE5CA,EAAM,eAAiB,KAAK,oBAAoBA,EAAM,UAAU,EAEhEA,EAAM,YAAcA,EAAM,WACtB,GAAGA,EAAM,kBACT,GAAGA,EAAM,cAERD,EAAU,OAAOC,EAAM,MAAQ,CAAC,IACnCD,EAAU,OAAOC,EAAM,MAAQ,CAAC,EAAI,CAClC,MAAOA,EAAM,KACf,GAEGD,EAAU,OAAOC,EAAM,MAAQ,CAAC,EAAE,UACrCD,EAAU,OAAOC,EAAM,MAAQ,CAAC,EAAE,QAAU,CAAC,GAEjCD,EAAU,OAAOC,EAAM,MAAQ,CAAC,EACxC,QAAQ,KAAKA,CAAK,EAI1B,QAAWC,KAAQF,EAAU,MACtBA,EAAU,OAAOE,EAAK,MAAQ,CAAC,IAClCF,EAAU,OAAOE,EAAK,MAAQ,CAAC,EAAI,CACjC,MAAOA,EAAK,KACd,GAEGF,EAAU,OAAOE,EAAK,MAAQ,CAAC,EAAE,QACpCF,EAAU,OAAOE,EAAK,MAAQ,CAAC,EAAE,MAAQ,CAAC,GAE9BF,EAAU,OAAOE,EAAK,MAAQ,CAAC,EACvC,MAAM,KAAK,CAAE,UAAWA,EAAK,SAAU,CAAC,EAIhD,IAAIC,EAAc,EAClB,QAAWC,KAAUJ,EAAU,OAAQ,CACjCI,EAAO,UAAYA,EAAO,QAAU,GACtCD,IAGGH,EAAU,OAAOI,EAAO,MAAQ,CAAC,IACpCJ,EAAU,OAAOI,EAAO,MAAQ,CAAC,EAAI,CACnC,MAAOA,EAAO,KAChB,GAEGJ,EAAU,OAAOI,EAAO,MAAQ,CAAC,EAAE,SACtCJ,EAAU,OAAOI,EAAO,MAAQ,CAAC,EAAE,OAAS,CAAC,GAE/C,IAAMC,EAAQL,EAAU,OAAOI,EAAO,MAAQ,CAAC,EAC3CA,EAAO,MACTC,EAAM,OAAO,KAAK,CAChB,QAASD,EAAO,QAChB,KAAM,GAAGA,EAAO,OAAS,IAAM,OAAOA,EAAO,MAC/C,CAAC,CAEL,CACAJ,EAAU,OAASG,EAGnB,QAAWG,KAASN,EAAU,aAAa,OAAQ,CACjD,IAAMO,EAAYP,EAAU,OAAO,KAChCQ,IAAMA,GAAA,YAAAA,EAAG,SAAUF,EAAM,KAC5B,EACKC,EAGHA,EAAU,YAAcD,EAAM,YAF9BN,EAAU,OAAOM,EAAM,MAAQ,CAAC,GAAIR,EAAAQ,EAAM,QAAN,KAAAR,EAAe,CAIvD,CACF,CAEA,IAAMW,EAAgB,sDAGtB,MAAO,CAAE,KAFa,MAAM,eAAeA,EAAeV,CAAU,EAEtC,KAAMA,CAAW,CACjD,GAEA,OAAqB,qBAAqBW,EAAoB,QAAAhB,EAAA,sBAC5D,IAAMiB,EAAO,IAAIC,EACjB,GAAID,EAAK,eAAeD,CAAU,EAAG,MAAO,OAC5C,GAAIC,EAAK,cAAcD,CAAU,EAAG,MAAO,KAC7C,GAEA,OAAe,oBAAoBA,EAAoB,CACrD,IAAIG,EAAW,WACXC,EAAkBC,EAAM,IAAI,mBAAmB,EACnD,OAAQL,EAAY,CAClB,IAAK,OACHG,EAAW,QACXC,EAAkBC,EAAM,IAAI,kBAAkB,EAC9C,MACF,IAAK,OACHF,EAAW,SACXC,EAAkBC,EAAM,IAAI,kBAAkB,EAC9C,MACF,IAAK,OACHF,EAAW,SACXC,EAAkBC,EAAM,IAAI,kBAAkB,EAC9C,MACF,IAAK,OACHF,EAAW,cACXC,EAAkBC,EAAM,IAAI,kBAAkB,EAC9C,MACF,IAAK,OACHF,EAAW,cACXC,EAAkBC,EAAM,IAAI,kBAAkB,EAC9C,MACF,IAAK,OACHF,EAAW,aACXC,EAAkBC,EAAM,IAAI,kBAAkB,EAC9C,KACJ,CAEA,MAAO,aAAaD,oBAAkCD,SACxD,CACF,EAEOG,GAAQxB,GC1If,IAAMyB,GAAN,KAAkB,CAChB,OAAO,YAAa,CAClB,OAAOC,EAAW,wBAAwBC,EAAY,CACxD,CAEA,OAAa,QAAQC,EAAkD,QAAAC,EAAA,sBACrE,IAAMC,EAAgB,MAAMJ,EAAW,IAAIC,GAAcC,CAAO,EAChE,OAAO,UAAUE,CAAa,CAChC,GAEA,OAAa,SAASC,EAAsB,QAAAF,EAAA,sBAhB9C,IAAAG,EAiBI,IAAMC,EAAmB,MAAMR,GAAY,QAAQ,EACnD,GAAIQ,EAAkB,CACpB,IAAMC,EAAO,WAAWD,EAAkBF,CAAS,EACnD,KAAIC,EAAA,OAAO,KAAKE,CAAI,IAAhB,YAAAF,EAAmB,QAAS,EAAG,MACrC,CACA,GAAI,EAACD,GAAA,MAAAA,EAAW,aAAa,CAC3BI,EAAO,MAAM,8BAA+B,sBAAsB,EAClE,MACF,CACA,MAAMT,EAAW,KAAKC,GAAcI,CAAS,EAE7C,IAAMK,EAAS,MAAMC,GAAkB,OAAON,CAAS,EAEvD,MAAMO,EAAiB,kBACrBF,EAAO,KACP,cACAL,EAAU,WACZ,CACF,GACF,EAEOQ,EAAQd,GCnCf,IAAqBe,GAArB,cAAyCC,CAAK,CAC5C,UAAUC,EAA6B,CAJzC,IAAAC,EAKI,GAAI,GAACA,EAAAD,GAAA,YAAAA,EAAU,QAAV,MAAAC,EAAiB,IAAI,CACxBC,EAAO,MACL,2BACA,wBACAF,CACF,EACA,MACF,CAEA,IAAMG,EACJ,KAAK,kBAAkBH,EAAS,MAAM,EAAE,EAE1C,GAAI,CAACG,EAAe,CAClBD,EAAO,IACL,mCAAmCF,EAAS,MAAM,KAClD,wBACAA,CACF,EACA,MACF,CAEA,IAAMI,EAAoC,CACxC,GAAIJ,EAAS,GACb,QAASA,EAAS,MAAM,GACxB,KAAMA,EAAS,KACf,UAAWA,EAAS,UACpB,aAAcA,EAAS,aACvB,WAAYA,EAAS,WACrB,MAAO,KAAK,aACZ,SAAUA,EAAS,SACnB,YAAa,EACb,YAAa,EACb,2BAA4B,EAC5B,WAAY,EACd,EAEI,KAAK,cAAcI,EAAkB,UAAU,GAC7CJ,EAAS,cACXI,EAAkB,YAAcJ,EAAS,aAGzC,KAAK,iBAAiBI,EAAkB,UAAU,GAChDJ,EAAS,cACXI,EAAkB,2BAChBJ,EAAS,2BACXI,EAAkB,YAAcJ,EAAS,YACzCI,EAAkB,WAAaJ,EAAS,YAG5CG,EAAc,OAAO,KAAKC,CAAiB,CAC7C,CACF,ECpDA,IAAqBC,GAArB,cAAuCC,CAAK,CAC1C,UAAUC,EAA6B,CALzC,IAAAC,EAMI,GAAI,GAACA,EAAAD,GAAA,YAAAA,EAAU,QAAV,MAAAC,EAAiB,IAAI,CACxBC,EAAO,MAAM,2BAA4B,sBAAuBF,CAAQ,EACxE,MACF,CACA,IAAMG,EACJ,KAAK,kBAAkBH,EAAS,MAAM,EAAE,EAC1C,GAAI,CAACG,EAAe,OAQpB,GAJEA,EAAc,OAAO,KAClBC,GAAMA,EAAE,KAAOJ,EAAS,IAAMI,EAAE,QAAU,KAAK,YAClD,IAAM,QAEeJ,EAAS,kBAAoC,CAClE,IAAMK,EAAoBF,EAAc,OACrC,OAAQC,GAAMA,EAAE,KAAOJ,EAAS,EAAE,EAClC,QAAQ,EAAE,CAAC,EAEVA,EAAS,iBACXK,EAAkB,YAAcL,EAAS,YACzCK,EAAkB,2BAChBL,EAAS,2BACXK,EAAkB,WAAaL,EAAS,YAC/BA,EAAS,kBAClBK,EAAkB,YAAcL,EAAS,YACzCK,EAAkB,SAAWL,EAAS,SACtCK,EAAkB,UAAYL,EAAS,UACvCK,EAAkB,aAAeL,EAAS,aAE9C,SACMA,EAAS,kBAAoC,CAC/C,IAAMK,EAAoC,CACxC,GAAIL,EAAS,GACb,QAASA,EAAS,MAAM,GACxB,KAAMA,EAAS,KACf,MAAO,KAAK,aACZ,YAAa,EACb,YAAa,EACb,WAAYA,EAAS,UACvB,EACAG,EAAc,OAAO,KAAKE,CAAiB,CAC7C,CAEJ,CACF,ECjDA,IAAMC,GAAN,KAAuB,CACrB,OAAa,OAAOC,EAA8B,QAAAC,EAAA,sBAChD,IAAMC,EAA6B,CACjC,KAAM,MAAM,KAAK,mBAAmBF,EAAe,MAAM,EACzD,MAAO,MAAM,KAAK,mBAAmBA,EAAe,OAAO,EAC3D,MAAO,MAAM,KAAK,mBAAmBA,EAAe,OAAO,EAC3D,MAAO,MAAM,KAAK,mBAAmBA,EAAe,OAAO,EAC3D,gBAAiB,MAAM,KAAK,gBAAgBA,EAAc,KAAK,EAC/D,cAAe,MAAM,KAAK,gBAAgBA,EAAc,IAAI,EAC5D,aAAc,MAAM,KAAK,gBAAgBA,EAAc,KAAK,EAC5D,aAAc,MAAM,KAAK,iBAAiBA,EAAc,KAAK,EAC7D,WAAY,MAAM,KAAK,sBAAsBA,EAAc,UAAU,EACrE,mBAAoB,MAAM,KAAK,wBAAwBA,CAAa,EACpE,aAAc,CAAC,GAAGA,EAAc,YAAY,EAAE,QAAQ,CACxD,EAEMG,EAAgB,qDAGtB,MAAO,CAAE,KAFa,MAAM,eAAeA,EAAeD,CAAU,EAEtC,KAAMA,CAAW,CACjD,GAEA,OAAqB,wBAAwBF,EAA8B,QAAAC,EAAA,sBACzE,IAAMG,EAAkC,CAAC,EACnCC,EAAWL,EAAc,OAE/B,OAAIK,EAAS,SAAW,EAAG,QAGV,CAAC,EACf,OAEC,GAAGA,GAAA,YAAAA,EAAU,IAAKC,GAChBA,EAAE,KAAK,IAAKC,GACHA,EAAG,SACX,EAEL,EACC,OACC,CAACC,EAAQC,IAAUD,EAAO,SAASC,CAAI,EAAID,EAAS,CAAC,GAAGA,EAAQC,CAAI,EACpE,CAAC,CACH,EAGO,QAASC,GAAc,CAC9B,IAAMC,EAAQ,CACZ,KAAMD,EACN,OAAQ,CAAC,CACX,EACAL,EAAS,QAASO,GAAa,CAE7B,IAAMC,EAAeD,EAAS,KAAK,OAChCE,GAAMA,EAAE,YAAcJ,CACzB,EACA,IAAIG,GAAA,YAAAA,EAAc,UAAW,EAAG,OAEhC,IAAME,EAA6B,CACjC,KAAMH,EAAS,YACf,QAAS,CAAC,CACZ,EACAC,EAAa,QAASG,GAAc,CAElCD,EAAM,QAAQ,KAAK,CACjB,UAAWC,EAAU,UACrB,OAAQA,EAAU,WAClB,KAAMA,EAAU,IAClB,CAAC,CACH,CAAC,EACDL,EAAM,OAAO,KAAKI,CAAK,CACzB,CAAC,EAEDX,EAAK,KAAKO,CAAK,CACjB,CAAC,EAEMP,EACT,GAEA,OAAqB,gBAAgBa,EAAmB,QAAAhB,EAAA,sBACtD,IAAMG,EAAmC,CAAC,EAE1C,OAAAa,EAAkB,QAAQ,EAAE,QAASC,GAAW,CAC9C,IAAMH,EAA6B,CACjC,KAAMG,EAAO,YACb,QAAS,CAAC,CACZ,EAEAA,EAAO,KAAK,QAASC,GAAyB,CAC5CJ,EAAM,QAAQ,KAAK,CACjB,UAAWI,EAAU,UACrB,OAAQA,EAAU,SAAWA,EAAU,SAAWA,EAAU,UAC5D,KAAMA,EAAU,KAChB,MAAOA,EAAU,KACnB,CAAC,CACH,CAAC,EACDf,EAAK,KAAKW,CAAK,CACjB,CAAC,EAEMX,CACT,GAEA,OAAqB,sBAAsBa,EAAmB,QAAAhB,EAAA,sBAC5D,IAAMG,EAAmC,CAAC,EAC1C,GACE,CAAC,KAAK,SAAS,IAAI,GAAGgB,IAAa,GAAGC,GAAiC,EAEvE,OAAOjB,EAGT,GAAKa,EAIL,OAAAA,EAAkB,QAAQ,EAAE,QAASK,GAAgC,CACnE,IAAMP,EAA6B,CACjC,KAAMO,EAAW,YACjB,QAAS,CAAC,CACZ,EAEAP,EAAM,QAAQ,KAAK,CACjB,UAAWO,EAAW,UACtB,OAAQ,WAAWA,EAAW,sBAAsBA,EAAW,YAC/D,KAAMA,EAAW,WACnB,CAAC,EAEDlB,EAAK,KAAKW,CAAK,CACjB,CAAC,EAEMX,CACT,GAEA,OAAqB,iBAAiBa,EAAmB,QAAAhB,EAAA,sBACvD,IAAMG,EAAmC,CAAC,EAE1C,OAAAa,EAAkB,QAAQ,EAAE,QAASC,GAAW,CAC9C,IAAMH,EAA6B,CACjC,KAAMG,EAAO,YACb,QAAS,CAAC,CACZ,EAEAA,EAAO,KAAK,QAASK,GAAoB,CACvCR,EAAM,QAAQ,KAAK,CACjB,UAAWQ,EAAK,UAChB,OAAQA,EAAK,UACb,KAAMA,EAAK,IACb,CAAC,CACH,CAAC,EACDnB,EAAK,KAAKW,CAAK,CACjB,CAAC,EAEMX,CACT,GAEA,OAAqB,gBAAgBa,EAAmB,QAAAhB,EAAA,sBACtD,IAAMG,EAAmC,CAAC,EAE1C,OAAAa,EAAkB,QAAQ,EAAE,QAASC,GAAW,CAC9C,IAAMH,EAA6B,CACjC,KAAMG,EAAO,YACb,QAAS,CAAC,CACZ,EAEAA,EAAO,KAAK,QAASM,GAAyB,CAC5CT,EAAM,QAAQ,KAAK,CACjB,UAAWS,EAAU,UACrB,OAAQA,EAAU,OAClB,KAAMA,EAAU,IAClB,CAAC,CACH,CAAC,EACDpB,EAAK,KAAKW,CAAK,CACjB,CAAC,EAEMX,CACT,GAEA,OAAqB,mBACnBJ,EACAyB,EACA,QAAAxB,EAAA,sBACA,IAAMG,EAAgC,CAAC,EAEnCC,EAEJ,OAAQoB,EAAM,CACZ,IAAK,QACHpB,EAAWL,EAAc,MACzB,MACF,IAAK,OACHK,EAAWL,EAAc,KACzB,MACF,IAAK,QACHK,EAAWL,EAAc,MACzB,MACF,IAAK,QACHK,EAAWL,EAAc,MACzB,KACJ,CAEA,IAAM0B,EAAmB,CAAC,EACvB,OAEC,GAAGrB,GAAA,YAAAA,EAAU,IAAKC,GAAG,CA1M7B,IAAAqB,EA2MU,OAAAA,EAAArB,EAAE,OAAF,YAAAqB,EAAQ,IAAKpB,GACJA,GAAA,YAAAA,EAAI,YAGjB,EACC,OAAO,SAAUqB,EAAMC,EAAK,CAC3B,OAAAD,EAAKC,CAAG,GAAKD,EAAKC,CAAG,GAAK,GAAK,EACxBD,CACT,EAAG,CAAC,CAAC,EAEDE,EAAkC,CAAC,EACzC,cAAO,QAAQJ,CAAgB,EAAE,QAAQ,CAAC,CAACK,EAAKC,CAAK,IAAM,CACzDF,EAAO,KAAK,CACV,KAAMC,EACN,MAAOC,CACT,CAAC,CACH,CAAC,EAEDF,EAAO,QAASf,GAAU,CACxBX,EAAK,KAAK,CAAE,KAAMW,EAAM,KAAM,MAAOA,EAAM,KAAM,CAAC,CACpD,CAAC,EAEMX,CACT,GACF,EAEO6B,GAAQlC,GCjOf,IAAqBmC,GAArB,KAA0B,CAOxB,OAAa,KAAKC,EAAgC,QAAAC,EAAA,sBAChD,IAAMC,EAAe,YAAY,qBAAqB,IAAI,EAAE,IACzDC,GAAYA,EAAE,EACjB,EAEMC,EAAW,CACf,QAAS,QAAQJ,UACjB,QAASE,CACX,EAEA,YAAY,OAAOE,CAAQ,CAC7B,GACF,ECrBA,IAAMC,EAAN,KAAiB,CAqBf,WAAW,UAAkB,CAC3B,OAAO,KAAK,MAAM,KAAMC,GAAMA,EAAE,IAAI,CACtC,CAEA,WAAW,UAA0B,CACnC,IAAIC,EACFF,EAAW,SAAS,QAAQ,KAAK,WAAY,KAAK,SAAS,EAE7D,OAAKE,IACHA,EAAmBF,EAAW,aAC9BA,EAAW,SAASE,CAAgB,GAE/BA,CACT,CAEA,OAAO,SAASC,EAA8B,CAC5CH,EAAW,SAAS,QAAQ,KAAK,WAAY,KAAK,UAAWG,CAAa,CAC5E,CAEA,OAAO,aAAc,CACnBH,EAAW,SAAS,QAClB,KAAK,WACL,KAAK,UACLA,EAAW,YACb,EACAI,EAAa,KAAKJ,EAAW,YAAY,CAC3C,CACF,EAhDMK,GAANL,EAAMK,GACY,WAAa,kBADzBA,GAEY,UAAY,iBAFxBA,GAGY,aAA8B,CAC5C,MAAO,CAAC,EACR,KAAM,CAAC,EACP,MAAO,CAAC,EACR,MAAO,CAAC,EACR,OAAQ,CAAC,EACT,WAAY,CAAC,EACb,cAAe,CAAC,EAChB,aAAc,CAAC,EACf,kBAAmB,CACjB,sBAAuB,EACvB,qBAAsB,EACtB,sBAAuB,EACvB,YAAa,EACb,oBAAqB,CAAC,CACxB,CACF,EA+BF,IAAOC,EAAQD,GCvCf,IAAqBE,EAArB,KAAkC,CAChC,OAAa,QAAQC,EAAmBC,EAAmB,QAAAC,EAAA,sBACzD,IAAMC,EAAgB,MAAM,KAAK,IAAI,EAC/BC,EAAOC,EAAM,IAEbC,EAAkB,CACtB,UAAWN,EACX,UAAWC,EACX,KAAMG,EAAK,eACb,EAEMG,EAAYJ,EAAc,MAAM,KAAMK,GAAMA,EAAE,KAAOJ,EAAK,EAAE,EAC9DG,EACFA,EAAU,KAAK,KAAKD,CAAI,EAExBH,EAAc,MAAM,KAAK,CACvB,GAAIC,EAAK,GACT,YAAaA,EAAK,YAClB,KAAM,CAACE,CAAI,CACb,CAAC,EAGH,MAAM,KAAK,KAAKH,CAAa,CAC/B,GAEA,OAAa,QACXH,EACAS,EACAC,EACAC,EACA,QAAAT,EAAA,sBACA,IAAMC,EAAgB,MAAM,KAAK,IAAI,EAC/BC,EAAOC,EAAM,IAEbO,EAAkB,CACtB,UAAWZ,EACX,SAAUS,EACV,UAAWC,EACX,MAAOC,EACP,KAAMP,EAAK,eACb,EAEMG,EAAYJ,EAAc,MAAM,KAAMK,GAAMA,EAAE,KAAOJ,EAAK,EAAE,EAC9DG,EACFA,EAAU,KAAK,KAAKK,CAAI,EAExBT,EAAc,MAAM,KAAK,CACvB,GAAIC,EAAK,GACT,YAAaA,EAAK,YAClB,KAAM,CAACQ,CAAI,CACb,CAAC,EAGH,MAAM,KAAK,KAAKT,CAAa,CAC/B,GAEA,OAAa,QAAQU,EAAgBb,EAAmBc,EAAgB,QAAAZ,EAAA,sBACtE,IAAMC,EAAgB,MAAM,KAAK,IAAI,EAC/BC,EAAOC,EAAM,IAEbU,EAAkB,CACtB,UAAWf,EACX,OAAQc,EACR,KAAMV,EAAK,eACb,EAEA,GAAIS,aAA0B,CAC5B,IAAMN,EAAYJ,EAAc,KAAK,KAAMK,GAAMA,EAAE,KAAOJ,EAAK,EAAE,EAC7DG,EACFA,EAAU,KAAK,KAAKQ,CAAI,EAExBZ,EAAc,KAAK,KAAK,CACtB,GAAIC,EAAK,GACT,YAAaA,EAAK,YAClB,KAAM,CAACW,CAAI,CACb,CAAC,CAEL,SAAWF,eAA2B,CACpC,IAAMN,EAAYJ,EAAc,MAAM,KAAMK,GAAMA,EAAE,KAAOJ,EAAK,EAAE,EAC9DG,EACFA,EAAU,KAAK,KAAKQ,CAAI,EAExBZ,EAAc,MAAM,KAAK,CACvB,GAAIC,EAAK,GACT,YAAaA,EAAK,YAClB,KAAM,CAACW,CAAI,CACb,CAAC,CAEL,CAEA,MAAM,KAAK,KAAKZ,CAAa,CAC/B,GAEA,OAAa,cACXa,EACAhB,EACAiB,EACA,QAAAf,EAAA,sBACA,GACE,CAAC,KAAK,SAAS,IAAI,GAAGgB,IAAa,GAAGC,GAAiC,EAEvE,OAGF,IAAMhB,EAAgB,MAAM,KAAK,IAAI,EAC/BC,EAAOC,EAAM,IAYnB,GAVKF,EAAc,gBACjBA,EAAc,cAAgB,CAAC,GAE5BA,EAAc,aACjBA,EAAc,WAAa,CAAC,GAM1B,CAHmBA,EAAc,cAAc,KAChDK,GAAMA,EAAE,UAAYS,CACvB,EAEEd,EAAc,cAAc,KAAoB,CAC9C,QAAAc,EACA,QAAS,CAACD,CAAM,CAClB,CAAC,MACI,CACL,IAAMI,EAAWjB,EAAc,cAAc,UAC1CkB,GAAOA,EAAG,UAAYJ,CACzB,EACMK,EAAiBnB,EAAc,cAAciB,CAAQ,EAAE,QACzDE,EAAe,QAAQN,CAAM,EAAI,IACnCM,EAAe,KAAKN,CAAM,EAExB,KAAK,SAAS,IACZ,GAAGE,IACH,GAAGK,IACL,GAEA,KAAK,2BAA2BvB,EAAWsB,CAAc,IAGvDA,EAAe,OAAS,GAE1BnB,EAAc,WAAW,KAAsB,CAC7C,QAASc,EACT,UAAWjB,EACX,YAAaI,EAAK,YAClB,KAAMkB,EAAe,CAAC,EACtB,MAAOA,EAAe,MACxB,CAAC,EAEHnB,EAAc,cAAciB,CAAQ,EAAE,QAAU,CAACJ,CAAM,EAE3D,CAEA,MAAM,KAAK,KAAKb,CAAa,CAC/B,GAEA,OAAa,2BACXH,EACAsB,EACe,QAAApB,EAAA,sBACf,MAAMsB,GAAK,KACT,OAAOC,EAAM,IACX,sBACF,oBAAoBzB,MAAcyB,EAAM,IAAI,mBAAmB,OAC7DH,EAAe,CAAC,eACJA,EAAe,mBAAmBG,EAAM,IACpD,yBACF,QACF,CACF,GAEA,OAAa,eAAeC,EAA8B,QAAAxB,EAAA,sBAvL5D,IAAAyB,EAAAC,EAAAC,EAwLI,IAAM1B,EAAgB,MAAM,KAAK,IAAI,EAChCA,EAAc,SACjBA,EAAc,OAAS,CAAC,GAE1B,IAAMC,EAAOC,EAAM,IACfL,EAAY,GAEZ0B,EAAY,UACd1B,GAAY6B,GAAAD,GAAAD,EAAA,KAAK,SAAL,YAAAA,EAAa,IAAID,EAAY,WAA7B,YAAAE,EAAuC,OAAvC,KAAAC,EAA+C,IAG7D,IAAMC,EAAmC,CACvC,UAAWJ,EAAY,UACvB,UAAW1B,EACX,WAAY0B,EAAY,WACxB,KAAMtB,EAAK,eACb,EAEMG,EAAYJ,EAAc,OAAO,KAAMK,GAAMA,EAAE,KAAOJ,EAAK,EAAE,EAC/DG,EACFA,EAAU,KAAK,KAAKuB,CAAe,EAEnC3B,EAAc,OAAO,KAAK,CACxB,GAAIC,EAAK,GACT,YAAaA,EAAK,YAClB,KAAM,CAAC0B,CAAe,CACxB,CAAC,EAGH,MAAM,KAAK,KAAK3B,CAAa,CAC/B,GAEA,OAAa,sBACX4B,EACAC,EACA,QAAA9B,EAAA,sBACA,IAAM+B,EAA0DC,GAAAC,GAAA,GAC3DJ,GAD2D,CAE9D,KAAM1B,EAAM,IAAI,gBAChB,YAAA2B,CACF,GACM7B,EAAgB,MAAM,KAAK,IAAI,EAChCA,EAAc,eACjBA,EAAc,aAAe,CAAC,GAGhCA,EAAc,aAAa,KAAK8B,CAA0B,EAE1D,MAAM,KAAK,KAAK9B,CAAa,CAC/B,GAEA,OAAa,KAA8B,QAAAD,EAAA,sBACzC,OAAOkC,EAAW,QACpB,GAEA,OAAa,KAAKjC,EAA8B,QAAAD,EAAA,sBAC9CkC,EAAW,SAASjC,CAAa,EACjC,IAAMkC,EAAS,MAAMC,GAAiB,OAAOnC,CAAa,EAC1DoC,EAAiB,kBAAkBF,EAAO,KAAM,gBAAiB,MAAM,CACzE,GACF,EChPA,IAAqBG,GAArB,cAAsCC,CAAK,CACzC,UAAUC,EAA6B,CALzC,IAAAC,EAMI,GAAI,GAACA,EAAAD,GAAA,YAAAA,EAAU,QAAV,MAAAC,EAAiB,IAAI,CACxBC,EAAO,MAAM,2BAA4B,sBAAuBF,CAAQ,EACxE,MACF,CACA,IAAMG,EACJ,KAAK,kBAAkBH,EAAS,MAAM,EAAE,EAC1C,GAAI,CAACG,EAAe,OAQpB,GAJEA,EAAc,OAAO,KAClBC,GAAMA,EAAE,KAAOJ,EAAS,IAAMI,EAAE,QAAU,KAAK,YAClD,IAAM,QAEeJ,EAAS,gBAAkC,CAChE,IAAMK,EAAoBF,EAAc,OACrC,OAAQC,GAAMA,EAAE,KAAOJ,EAAS,EAAE,EAClC,QAAQ,EAAE,CAAC,EAEdK,EAAkB,YAAcL,EAAS,YACzCK,EAAkB,2BAChBL,EAAS,2BACXK,EAAkB,WAAaL,EAAS,UAC1C,SACMA,EAAS,gBAAkC,CAC7C,IAAMK,EAAoC,CACxC,GAAIL,EAAS,GACb,QAASA,EAAS,MAAM,GACxB,KAAMA,EAAS,KACf,MAAO,KAAK,aACZ,YAAa,EACb,YAAa,EACb,WAAYA,EAAS,UACvB,EACAK,EAAkB,YAAcL,EAAS,YACzCK,EAAkB,SAAWL,EAAS,SACtCK,EAAkB,UAAYL,EAAS,UACvCK,EAAkB,aAAeL,EAAS,aAC1CG,EAAc,OAAO,KAAKE,CAAiB,CAC7C,CAEJ,CACF,EC7CA,IAAqBC,GAArB,cAA8CC,CAAK,CACjD,UAAUC,EAA6B,CAJzC,IAAAC,EAAAC,EAKI,GAAI,GAACD,EAAAD,GAAA,YAAAA,EAAU,QAAV,MAAAC,EAAiB,IAAI,CACxBE,EAAO,MAAM,2BAA4B,sBAAuBH,CAAQ,EACxE,MACF,CAEA,IAAMI,EACJ,KAAK,kBAAkBJ,EAAS,MAAM,EAAE,EAE1C,GAAI,CAACI,EAAe,CAClBD,EAAO,IACL,mCAAmCH,EAAS,MAAM,KAClD,sBACAA,CACF,EACA,MACF,CACA,IAAMK,EACJD,EAAc,OAAOA,EAAc,OAAO,OAAS,CAAC,EAWtD,GAREC,IAAuB,QACvBA,EAAmB,cAAgB,QACnCA,EAAmB,cAAgB,GACnCL,EAAS,YAAc,GACvBK,EAAmB,UAAYL,EAAS,MAAM,IAC9CK,EAAmB,QAAU,KAAK,gBAClCH,EAAAG,EAAmB,OAAnB,YAAAH,EAAyB,MAAOF,EAAS,KAAK,GAE3B,CACnB,IAAMM,EACJF,EAAc,OAAOA,EAAc,OAAO,OAAS,CAAC,EAEtDE,EAAkB,YAAcN,EAAS,WAC3C,KAAO,CACL,IAAMM,EAAoC,CACxC,GAAIN,EAAS,GACb,QAASA,EAAS,MAAM,GACxB,KAAMA,EAAS,KACf,UAAWA,EAAS,UACpB,aAAcA,EAAS,aACvB,WAAYA,EAAS,WACrB,MAAO,KAAK,aACZ,SAAUA,EAAS,SACnB,YAAa,EACb,YAAa,EACb,2BAA4B,EAC5B,WAAY,EACd,EAEI,KAAK,cAAcM,EAAkB,UAAU,GAC7CN,EAAS,cACXM,EAAkB,YAAcN,EAAS,aAGzC,KAAK,iBAAiBM,EAAkB,UAAU,GAChDN,EAAS,cACXM,EAAkB,2BAChBN,EAAS,2BACXM,EAAkB,YAAcN,EAAS,YACzCM,EAAkB,WAAaN,EAAS,YAG5CI,EAAc,OAAO,KAAKE,CAAiB,CAC7C,CACF,CACF,EC1DO,SAASC,GAAcC,EAAoC,CAChEC,EAAa,eAAeD,CAAW,CACzC,CAEA,SAAsBE,EACpBC,EACAC,EACAC,EACe,QAAAC,EAAA,sBACVH,GAELF,EAAa,cAAcE,EAAQC,EAAWC,CAAO,CACvD,GAEA,SAAsBE,GACpBJ,EACAK,EACAC,EACe,QAAAH,EAAA,sBACVH,IAEDA,IAAW,GACbF,EAAa,iBAAyBO,EAAOC,CAAM,EAGjDN,IAAW,IACbF,EAAa,mBAA0BO,EAAOC,CAAM,EAExD,GAEA,SAAsBC,GAAeC,EAA+B,QAAAL,EAAA,sBA1CpE,IAAAM,EA2CE,GAAI,CAACD,EAAQ,CACXE,EAAO,IAAI,YAAa,0BAA2BF,CAAM,EACzD,MACF,CACA,GAAI,CAACG,EAAY,WAAW,EAAG,OAC/B,IAAMC,EAAO,IAAIC,EACjBD,EAAK,UAAY,MAAMD,EAAY,QAAQ,EAE3Cb,EAAa,sBACXc,EAAK,UAAU,cACfH,EAAAG,EAAK,UAAU,cAAf,KAAAH,EAA8B,EAChC,CACF,GAEA,SAAsBK,GAAeC,EAAqC,QAAAZ,EAAA,sBACxE,GAAI,CAACY,EAAc,CACjBL,EAAO,IAAI,eAAgB,0BAA2BK,CAAY,EAClE,MACF,CACA,GAAI,CAACJ,EAAY,WAAW,EAAG,OAC/B,IAAMC,EAAO,IAAIC,EACjBD,EAAK,UAAY,MAAMD,EAAY,QAAQ,EAE3CC,EAAK,YAAYG,CAAY,EAC7BH,EAAK,UAAU,EAEf,MAAMA,EAAK,KAAK,EAChBF,EAAO,MAAM,kBAAkBK,IAAgB,yBAAyB,CAC1E,GAEA,SAAsBC,GACpBC,EACe,QAAAd,EAAA,sBA3EjB,IAAAM,EAAAS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EA4EE,GAAI,CAACT,EAAW,UAAW,CACzBP,EAAO,IACL,4CACA,iCACAO,CACF,EACA,MACF,CACA,GAAI,CAACN,EAAY,WAAW,EAAG,OAC/B,IAAMC,EAAO,IAAIC,EACjBD,EAAK,UAAY,MAAMD,EAAY,QAAQ,EAE3CC,EAAK,aACHM,GAAAT,EAAAQ,EAAW,OAAO,QAAlB,YAAAR,EAAyB,KAAzB,KAAAS,EAA+B,IAC/BE,GAAAD,EAAAF,EAAW,OAAO,QAAlB,YAAAE,EAAyB,OAAzB,KAAAC,EAAiC,IACjCE,GAAAD,EAAAJ,EAAW,OAAO,QAAlB,YAAAI,EAAyB,QAAzB,KAAAC,EAAkC,EACpC,EAEA,IAAIK,EAAa,KACbH,GAAAD,EAAAX,EAAK,YAAL,YAAAW,EAAgB,UAAhB,YAAAC,EAAyB,UAAW,IACtCG,EAAa,IAGf,IAAMC,EAAiBX,EAAW,OAAO,WACzC,QAAWY,KAAaD,EAAgB,CACtC,IAAM1B,GAAU2B,EAAU,QACpBC,GAAUD,EAAU,QACpBE,EAAaF,EAAU,WACvBG,GAAQP,EAAA,KAAK,SAAL,YAAAA,EAAa,IAAIvB,IAC3B8B,IACEL,KAAcD,EAAAG,EAAU,QAAV,YAAAH,EAAiB,QAAS,MAC1Cd,EAAK,SAAkB,CACrB,QAASiB,EAAU,QACnB,KAAMA,EAAU,KAChB,IAAKA,EAAU,MAAM,IACrB,GAAIA,EAAU,MAAM,OAAO,WAAW,GAAG,MACzC,GAAIA,EAAU,MAAM,OAAO,WAAW,GAAG,KAC3C,CAAC,EAED,MAAMjB,EAAK,aAAaoB,EAAOF,GAASC,CAAU,EAGxD,CACA,MAAMnB,EAAK,KAAK,EAChBF,EAAO,MAAM,mBAAoB,gCAAgC,CACnE,GAEA,SAAsBuB,GAAezB,EAA+B,QAAAL,EAAA,sBAClE,IAAM+B,EAAc1B,EAAO,GAC3B,GAAI,CAAC0B,EAAa,CAChBxB,EAAO,MAAM,sBAAuB,0BAA2BF,CAAM,EACrE,MACF,CACA,IAAMI,EAAO,IAAIC,EAAKqB,CAAW,EAEjC,MAAMC,EAAiB,uBAAuBD,CAAW,EACzD,MAAMtB,EAAK,KAAK,EAChBF,EAAO,MAAM,iBAAkB,yBAAyB,CAC1D,GAEA,SAAsB0B,GAAYC,EAA6C,QAAAlC,EAAA,sBAE3EkC,IACCA,EAAgB,YAAcA,EAAgB,WAE/CvC,EAAa,QACXuC,EAAgB,+BAChBA,EAAgB,KAChBA,EAAgB,MAClB,CAEJ,GAEA,SAAsBC,EACpBC,EACAC,EACe,QAAArC,EAAA,sBAxJjB,IAAAM,EA0JE,GADI,CAACE,EAAY,WAAW,GACxB,CAAC4B,EAAU,OACf,IAAI3B,EACJ,GAAI4B,IAAa,EACf5B,EAAO,IAAI6B,WACFD,IAAa,EACtB5B,EAAO,IAAI8B,WACFF,IAAa,EACtB5B,EAAO,IAAI+B,WACFH,IAAa,EACtB5B,EAAO,IAAIgC,OAEX,QAOF,GAJAhC,EAAK,UAAY,MAAMD,EAAY,QAAQ4B,EAAS,MAAM,EAAE,EAC5D3B,EAAK,UAAU2B,CAAQ,EACvB3B,EAAK,KAAK,EAGR2B,EAAS,YACTA,EAAS,MACT3B,EAAK,eAAe2B,EAAS,UAAU,EACvC,CACA,IAAMM,EAAgBjC,EAAK,kBAAkB2B,EAAS,MAAM,EAAE,EAC1DM,EACF/C,EAAa,QACX+C,EAAc,KACdN,EAAS,KAAK,KACdA,EAAS,KAAK,MACd9B,EAAA8B,EAAS,cAAT,KAAA9B,EAAwB,CAC1B,EAEAC,EAAO,KACL,6BACA,uCACA6B,CACF,CAEJ,CACF,GAEA,SAAsBO,GAAed,EAA6B,QAAA7B,EAAA,sBAChE,GAAI,CAACQ,EAAY,WAAW,EAAG,OAC/B,IAAMC,EAAO,IAAIC,EACjBD,EAAK,UAAY,MAAMD,EAAY,QAAQqB,EAAM,EAAE,EACnDpB,EAAK,aAAaoB,CAAK,EACvBpB,EAAK,KAAK,CACZ,GAEA,SAAsBmC,GACpBC,EACAlB,EACe,QAAA3B,EAAA,sBACf,GAAI,CAACQ,EAAY,WAAW,EAAG,OAC/B,IAAMC,EAAO,IAAIC,EACjBD,EAAK,UAAY,MAAMD,EAAY,QAAQ,EAC3CC,EAAK,QAAQoC,EAAYlB,CAAO,EAChClB,EAAK,KAAK,EACV,IAAMiC,EAAgBjC,EAAK,2BAA2BkB,CAAO,EACzDe,GACF/C,EAAa,QAAQ+C,GAAA,YAAAA,EAAe,KAAMG,CAAU,CAExD,GCrNA,IAAqBC,GAArB,KAA2B,CACzB,OAAa,UACXC,EACAC,EACAC,EACAC,EACwC,QAAAC,EAAA,sBAT5C,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAUI,IAAMC,GAA8BP,EAAA,KAAK,OAAL,YAAAA,EAAW,QAAQ,IACpDQ,IACW,CACR,QAASA,EAAE,GACX,KAAMA,EAAE,IACV,IAGEC,EACJ,MAAM,KAAKF,CAAU,EAAE,OAAS,EAAI,MAAM,KAAKA,CAAU,EAAE,OAAS,EAEtE,GAAIV,aACF,MAA0B,CACxB,GAAIF,EAAK,GAAKC,EAAM,GACpB,MAAO,CACL,GAAIA,EAAM,GACV,UAAWA,EAAM,IACnB,EACA,aAAaK,EAAAH,GAAA,YAAAA,EAAM,QAAN,KAAAG,EAAe,EAC5B,2BAA4BH,GAAA,MAAAA,EAAM,MAC9BA,EAAK,MAAQW,EACb,EACJ,YAAYP,EAAAJ,GAAA,YAAAA,EAAM,QAAQ,WAAd,KAAAI,EAA0B,GACtC,KAAML,CACR,EACK,GAAIA,aACT,MAA0B,CACxB,GAAIF,EAAK,GAAKC,EAAM,GACpB,MAAO,CACL,GAAIA,EAAM,EACZ,EACA,aAAaO,EAAAL,GAAA,YAAAA,EAAM,QAAN,KAAAK,EAAe,EAC5B,WACEE,GAAAD,EAAAN,GAAA,YAAAA,EAAM,MAAM,KAAZ,YAAAM,EAAgB,UAAhB,YAAAC,EAAyB,KAAMK,GAAMA,EAAE,SAAW,IAAM,UAAW,EACrE,WAAWZ,GAAA,YAAAA,EAAM,QAAQ,iBAAkB,EAC3C,cAAcA,GAAA,YAAAA,EAAM,QAAQ,iBAAkB,GAC9C,KAAMD,EACN,WAAWS,EAAAR,GAAA,YAAAA,EAAM,KAAK,KAAX,YAAAQ,EAAe,KAC5B,EACK,GAAIT,eACT,MAA0B,CACxB,GAAIF,EAAK,GAAKC,EAAM,GACpB,MAAO,CACL,GAAIA,EAAM,EACZ,EACA,KAAM,CACJ,GAAID,EAAK,GACT,KAAMA,EAAK,KACX,KAAMA,EAAK,KACX,KAAMA,EAAK,KACX,IAAKA,EAAK,GACZ,EACA,WAAYA,EAAK,OAAO,WACxB,SAAUY,EACV,KAAMV,CACR,CAEJ,GACF,EChEA,IAAMc,GAAN,KAAc,CACZ,OAAO,cAAcC,EAA8C,CALrE,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAMI,IAAMC,EAA8BP,EAAS,QAAQ,IAClD,IACW,CACR,QAAS,EAAE,GACX,KAAM,EAAE,MAAM,MAAM,IACtB,EACJ,EAEA,MAA0B,CACxB,GAAIA,EAAS,GACb,MAAO,CACL,GAAIA,EAAS,MAAM,EACrB,EACA,KAAM,CACJ,GAAIA,EAAS,KAAK,GAClB,KAAMA,EAAS,KAAK,KACpB,KAAMA,EAAS,KAAK,KACpB,KAAMA,EAAS,KAAK,KACpB,IAAKA,EAAS,KAAK,GACrB,EACA,WAAYA,EAAS,KAAK,OAAO,WACjC,YAAaA,EAAS,WAAW,KAAO,IAAIC,EAAAD,EAAS,cAAT,KAAAC,EAA4B,EACxE,2BAA4BD,EAAS,YACjCA,EAAS,YAAc,MAAM,KAAKO,CAAU,EAAE,OAC9C,EACJ,aAAaL,EAAAF,EAAS,cAAT,KAAAE,EAAwB,EACrC,aAAcF,EAAS,aACvB,YACEI,GAAAD,EAAAH,EAAS,aAAT,YAAAG,EAAqB,UAArB,YAAAC,EAA8B,iBAAkB,EAClD,eACEE,GAAAD,EAAAL,EAAS,aAAT,YAAAK,EAAqB,UAArB,YAAAC,EAA8B,iBAAkB,GAClD,WAAYN,EAAS,WACrB,SAAUA,EAAS,SACnB,SAAUO,EACV,eACA,UAAWP,EAAS,aACtB,CACF,CAEA,OAAO,UAAUA,EAAuD,CA7C1E,IAAAC,EA8CI,IAAMO,EAAUR,EAAS,MAAM,GAE/B,GAAIQ,EAAS,CACX,IAAMC,GAAQR,EAAA,KAAK,SAAL,YAAAA,EAAa,IAAIO,GAE/B,GAAI,CAACC,EAAO,CACVC,EAAO,IACL,8BAA8BF,IAC9B,oBACAR,CACF,EACA,MACF,CAEA,OAAIS,EAAM,OAAS,YACjB,OAGqB,CACrB,WAAYT,EAAS,WACrB,SAAUA,EAAS,SACnB,OAAQA,EAAS,KAAK,KACtB,KAAMS,EAAM,IACd,CACF,CACF,CACF,EAEOE,GAAQZ,GCtEf,IAAMa,GAAN,KAAmB,CACjB,OAAO,cAAcC,EAAsD,CACzE,IAAMC,EAAaD,EAAS,OAAO,KAAME,GAAMA,EAAE,CAAC,IAAM,QAAQ,EAC1DC,EAAaH,EAAS,OAAO,KAAME,GAAMA,EAAE,CAAC,IAAM,QAAQ,EAChE,MAAO,CACL,WAAYD,EACZ,WAAYE,CACd,CACF,CAEA,OAAO,cAAcH,EAAmD,CAd1E,IAAAI,EAAAC,EAeI,IAAMC,EAA8B,CAAC,EAE/BC,EAAW,KAAK,cAAcP,CAAQ,EAE5C,MAA0B,CACxB,GAAIA,EAAS,UACb,MAAO,CACL,GAAIA,EAAS,OACf,EACA,KAAM,CACJ,GAAIA,EAAS,KAAK,GAClB,KAAMA,EAAS,KAAK,KACpB,KAAMA,EAAS,KAAK,KACpB,KAAMA,EAAS,KAAK,KACpB,IAAKA,EAAS,KAAK,GACrB,EACA,WAAYA,EAAS,KAAK,OAAO,WACjC,YAAaO,EAAS,YAClBH,EAAAG,EAAS,WAAW,CAAC,EAAE,WAAvB,YAAAH,EAAiC,MACjC,EACJ,YAAaG,EAAS,YAAaF,EAAAE,EAAS,WAAW,CAAC,EAAE,OAAvB,YAAAF,EAA6B,MAAQ,EACxE,UAAWL,EAAS,OAAO,aAC3B,aAAcA,EAAS,OAAO,gBAC9B,WAAYA,EAAS,OAAO,OAC5B,SAAUA,EAAS,OAAO,SAC1B,SAAUM,EACV,oBACA,UAAW,MACb,CACF,CAEA,OAAO,UAAUN,EAA4D,CA9C/E,IAAAI,EA+CI,IAAMI,EAAUR,EAAS,QAEzB,GAAIQ,EAAS,CACX,IAAMC,GAAQL,EAAA,KAAK,SAAL,YAAAA,EAAa,IAAII,GAE/B,GAAI,CAACC,EAAO,CACVC,EAAO,IACL,8BAA8BF,IAC9B,sBACAR,CACF,EACA,MACF,CAEA,OAAIS,EAAM,OAAS,YACjB,OAGqB,CACrB,WAAYT,EAAS,OAAO,OAC5B,SAAUA,EAAS,OAAO,SAC1B,OAAQA,EAAS,KAAK,KACtB,KAAMS,EAAM,IACd,CACF,CACF,CACF,EAEOE,GAAQZ,GCxDf,IAAqBa,EAArB,KAAqC,CAGnC,OAAa,OAAQ,QAAAC,EAAA,sBAtBvB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAuBQJ,EAAA,KAAK,OAAL,MAAAA,EAAW,MACbF,EAAgB,sBAAsB,EACtC,OAAO,MAAM,GACX,sBACA,SACEO,EACAC,EACAC,EACA,QAAAR,EAAA,sBACAS,GAAsBD,CAAU,CAClC,GACF,EACA,OAAO,MAAM,GAAG,eAAgB,SAAgBE,EAAc,QAAAV,EAAA,sBAC5DW,GAAeD,CAAI,CACrB,GAAC,EACD,OAAO,MAAM,GACX,eACA,SAAgBE,EAAiBF,EAA6B,QAAAV,EAAA,sBAC5Da,GAAeH,EAAK,KAAK,CAC3B,GACF,EAEA,OAAO,MAAM,GACX,cACA,SAAgBI,EAAcC,EAAe,QAAAf,EAAA,sBAC3C,MAAMD,EAAgB,iBAAiBe,EAAOC,CAAI,CACpD,GACF,EAEA,OAAO,MAAM,GACX,cACA,SAAgBD,EAAcC,EAAeC,EAAqB,QAAAhB,EAAA,sBAChE,MAAMD,EAAgB,iBAAiBe,EAAOC,EAAMC,CAAU,CAChE,GACF,GAEId,EAAA,KAAK,QAAQ,IAAI,UAAU,IAA3B,MAAAA,EAA8B,QAChC,OAAO,MAAM,GACX,wBACA,SAAgBe,EAA2B,QAAAjB,EAAA,sBACzC,IAAMkB,EAAYC,GAAQ,UAAUF,CAAQ,EACtCG,EAAeD,GAAQ,cAAcF,CAAQ,EACnDI,EAA4BD,GAA8B,EAC1DE,GAAYJ,CAAS,EAEjBA,GAAaE,GACfG,EACEH,EAAa,UACbF,EAAU,KACVE,EAAa,MAAM,EACrB,CAEJ,GACF,GAGEjB,EAAA,KAAK,QAAQ,IAAI,mBAAmB,IAApC,MAAAA,EAAuC,QACzC,OAAO,MAAM,GACX,sBACA,SAAgBc,EAAgC,QAAAjB,EAAA,sBAC9C,IAAMkB,EAAYM,GAAa,UAAUP,CAAQ,EAC3CQ,EAAuBD,GAAa,cAAcP,CAAQ,EAChEI,EAA4BI,GAAkC,EAC9DH,GAAYJ,CAAS,CACvB,GACF,EAGF,MAAM,GACJ,8BACA,SAAgBQ,EAA8B,QAAA1B,EAAA,sBAC5C2B,GAAcD,CAAW,CAC3B,GACF,IAEA,OAAO,MAAM,GACX,cACA,SAAgBZ,EAAcC,EAAe,QAAAf,EAAA,sBApGrD,IAAAC,GAqGUA,EAAA,KAAK,SAAL,MAAAA,EAAa,KAAKF,EAAgB,YAAa,CAC7C,MAAO,cACP,KAAM,CAAE,KAAMe,EAAO,KAAMC,CAAK,CAClC,EACF,GACF,EACA,OAAO,MAAM,GACX,cACA,SAAgBD,EAAcC,EAAeC,EAAqB,QAAAhB,EAAA,sBA7G1E,IAAAC,GA8GUA,EAAA,KAAK,SAAL,MAAAA,EAAa,KAAKF,EAAgB,YAAa,CAC7C,MAAO,cACP,KAAM,CAAE,KAAMe,EAAO,KAAMC,EAAM,WAAYC,CAAW,CAC1D,EACF,GACF,GACIZ,EAAA,KAAK,QAAQ,IAAI,UAAU,IAA3B,MAAAA,EAA8B,QAChC,OAAO,MAAM,GACX,wBACA,SAAgBa,EAA2B,QAAAjB,EAAA,sBAvHrD,IAAAC,GAwHYA,EAAA,KAAK,SAAL,MAAAA,EAAa,KAAKF,EAAgB,YAAa,CAC7C,MAAO,wBACP,KAAM,CACJ,SAAUoB,GAAQ,cAAcF,CAAQ,EACxC,UAAWE,GAAQ,UAAUF,CAAQ,CACvC,CACF,EACF,GACF,GAGEZ,EAAA,KAAK,QAAQ,IAAI,mBAAmB,IAApC,MAAAA,EAAuC,QACzC,OAAO,MAAM,GACX,sBACA,SAAgBY,EAAgC,QAAAjB,EAAA,sBAtI1D,IAAAC,GAuIYA,EAAA,KAAK,SAAL,MAAAA,EAAa,KAAKF,EAAgB,YAAa,CAC7C,MAAO,sBACP,KAAM,CACJ,SAAUyB,GAAa,cAAcP,CAAQ,EAC7C,UAAWO,GAAa,UAAUP,CAAQ,CAC5C,CACF,EACF,GACF,EAGF,OAAO,MAAM,GAAG,gBAAiB,SAAgBW,EAAY,QAAA5B,EAAA,sBAlJnE,IAAAC,EAAAC,EAAAC,EAoJU,GAACF,EAAA,KAAK,QAAQ,IAAI,UAAU,IAA3B,MAAAA,EAA8B,SAC/B,GAACC,EAAA,KAAK,QAAQ,IAAI,mBAAmB,IAApC,MAAAA,EAAuC,WAExCC,EAAA,KAAK,SAAL,MAAAA,EAAa,KAAKJ,EAAgB,YAAa,CAC7C,MAAO,gBACP,KAAM,CACJ,kBAAmB,MAAM8B,GAAM,UAC7BD,EACAA,EAAK,iBAEL,MACF,EACA,UACF,CACF,GAEJ,GAAC,EAED,OAAO,MAAM,GACX,mBACA,SAAgBA,EAAcE,EAAY,QAAA9B,EAAA,sBAxKlD,IAAAC,EAAAC,EAAAC,EA0KY,GAACF,EAAA,KAAK,QAAQ,IAAI,UAAU,IAA3B,MAAAA,EAA8B,SAC/B,GAACC,EAAA,KAAK,QAAQ,IAAI,mBAAmB,IAApC,MAAAA,EAAuC,WAExCC,EAAA,KAAK,SAAL,MAAAA,EAAa,KAAKJ,EAAgB,YAAa,CAC7C,MAAO,mBACP,KAAM,CACJ,kBAAmB,MAAM8B,GAAM,UAC7BD,EACAA,EAAK,eAELE,CACF,EACA,UACF,CACF,GAEJ,GACF,EAEA,OAAO,MAAM,GACX,mBACA,SAAgBF,EAAcE,EAAY,QAAA9B,EAAA,sBA/LlD,IAAAC,EAAAC,EAAAC,EAiMY,GAACF,EAAA,KAAK,QAAQ,IAAI,UAAU,IAA3B,MAAAA,EAA8B,SAC/B,GAACC,EAAA,KAAK,QAAQ,IAAI,mBAAmB,IAApC,MAAAA,EAAuC,WAExCC,EAAA,KAAK,SAAL,MAAAA,EAAa,KAAKJ,EAAgB,YAAa,CAC7C,MAAO,mBACP,KAAM,CACJ,kBAAmB,MAAM8B,GAAM,UAC7BD,EACAA,EAAK,eAELE,CACF,EACA,UACF,CACF,GAEJ,GACF,EAEA,OAAO,MAAM,GACX,wBACA,SAAgBhB,EAAcgB,EAAY,QAAA9B,EAAA,sBAtNlD,IAAAC,EAAAC,EAAAC,EAAAC,GAuNUA,EAAA,KAAK,SAAL,MAAAA,EAAa,KAAKL,EAAgB,YAAa,CAC7C,MAAO,wBACP,KAAM,CACJ,QACEI,GAAAD,GAAAD,EAAA6B,GAAA,YAAAA,EAAM,MAAM,KAAZ,YAAA7B,EAAgB,UAAhB,YAAAC,EAAyB,KAAM6B,GAAMA,EAAE,SAAW,IAC/C,SADH,KAAA5B,EACa,EACf,MAAOW,EAAM,KACb,QAASA,EAAM,GACf,OAAQgB,EAAK,QAAQ,MACvB,CACF,EACF,GACF,EAEA,OAAO,MAAM,GACX,wBACA,SAAgBhB,EAAcgB,EAAY,QAAA9B,EAAA,sBAvOlD,IAAAC,EAAAC,EAAAC,EAAAC,GAwOUA,EAAA,KAAK,SAAL,MAAAA,EAAa,KAAKL,EAAgB,YAAa,CAC7C,MAAO,wBACP,KAAM,CACJ,QACEI,GAAAD,GAAAD,EAAA6B,GAAA,YAAAA,EAAM,MAAM,KAAZ,YAAA7B,EAAgB,UAAhB,YAAAC,EAAyB,KAAM6B,GAAMA,EAAE,SAAW,IAC/C,SADH,KAAA5B,EACa,EACf,MAAOW,EAAM,KACb,QAASA,EAAM,GACf,OAAQgB,EAAK,QAAQ,MACvB,CACF,EACF,GACF,EAEA,OAAO,MAAM,GACX,kBACA,SAAgBhB,EAAcgB,EAAY,QAAA9B,EAAA,sBAxPlD,IAAAC,EAAAC,EAAAC,EAAAC,GAyPUA,EAAA,KAAK,SAAL,MAAAA,EAAa,KAAKL,EAAgB,YAAa,CAC7C,MAAO,kBACP,KAAM,CACJ,QACEI,GAAAD,GAAAD,EAAA6B,GAAA,YAAAA,EAAM,MAAM,KAAZ,YAAA7B,EAAgB,UAAhB,YAAAC,EAAyB,KAAM6B,GAAMA,EAAE,SAAW,IAC/C,SADH,KAAA5B,EACa,EACf,MAAOW,EAAM,KACb,QAASA,EAAM,GACf,OAAQgB,EAAK,QAAQ,MACvB,CACF,EACF,GACF,EAEA,OAAO,MAAM,GACX,8BACA,SAAgBJ,EAA8B,QAAA1B,EAAA,sBAzQtD,IAAAC,GA0QUA,EAAA,KAAK,SAAL,MAAAA,EAAa,KAAKF,EAAgB,YAAa,CAC7C,MAAO,8BACP,KAAM,CACJ,YAAa2B,CACf,CACF,EACF,GACF,EAEJ,GAEA,OAAO,uBAAwB,CArRjC,IAAAzB,GAsRIA,EAAA,KAAK,SAAL,MAAAA,EAAa,GACXF,EAAgB,YAChB,SAAgBiC,EAAkB,QAAAhC,EAAA,sBAChC,OAAQgC,EAAQ,MAAO,CACrB,IAAK,8BACHL,GAAcK,EAAQ,KAAK,WAAW,EACtC,MACF,IAAK,sBACHX,EAA4BW,EAAQ,KAAK,UAAsB,EAC/DV,GAAYU,EAAQ,KAAK,SAAS,EAClC,MACF,IAAK,wBACHX,EACEW,EAAQ,KAAK,UAEf,EACAV,GAAYU,EAAQ,KAAK,SAAS,EAClCT,EACES,EAAQ,KAAK,SAAS,UACtBA,EAAQ,KAAK,UAAU,KACvBA,EAAQ,KAAK,SAAS,MAAM,EAC9B,EACA,MACF,IAAK,mBACHX,EACEW,EAAQ,KAAK,kBACbA,EAAQ,KAAK,QACf,EACAT,EACES,EAAQ,KAAK,kBAAkB,UAC/BA,EAAQ,KAAK,kBAAkB,UAC/BA,EAAQ,KAAK,kBAAkB,OACjC,EACA,MACF,IAAK,gBACL,IAAK,mBACHX,EACEW,EAAQ,KAAK,kBACbA,EAAQ,KAAK,QACf,EACA,MACF,IAAK,wBACL,IAAK,wBACL,IAAK,kBACHC,GACED,EAAQ,KAAK,OACbA,EAAQ,KAAK,MACbA,EAAQ,KAAK,MACf,EACAT,EACES,EAAQ,KAAK,OACbA,EAAQ,KAAK,MACbA,EAAQ,KAAK,OACf,EACA,KACJ,CACF,IAEJ,CAEA,OAAa,iBAAiBlB,EAAcC,EAAe,QAAAf,EAAA,sBAlV7D,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA6B,EAAAC,EAmVQC,EAAY,WAAW,GAEvBtB,EAAM,MACN,CAACA,EAAM,kBACPX,GAAAD,GAAAD,EAAAc,EAAK,SAAL,YAAAd,EAAa,aAAb,YAAAC,EAAyB,KAAzB,YAAAC,EAA6B,SAAU,IACvCE,GAAAD,EAAA,KAAK,SAAL,YAAAA,EAAa,UAAb,MAAAC,EAAsB,SAEtBgC,GAAYvB,EAAM,KAAM,KAAK,OAAO,QAAQ,OAAO,GAIrDqB,GAAAD,EAAAnB,EAAK,SAAL,YAAAmB,EAAa,aAAb,MAAAC,EAAyB,IACzBrB,EAAM,IACNwB,EAAK,iBAAiBxB,GAAA,YAAAA,EAAO,IAAI,GAEjCyB,GAAezB,CAAK,CAExB,GACF,EAlVqB0B,GAArBzC,EAAqByC,GACZ,YAAc,yBCjBvB,IAAqBC,GAArB,KAA0B,CACxB,OAAa,UACXC,EACAC,EACAC,EACAC,EACwC,QAAAC,EAAA,sBAT5C,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAUI,IAAMC,GAA8BP,EAAA,KAAK,OAAL,YAAAA,EAAW,QAAQ,IACpDQ,IACW,CACR,QAASA,EAAE,GACX,KAAMA,EAAE,IACV,IAGEC,EACJ,MAAM,KAAKF,CAAU,EAAE,OAAS,EAAI,MAAM,KAAKA,CAAU,EAAE,OAAS,EAEtE,GAAIV,aACF,MAA0B,CACxB,GAAIF,EAAY,GAAKC,EAAM,GAC3B,MAAO,CACL,GAAIA,EAAM,GACV,UAAWA,EAAM,IACnB,EACA,aAAaK,EAAAH,GAAA,YAAAA,EAAM,QAAN,KAAAG,EAAe,EAC5B,2BAA4BH,GAAA,MAAAA,EAAM,MAC9BA,EAAK,MAAQW,EACb,EACJ,YAAYP,EAAAJ,GAAA,YAAAA,EAAM,QAAQ,WAAd,KAAAI,EAA0B,GACtC,KAAML,CACR,EACK,GAAIA,aACT,MAA0B,CACxB,GAAIF,EAAY,GAAKC,EAAM,GAC3B,MAAO,CACL,GAAIA,EAAM,EACZ,EACA,KAAM,CACJ,GAAID,EAAY,GAChB,KAAMA,EAAY,KAClB,KAAMA,EAAY,KAClB,KAAMA,EAAY,KAClB,IAAKA,EAAY,GACnB,EACA,aAAaQ,EAAAL,GAAA,YAAAA,EAAM,QAAN,KAAAK,EAAe,EAC5B,WACEE,GAAAD,EAAAN,GAAA,YAAAA,EAAM,MAAM,KAAZ,YAAAM,EAAgB,UAAhB,YAAAC,EAAyB,KAAMK,GAAMA,EAAE,SAAW,IAAM,UAAW,EACrE,WAAWZ,GAAA,YAAAA,EAAM,QAAQ,iBAAkB,EAC3C,cAAcA,GAAA,YAAAA,EAAM,QAAQ,iBAAkB,GAC9C,WAAY,OACZ,SAAUS,EACV,KAAMV,EACN,WAAWS,EAAAR,GAAA,YAAAA,EAAM,KAAK,KAAX,YAAAQ,EAAe,KAC5B,CAEJ,GACF,EC5CA,IAAqBK,EAArB,KAAoC,CAGlC,OAAa,OAAQ,QAAAC,EAAA,sBAnBvB,IAAAC,GAoBQA,EAAA,KAAK,OAAL,MAAAA,EAAW,MACbF,EAAe,sBAAsB,EACrC,OAAO,MAAM,GACX,oBACA,SAAgBG,EAA8B,QAAAF,EAAA,sBAxBtD,IAAAC,EAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAyBU,IAAIC,GAAWf,GAAAD,GAAAF,EAAAC,GAAA,YAAAA,EAAiB,QAAjB,YAAAD,EAAwB,OAAxB,YAAAE,EAA8B,UAA9B,YAAAC,EAAuC,KACtD,GAAI,CAACe,EACH,GAAIjB,EAAgB,aAClBiB,EAAW,kBAEX,QAIJ,GAAIA,IAAa,eAAiBA,IAAa,oBAAqB,CAClE,IAAMC,EAAW,MAAMC,GAAK,UAC1BnB,EAAgB,KAChBA,EAAgB,eAEhBA,EAAgB,IAClB,EACAoB,EAA4BF,GAAuB,EACnDG,GACEf,GAAAD,GAAAD,GAAAD,EAAAH,EAAgB,OAAhB,YAAAG,EAAsB,MAAM,KAA5B,YAAAC,EAAgC,UAAhC,YAAAC,EAAyC,KACtCiB,IAAMA,GAAE,SAAW,IACpB,SAFF,KAAAhB,EAEY,EACZN,EAAgB,MAAM,KACtBA,EAAgB,MAAM,EACxB,CACF,CACA,GAAIiB,IAAa,cAAe,CAC9B,IAAMC,EAAW,MAAMC,GAAK,UAC1BnB,EAAgB,KAChBA,EAAgB,KAAK,eAErBA,EAAgB,IAClB,EACAoB,EAA4BF,GAAuB,CACrD,EACID,IAAa,gBAAkBA,EAAS,QAAQ,QAAQ,EAAI,KAC9DM,IACEb,GAAAD,GAAAD,GAAAD,EAAAP,EAAgB,OAAhB,YAAAO,EAAsB,MAAM,KAA5B,YAAAC,EAAgC,UAAhC,YAAAC,EAAyC,KACtCa,GAAMA,EAAE,SAAW,IACpB,SAFF,KAAAZ,EAEY,EACZV,EAAgB,MAAM,MACtBY,IAAAD,GAAAX,GAAA,YAAAA,EAAiB,QAAjB,YAAAW,GAAwB,OAAxB,YAAAC,GAA8B,YAChC,EACAS,GACEL,GAAAD,GAAAD,GAAAD,EAAAb,EAAgB,OAAhB,YAAAa,EAAsB,MAAM,KAA5B,YAAAC,EAAgC,UAAhC,YAAAC,EAAyC,KACtCO,GAAMA,EAAE,SAAW,IACpB,SAFF,KAAAN,EAEY,EACZhB,EAAgB,MAAM,KACtBA,EAAgB,MAAM,EACxB,EAEJ,GACF,EACA,OAAO,MAAM,GACX,sBACA,SACEwB,EACAC,EACAC,EACA,QAAA5B,EAAA,sBACA6B,GAAsBD,CAAU,CAClC,GACF,EACA,OAAO,MAAM,GAAG,eAAgB,SAAgBE,EAAc,QAAA9B,EAAA,sBAC5D+B,GAAeD,CAAI,CACrB,GAAC,EACD,OAAO,MAAM,GACX,eACA,SAAgBE,EAAiBF,EAA6B,QAAA9B,EAAA,sBAC5DiC,GAAeH,EAAK,KAAK,CAC3B,GACF,EAEA,OAAO,MAAM,GACX,cACA,SAAgBI,EAAcC,EAAe,QAAAnC,EAAA,sBAC3C,MAAMD,EAAe,iBAAiBmC,EAAOC,CAAI,CACnD,GACF,EAEA,OAAO,MAAM,GACX,cACA,SAAgBD,EAAcC,EAAe,QAAAnC,EAAA,sBAC3C,MAAMD,EAAe,iBAAiBmC,EAAOC,CAAI,CACnD,GACF,EAEA,MAAM,GACJ,8BACA,SAAgBC,EAA8B,QAAApC,EAAA,sBAC5CqC,GAAcD,CAAW,CAC3B,GACF,IAEA,OAAO,MAAM,GACX,cACA,SAAgBF,EAAcC,EAAe,QAAAnC,EAAA,sBAxHrD,IAAAC,GAyHUA,EAAA,KAAK,SAAL,MAAAA,EAAa,KAAKF,EAAe,YAAa,CAC5C,MAAO,cACP,KAAM,CAAE,KAAMmC,EAAO,KAAMC,CAAK,CAClC,EACF,GACF,EACA,OAAO,MAAM,GACX,cACA,SAAgBD,EAAcC,EAAe,QAAAnC,EAAA,sBAjIrD,IAAAC,GAkIUA,EAAA,KAAK,SAAL,MAAAA,EAAa,KAAKF,EAAe,YAAa,CAC5C,MAAO,cACP,KAAM,CAAE,KAAMmC,EAAO,KAAMC,CAAK,CAClC,EACF,GACF,EAEJ,GAEA,OAAO,uBAAwB,CA3IjC,IAAAlC,GA4IIA,EAAA,KAAK,SAAL,MAAAA,EAAa,GACXF,EAAe,YACf,SAAgBuC,EAAkB,QAAAtC,EAAA,sBAChC,OAAQsC,EAAQ,MAAO,CACrB,IAAK,8BACHD,GAAcC,EAAQ,KAAK,WAAW,EACtC,KACJ,CACF,IAEJ,CAEA,OAAa,iBAAiBJ,EAAcC,EAAe,QAAAnC,EAAA,sBAxJ7D,IAAAC,EAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAyJQ+B,EAAY,WAAW,GAEvBL,EAAM,MACN,CAACA,EAAM,kBACP9B,GAAAD,GAAAF,EAAAkC,EAAK,SAAL,YAAAlC,EAAa,aAAb,YAAAE,EAAyB,KAAzB,YAAAC,EAA6B,SAAU,IACvCE,GAAAD,EAAA,KAAK,SAAL,YAAAA,EAAa,UAAb,MAAAC,EAAsB,SAEtBkC,GAAYN,EAAM,KAAM,KAAK,OAAO,QAAQ,OAAO,GAIrD1B,GAAAD,EAAA4B,EAAK,SAAL,YAAA5B,EAAa,aAAb,MAAAC,EAAyB,IACzB0B,EAAM,IACNO,EAAK,iBAAiBP,GAAA,YAAAA,EAAO,IAAI,GAEjCQ,GAAeR,CAAK,CAExB,GACF,EA3JqBS,GAArB5C,EAAqB4C,GACZ,YAAc,yBCbvB,IAAqBC,GAArB,KAAgC,CAG9B,OAAa,OAAQ,QAAAC,EAAA,sBACf,KAAK,OAAO,KAAO,QACrBC,GAAgB,MAAM,EACb,KAAK,OAAO,KAAO,QAC5BC,GAAe,MAAM,EAGvB,OAAO,MAAM,GAAG,kBAAmB,SAAgBC,EAAiB,QAAAH,EAAA,sBAClEI,GAAeD,CAAO,CACxB,GAAC,CACH,GACF,EAdqBJ,GACZ,YAAc,yBCAvB,IAAqBM,GAArB,cAAgD,eAAgB,CAC9D,WAAW,gBAAiB,CAC1B,OAAO,YAAY,MAAM,eAAgB,CACvC,MAAOC,EAAM,IAAI,+BAA+B,EAChD,SAAU,kDACV,GAAI,GAAGC,mBACP,MAAO,IACP,OAAQ,MACR,cAAe,EACjB,CAAC,CACH,CAEA,kBAAkBC,EAAM,CACtBA,EAAK,KAAK,oCAAoC,EAAE,GAAG,QAAS,KAAK,gBAAgB,EACjFA,EAAK,KAAK,oCAAoC,EAAE,GAAG,QAAS,KAAK,oBAAoB,EACrFA,EAAK,KAAK,oCAAoC,EAAE,GAAG,QAAS,IAAYC,EAAA,uBAClE,MAAM,KAAK,qBAAqB,IAClC,KAAK,MAAM,CAEf,EAAC,CACH,CAGA,SAAU,CAEV,CAEA,kBAAmB,CAhCrB,IAAAC,EAiCI,OAAAC,EAAW,YAAY,GAChBD,EAAA,GAAG,gBAAH,YAAAA,EAAkB,KACvBJ,EAAM,IAAI,+BAA+B,EAE7C,CAGA,cAAcM,EAAaC,EAAe,CAE1C,CAEA,sBAAuB,CACrB,IAAMC,EAAW,8BACjB,eACE,KAAK,UAAUH,EAAW,SAAU,KAAM,CAAC,EAC3C,YACAG,CACF,CACF,CAEA,uBAAuBC,EAAM,CArD/B,IAAAL,EAsDI,OAAI,OAAOK,GAAS,WAClBA,EAAO,KAAK,MAAMA,CAAI,GAExBJ,EAAW,YAAY,EACvBK,EAAa,KAAKD,CAAI,GACfL,EAAA,GAAG,gBAAH,YAAAA,EAAkB,KACvBJ,EAAM,IAAI,gCAAgC,EAE9C,CAEM,sBAAuB,QAAAG,EAAA,sBAC3B,IAAMQ,EAAU,MAAM,eAAe,kCAAmC,CACtE,OAAQ,kBACR,KAAM,qBACR,CAAC,EAoCD,OAAO,MAnCM,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC5C,IAAI,OACF,CACE,MAAOb,EAAM,IAAI,mCAAmC,EACpD,QAASW,EACT,QAAS,CACP,OAAQ,CACN,KAAM,qCACN,MAAOX,EAAM,IAAI,iBAAiB,EAClC,SAAWE,GAAS,CA9ElC,IAAAE,EAgFgB,IAAMU,EAAOZ,EAAK,KAAK,MAAM,EAAE,CAAC,EAChC,GAAI,CAACY,EAAK,KAAK,MAAM,OACnB,OAAOV,EAAA,GAAG,gBAAH,YAAAA,EAAkB,MACvBJ,EAAM,IAAI,0BAA0B,GAExC,iBAAiBc,EAAK,KAAK,MAAM,CAAC,CAAC,EAAE,KAAML,GAAS,CAClD,KAAK,uBAAuBA,CAAI,EAChCG,EAAQ,EAAI,CACd,CAAC,CACH,CACF,EACA,GAAI,CACF,KAAM,+BACN,MAAOZ,EAAM,IAAI,iBAAiB,EAClC,SAAWE,GAASU,EAAQ,EAAK,CACnC,CACF,EACA,QAAS,QACX,EACA,CACE,MAAO,GACT,CACF,EAAE,OAAO,EAAI,CACf,CAAC,CAEH,GACF,ECxGO,SAASG,GAAaC,EAAe,CAC1C,IAAMC,EAAmB,CAAC,EAE1B,QAAWC,KAAWF,EAAU,CAC9B,IAAMG,EAAUD,EAEhB,OAAW,CAACE,EAAKC,CAAK,IAAM,KAAK,SAAiB,SAAS,QAAQ,EACjE,GAAID,IAAQ,GAAGE,KAAaH,IAAW,CACrC,IAAMI,EAAe,KAAK,SAAS,IAAID,EAAWH,CAAO,EAEnDK,EAAgB,CAAC,EACnBC,EAAU,GACd,GAAIJ,EAAM,QAAS,CACjBI,EAAU,GACV,QAAWC,KAAaL,EAAM,QAC5BG,EAAc,KAAK,CACjB,IAAKE,EAAU,SAAS,EACxB,MAAOL,EAAM,QAAQK,CAAS,EAC9B,SAAUA,EAAU,SAAS,IAAMH,CACrC,CAAC,CAEL,CAEAN,EAAiB,KAAK,CACpB,OAAQI,EAAM,UAAYA,EAAM,UAAYA,EAAM,OAClD,IAAKA,EAAM,IACX,KAAMA,EAAM,KAAK,KACjB,UAAWA,EAAM,KAAK,OAAS,UAC/B,SAAUA,EAAM,KAAK,OAAS,UAAY,CAACA,EAAM,QACjD,QAASI,EACT,YAAa,KAAK,KAAK,OAAOJ,EAAM,IAAI,EACxC,KAAMA,EAAM,KAAO,KAAK,KAAK,OAAOA,EAAM,IAAI,EAAI,GAClD,QAASA,EAAM,QAAUA,EAAM,QAAU,CAAC,EAC1C,MAAOE,EACP,cAAeC,CACjB,CAAC,CACH,CAEJ,CAEA,OAAOP,CACT,CAEO,SAASU,GAAaC,EAAe,CAC1C,QAAWR,KAAOQ,EAAU,CAC1B,IAAMC,EAAWT,EAAI,MAAM,GAAG,EAC9B,KAAK,SAAS,IAAIS,EAAS,CAAC,EAAGA,EAAS,CAAC,EAAGD,EAASR,CAAG,CAAC,CAC3D,CACF,CC9CA,IAAqBU,GAArB,cAAmD,eAAgB,CACjE,WAAW,gBAAiB,CAC1B,OAAO,YAAY,MAAM,eAAgB,CACvC,MAAOC,EAAM,IAAI,kCAAkC,EACnD,SAAU,kDACV,GAAI,GAAGC,uBACP,MAAO,IACP,OAAQ,MACR,cAAe,EACjB,CAAC,CACH,CAEA,aAAaC,EAAe,CAC1B,OAAOC,GAAaD,CAAQ,CAC9B,CAGA,SAAU,CACR,IAAMA,EAAW,CACfE,EACAC,EACF,EAEA,MAAO,CACL,QAAS,KAAK,aAAaH,CAAQ,CACrC,CACF,CAGA,cAAcI,EAAaC,EAAe,CACxCC,GAAaD,CAAQ,CACvB,CACF,EC1BA,IAAME,GAAN,KAAqB,CAMnB,OAAO,UAAiB,CACtB,KAAK,SAAS,SAAS,GAAGC,IAAa,GAAGC,KAAc,CACtD,KAAMC,EAAM,IAAI,iBAAiB,EACjC,KAAMA,EAAM,IAAI,iBAAiB,EACjC,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,OACR,CAAC,EAED,KAAK,SAAS,SAAS,GAAGF,IAAa,GAAGG,KAA0B,CAClE,KAAMD,EAAM,IAAI,6BAA6B,EAC7C,KAAMA,EAAM,IAAI,6BAA6B,EAC7C,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,OACR,CAAC,EAED,KAAK,SAAS,aAAa,GAAGF,IAAa,qBAAsB,CAC/D,KAAME,EAAM,IAAI,+BAA+B,EAC/C,MAAOA,EAAM,IAAI,oBAAoB,EACrC,KAAM,aACN,MAAO,QACP,KAAME,GACN,WAAY,EACd,CAAC,EAED,KAAK,SAAS,aAAa,GAAGJ,IAAa,wBAAyB,CAClE,KAAME,EAAM,IAAI,kCAAkC,EAClD,MAAOA,EAAM,IAAI,oBAAoB,EACrC,KAAM,aACN,MAAO,QACP,KAAMG,GACN,WAAY,EACd,CAAC,EAED,KAAK,SAAS,SACZ,GAAGL,IACH,GAAGM,IACH,CACE,KAAMJ,EAAM,IAAI,6BAA6B,EAC7C,KAAMA,EAAM,IAAI,6BAA6B,EAC7C,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,OACR,CACF,EAEA,KAAK,SAAS,SACZ,GAAGF,IACH,GAAGO,KACH,CACE,KAAML,EAAM,IAAI,qCAAqC,EACrD,KAAMA,EAAM,IAAI,qCAAqC,EACrD,MAAO,QACP,OAAQ,GACR,QAAS,GACT,KAAM,OACR,CACF,CACF,CACF,EAEOM,GAAQT,GC1Ef,MAAM,KAAK,OAAQ,UAAkB,QAAAU,EAAA,sBACnCC,GAAe,SAAS,EAExBC,EAAO,IAAI,sBAAuB,aAAa,CACjD,GAAC,EAED,MAAM,KAAK,QAAS,UAAkB,QAAAF,EAAA,sBAbtC,IAAAG,EAcE,GAAK,KAAK,SAAS,IAAI,GAAGC,IAAa,GAAGC,IAAY,EAItD,KAAIF,EAAA,KAAK,OAAL,MAAAA,EAAW,KAAM,CACdG,EAAiB,iBACpB,MAAMA,EAAiB,cAAc,GAIvC,IAAMC,EAAkB,MAAMD,EAAiB,mBAAmB,EAC9DC,IACFC,EAAW,SAASD,CAAe,EACnCD,EAAiB,mCAAmC,EAExD,CACAG,GAAW,MAAM,EAEjBP,EAAO,IAAI,eAAgB,cAAc,EAC3C,GAAC",
  "names": ["require_dayjs_min", "__commonJSMin", "exports", "module", "t", "e", "n", "r", "i", "s", "u", "a", "o", "f", "h", "c", "d", "l", "$", "y", "M", "m", "v", "g", "D", "p", "_", "S", "w", "O", "T", "MODULE_NAME", "MODULE_ID", "STORAGE_NAME", "OPT_ENABLE", "OPT_ENABLE_EXPORT_JSON", "OPT_SETTINGS_DICE_STREAK_ENABLE", "OPT_SETTINGS_DICE_STREAK_TO_CHAT_ENABLE", "SimpleCalendarIntegration", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "Logger", "description", "module", "data", "Logger_default", "import_dayjs", "Dates", "currentDate", "dayjs", "Dates_default", "_EncounterJournal", "_a", "__async", "encounterId", "title", "Dates_default", "SimpleCalendarIntegration", "journalEntry", "e", "Logger_default", "_b", "data", "flagName", "flagValue", "journalEntryPage", "sortValue", "sortedJournalsByName", "a", "b", "update", "EncounterJournal", "EncounterJournal_default", "CombatFlag", "item", "_a", "_b", "actorId", "__async", "flagValue", "h", "flagValueSearchAcrossCombats", "f", "flagName", "data", "ValidHeals", "ValidAttacks", "ValidRollEvent", "Stat", "encounterId", "date", "Dates_default", "encounter", "_a", "targetName", "tokenId", "killData", "combatantStat", "Logger_default", "actor", "healthData", "enemy", "initiative", "__async", "tokenImage", "newCombatant", "currentCombatant", "f", "a", "b", "_b", "attackType", "ValidAttacks", "ValidHeals", "type", "ValidRollEvent", "id", "name", "thumb", "currentRound", "actorId", "StatManager_default", "top", "partyStats", "combatantAttacks", "combatantTotalDamage", "m", "combatantTotalDamagePerRound", "encounterRoundTotals", "individual", "rounds", "round", "mostKills", "max", "obj", "mostHealing", "mostSupportActions", "mostBattlefieldActions", "mostDamageInOneTurn", "result", "maxDamage", "highestAvgDamage", "highestMaxDamage", "_c", "totalDamage", "totalDamagePerRound", "accu", "item", "res", "value", "averageDamagePerRound", "lowestDamagePerRound", "highestDamagePerRound", "previousValue", "currentValue", "xs", "key", "rv", "x", "accumulator", "Trans", "translationKey", "Trans_default", "EncounterRenderer", "encounter", "__async", "_a", "_b", "_c", "_d", "renderData", "combatant", "event", "kill", "downedCount", "health", "round", "total", "roundData", "f", "template_file", "attackType", "stat", "Stat", "iconName", "iconDescription", "Trans_default", "EncounterRenderer_default", "StatManager", "CombatFlag", "STORAGE_NAME", "actorId", "__async", "encounterStat", "encounter", "_a", "currentEncounter", "diff", "Logger_default", "markup", "EncounterRenderer_default", "EncounterJournal_default", "StatManager_default", "MidiQolStat", "Stat", "workflow", "_a", "Logger_default", "combatantStat", "newCombatantEvent", "DND5eStat", "Stat", "workflow", "_a", "Logger_default", "combatantStat", "f", "newCombatantEvent", "CampaignRenderer", "campaignStats", "__async", "renderData", "template_file", "data", "statList", "m", "im", "unique", "item", "eventName", "event", "statItem", "dateStatList", "f", "entry", "statEntry", "campaignStatEntry", "metric", "healTrack", "MODULE_ID", "OPT_SETTINGS_DICE_STREAK_ENABLE", "rollStreak", "kill", "diceTrack", "type", "flattenedResults", "_a", "prev", "cur", "result", "key", "value", "CampaignRenderer_default", "Chat", "message", "__async", "gmsToWhisper", "u", "chatData", "_Gamemaster", "f", "currentFlagValue", "campaignStats", "CampaignStat", "Gamemaster", "Gamemaster_default", "CampaignStat", "actorName", "tokenName", "__async", "campaignStats", "date", "Dates_default", "kill", "dateEntry", "f", "itemLink", "spellName", "total", "heal", "type", "flavor", "dice", "result", "actorId", "MODULE_ID", "OPT_SETTINGS_DICE_STREAK_ENABLE", "logIndex", "fi", "actorStreakLog", "OPT_SETTINGS_DICE_STREAK_TO_CHAT_ENABLE", "Chat", "Trans_default", "customEvent", "_a", "_b", "_c", "customDataEvent", "partyStat", "encounterId", "campaignPartyEncounterStat", "__spreadProps", "__spreadValues", "Gamemaster_default", "markup", "CampaignRenderer_default", "EncounterJournal_default", "PF2eStat", "Stat", "workflow", "_a", "Logger_default", "combatantStat", "f", "newCombatantEvent", "ReadySetRollStat", "Stat", "workflow", "_a", "_b", "Logger_default", "combatantStat", "lastCombatantEvent", "newCombatantEvent", "OnCustomEvent", "customEvent", "CampaignStat", "OnTrackRollStreak", "result", "actorName", "actorId", "__async", "OnTrackDiceRoll", "alias", "flavor", "OnDeleteCombat", "combat", "_a", "Logger_default", "StatManager_default", "stat", "Stat", "OnUpdateCombat", "currentRound", "OnRenderCombatTracker", "combatData", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "addEnemies", "combatantsList", "combatant", "tokenId", "initiative", "actor", "OnCreateCombat", "encounterId", "EncounterJournal_default", "OnTrackDice", "diceTrackParsed", "OnEncounterWorkflowComplete", "workflow", "chatType", "DND5eStat", "PF2eStat", "MidiQolStat", "ReadySetRollStat", "combatantStat", "OnUpdateHealth", "OnTrackKill", "targetName", "DND5e", "item", "actor", "type", "roll", "__async", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "enemiesHit", "m", "numberOfEnemiesHit", "f", "MidiQol", "workflow", "_a", "_b", "_c", "_d", "_e", "_f", "enemiesHit", "actorId", "actor", "Logger_default", "MidiQol_default", "ReadySetRoll", "workflow", "attackData", "f", "damageData", "_a", "_b", "enemiesHit", "rollData", "actorId", "actor", "Logger_default", "ReadySetRoll_default", "_SetupHooksDND5e", "__async", "_a", "_b", "_c", "_d", "_e", "_combatTracker", "_element", "combatData", "OnRenderCombatTracker", "data", "OnCreateCombat", "_combat", "OnUpdateCombat", "actor", "diff", "diffResult", "workflow", "rollCheck", "MidiQol_default", "midiWorkflow", "OnEncounterWorkflowComplete", "OnTrackDice", "OnTrackRollStreak", "ReadySetRoll_default", "readySetRollWorkflow", "customEvent", "OnCustomEvent", "item", "DND5e", "roll", "f", "payload", "OnTrackDiceRoll", "_f", "_g", "StatManager_default", "OnTrackKill", "Stat", "OnUpdateHealth", "SetupHooksDND5e", "PF2e", "chatMessage", "actor", "type", "roll", "__async", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "enemiesHit", "m", "numberOfEnemiesHit", "f", "_SetupHooksPF2e", "__async", "_a", "chatMessagePF2e", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "_n", "_o", "_p", "_q", "chatType", "workflow", "PF2e", "OnEncounterWorkflowComplete", "OnTrackRollStreak", "f", "OnTrackDiceRoll", "_combatTracker", "_element", "combatData", "OnRenderCombatTracker", "data", "OnCreateCombat", "_combat", "OnUpdateCombat", "actor", "diff", "customEvent", "OnCustomEvent", "payload", "StatManager_default", "OnTrackKill", "Stat", "OnUpdateHealth", "SetupHooksPF2e", "SetupHooks", "__async", "SetupHooksDND5e", "SetupHooksPF2e", "_combat", "OnDeleteCombat", "CampaignStatsPanel", "Trans_default", "MODULE_NAME", "html", "__async", "_a", "Gamemaster_default", "_event", "formData", "filename", "json", "CampaignStat", "content", "resolve", "reject", "form", "SettingsList", "settings", "chatSettingsList", "element", "setting", "key", "value", "MODULE_ID", "settingValue", "choicesSelect", "isArray", "keyChoice", "UpdateObject", "formData", "keySplit", "CampaignTrackingPanel", "Trans_default", "MODULE_NAME", "settings", "SettingsList", "OPT_SETTINGS_DICE_STREAK_ENABLE", "OPT_SETTINGS_DICE_STREAK_TO_CHAT_ENABLE", "_event", "formData", "UpdateObject", "ModuleSettings", "MODULE_ID", "OPT_ENABLE", "Trans_default", "OPT_ENABLE_EXPORT_JSON", "CampaignStatsPanel", "CampaignTrackingPanel", "OPT_SETTINGS_DICE_STREAK_ENABLE", "OPT_SETTINGS_DICE_STREAK_TO_CHAT_ENABLE", "ModuleSettings_default", "__async", "ModuleSettings_default", "Logger_default", "_a", "MODULE_ID", "OPT_ENABLE", "EncounterJournal_default", "campaignJournal", "Gamemaster_default", "SetupHooks"]
}
